/// <remarks>
/// This file contains the single-file version of the MdlpApiClient project, generated automatically.
/// </remarks>
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.349.0.
namespace MdlpApiClient.Xsd
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>Тип договора при реализации
    ///                1 - купли продажи
    ///                2 - комиссия
    ///                3 - агентский
    ///                4 – передача на безвозмездной основе
    ///                5 – возврат контрактному производителю
    ///                6 – государственное лекарственное обеспечение
    ///                7 - договор консигнации
    ///                8 - собственные стредства</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Тип договора при реализации 1 - купли продажи 2 - комиссия 3 - агентский 4 – пере" +
        "дача на безвозмездной основе 5 – возврат контрактному производителю 6 – государс" +
        "твенное лекарственное обеспечение 7 - договор консигнации 8 - собственные стредс" +
        "тва")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("contract_type_enum", Namespace="")]
    public enum Contract_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }
    
    /// <summary>
    /// <para>Код таможенной процедуры
    ///                40 - выпуск для внутреннего потребления
    ///                93 - уничтожение
    ///                94 - отказ в пользу государства
    ///                31 - реэкспорт
    ///                10 - экспорт
    ///                80 - таможенный транзит</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Код таможенной процедуры 40 - выпуск для внутреннего потребления 93 - уничтожение" +
        " 94 - отказ в пользу государства 31 - реэкспорт 10 - экспорт 80 - таможенный тра" +
        "нзит")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("custom_procedure_code_enum", Namespace="")]
    public enum Custom_Procedure_Code_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("40")]
        Item40,
        
        [System.Xml.Serialization.XmlEnumAttribute("93")]
        Item93,
        
        [System.Xml.Serialization.XmlEnumAttribute("94")]
        Item94,
        
        [System.Xml.Serialization.XmlEnumAttribute("31")]
        Item31,
        
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        [System.Xml.Serialization.XmlEnumAttribute("80")]
        Item80,
    }
    
    /// <summary>
    /// <para>Виды источников финансирования
    ///                1 - собственные средства
    ///                2 - средства федерального бюджета
    ///                3 - средства регионального бюджета</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Виды источников финансирования 1 - собственные средства 2 - средства федерального" +
        " бюджета 3 - средства регионального бюджета")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("source_type", Namespace="")]
    public enum Source_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <summary>
    /// <para>Типы производственного заказа
    ///                1 - собственное производство
    ///                2 - контрактное производство</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Типы производственного заказа 1 - собственное производство 2 - контрактное произв" +
        "одство")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("order_type_enum", Namespace="")]
    public enum Order_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Результат операции фиксации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Результат операции фиксации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("operation_result_type_enum", Namespace="")]
    public enum Operation_Result_Type_Enum
    {
        
        Accepted,
        
        Rejected,
        
        Partial,
    }
    
    /// <summary>
    /// <para>Виды операций приемки
    ///                1 - поступление
    ///                2 - возврат от покупателя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Виды операций приемки 1 - поступление 2 - возврат от покупателя")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_type_enum", Namespace="")]
    public enum Receive_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Виды документов
    ///                1 - чек
    ///                2 - бланк строгой отчетности (БСО)
    ///                3 - договор
    ///                4 - прочее</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Виды документов 1 - чек 2 - бланк строгой отчетности (БСО) 3 - договор 4 - прочее" +
        "")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sale_doc_type_enum", Namespace="")]
    public enum Sale_Doc_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    /// <summary>
    /// <para>Перечень операций, для которых применим отзыв / отмена</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Перечень операций, для которых применим отзыв / отмена")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("recall_type_enum", Namespace="")]
    public enum Recall_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("313")]
        Item313,
        
        [System.Xml.Serialization.XmlEnumAttribute("333")]
        Item333,
        
        [System.Xml.Serialization.XmlEnumAttribute("334")]
        Item334,
        
        [System.Xml.Serialization.XmlEnumAttribute("335")]
        Item335,
        
        [System.Xml.Serialization.XmlEnumAttribute("341")]
        Item341,
        
        [System.Xml.Serialization.XmlEnumAttribute("342")]
        Item342,
        
        [System.Xml.Serialization.XmlEnumAttribute("360")]
        Item360,
        
        [System.Xml.Serialization.XmlEnumAttribute("363")]
        Item363,
        
        [System.Xml.Serialization.XmlEnumAttribute("431")]
        Item431,
        
        [System.Xml.Serialization.XmlEnumAttribute("470")]
        Item470,
        
        [System.Xml.Serialization.XmlEnumAttribute("541")]
        Item541,
        
        [System.Xml.Serialization.XmlEnumAttribute("300")]
        Item300,
    }
    
    /// <summary>
    /// <para>Виды документов подтверждения соответствия
    ///                1 - сертификат соответствия
    ///                2 - декларация о соответствии</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Виды документов подтверждения соответствия 1 - сертификат соответствия 2 - деклар" +
        "ация о соответствии")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("confirm_doc_type_enum", Namespace="")]
    public enum Confirm_Doc_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Способы уничтожения
    ///                1 – раздавливание ампулы, разведением содержимого и слив в промышленную канализацию
    ///                2 – дробление, разведение и слив в промышленную канализацию
    ///                3 – сжигание</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Способы уничтожения 1 – раздавливание ампулы, разведением содержимого и слив в пр" +
        "омышленную канализацию 2 – дробление, разведение и слив в промышленную канализац" +
        "ию 3 – сжигание")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("destruction_method_enum", Namespace="")]
    public enum Destruction_Method_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <summary>
    /// <para>Основания передачи на уничтожение
    ///                1 – по решению владельца
    ///                2 – по решению Росздравнадзора
    ///                3 – по решению суда</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Основания передачи на уничтожение 1 – по решению владельца 2 – по решению Росздра" +
        "внадзора 3 – по решению суда")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("destruction_type_enum", Namespace="")]
    public enum Destruction_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    /// <summary>
    /// <para>Причины вывода из оборота
    ///                1 – выведен из оборота по причине списания
    ///                2 – выведен из оборота в результате реэкспорта
    ///                3 – выведен из оборота в результате отбора образцов
    ///                4 - выведен из оборота в результате отпуска по льготному рецепту
    ///                5 - выведен из оборота в результате выдачи для оказания мед. помощи
    ///                6 - выведен из оборота в результате отгрузки незарегистрированному участнику
    ///                7 - выведен из оборота в результате выборочного контроля
    ///                8 - выведен из оборота в результате отгрузки в ЕАЭС
    ///                9 - выведен из оборота в результате розничной продажи
    ///                10 - выведен из оборота в результате экспорта</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Причины вывода из оборота 1 – выведен из оборота по причине списания 2 – выведен из оборота в результате реэкспорта 3 – выведен из оборота в результате отбора образцов 4 - выведен из оборота в результате отпуска по льготному рецепту 5 - выведен из оборота в результате выдачи для оказания мед. помощи 6 - выведен из оборота в результате отгрузки незарегистрированному участнику 7 - выведен из оборота в результате выборочного контроля 8 - выведен из оборота в результате отгрузки в ЕАЭС 9 - выведен из оборота в результате розничной продажи 10 - выведен из оборота в результате экспорта")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("withdrawal_reason_enum", Namespace="")]
    public enum Withdrawal_Reason_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
    }
    
    /// <summary>
    /// <para>Причины возврата
    ///                1 – возврат надлежащего качества
    ///                2 – возврат ненадлежащего качества</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Причины возврата 1 – возврат надлежащего качества 2 – возврат ненадлежащего качес" +
        "тва")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("reason_return_type_enum", Namespace="")]
    public enum Reason_Return_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Типы вывода из оборота
    ///                6 – выборочный контроль
    ///                7 – таможенный контроль
    ///                8 – федеральный надзор
    ///                9 – в целях клинических исследований
    ///                10 – в целях фармацевтической экспертизы
    ///                11 – недостача
    ///                12 – отбор демонстрационных образцов
    ///                13 – списание без передачи на уничтожение
    ///                14 – вывод из оборота КИЗ, накопленных в рамках эксперимента
    ///                15 - производственный брак
    ///                16 - списание разукомплектованной потребительской упаковки
    ///                17 - производство медицинских изделий
    ///                18 - производство медицинских препаратов
    ///                19 - отбор контрольных образцов в рамках процесса контроля качества
    ///                20 - отбор архивных образцов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Типы вывода из оборота 6 – выборочный контроль 7 – таможенный контроль 8 – федеральный надзор 9 – в целях клинических исследований 10 – в целях фармацевтической экспертизы 11 – недостача 12 – отбор демонстрационных образцов 13 – списание без передачи на уничтожение 14 – вывод из оборота КИЗ, накопленных в рамках эксперимента 15 - производственный брак 16 - списание разукомплектованной потребительской упаковки 17 - производство медицинских изделий 18 - производство медицинских препаратов 19 - отбор контрольных образцов в рамках процесса контроля качества 20 - отбор архивных образцов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("withdrawal_type_enum", Namespace="")]
    public enum Withdrawal_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
        
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Item9,
        
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Item10,
        
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Item11,
        
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Item12,
        
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Item13,
        
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Item14,
        
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        Item15,
        
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Item16,
        
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Item17,
        
        [System.Xml.Serialization.XmlEnumAttribute("18")]
        Item18,
        
        [System.Xml.Serialization.XmlEnumAttribute("19")]
        Item19,
        
        [System.Xml.Serialization.XmlEnumAttribute("20")]
        Item20,
    }
    
    /// <summary>
    /// <para>Виды операции отгрузки
    ///                1 – продажа
    ///                2 – возврат</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Виды операции отгрузки 1 – продажа 2 – возврат")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("turnover_type_enum", Namespace="")]
    public enum Turnover_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Виды операции редактирования
    ///                1 – добавление/бронирование/постановка
    ///                2 – удаление/отмена бронирования/снятие</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Виды операции редактирования 1 – добавление/бронирование/постановка 2 – удаление/" +
        "отмена бронирования/снятие")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("edit_type_enum", Namespace="")]
    public enum Edit_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Код формы фискального документа
    ///                3 - чек
    ///                31 - чек коррекции</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Код формы фискального документа 3 - чек 31 - чек коррекции")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receipt_type_enum", Namespace="")]
    public enum Receipt_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("31")]
        Item31,
    }
    
    /// <summary>
    /// <para>Причина списания
    ///                1 - по причине закрытия заказа
    ///                2 - по причине истечения срока годности КМ</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Причина списания 1 - по причине закрытия заказа 2 - по причине истечения срока го" +
        "дности КМ")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("dropout_reason_type_enum", Namespace="")]
    public enum Dropout_Reason_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
    }
    
    /// <summary>
    /// <para>Перечень операций, для которых применима корректировка сведений</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Перечень операций, для которых применима корректировка сведений")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("action_id_type_enum", Namespace="")]
    public enum Action_Id_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("415")]
        Item415,
        
        [System.Xml.Serialization.XmlEnumAttribute("416")]
        Item416,
        
        [System.Xml.Serialization.XmlEnumAttribute("472")]
        Item472,
        
        [System.Xml.Serialization.XmlEnumAttribute("471")]
        Item471,
        
        [System.Xml.Serialization.XmlEnumAttribute("417")]
        Item417,
    }
    
    /// <summary>
    /// <para>Причины передачи на уничтожение
    ///			    1 - недоброкачественный ЛП
    ///				2 - контрафактный ЛП
    ///				3 - фальсифицированный ЛП
    ///				4 - ЛП, утративший потребительские свойства
    ///				5 - ЛП с истекшим сроком годности
    ///				6 - ЛП, отозванный производителем/держателем регистрационного удостоверения
    ///				7 - ЛП, исключенный из Государственного реестра лекарственных средств</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Причины передачи на уничтожение 1 - недоброкачественный ЛП 2 - контрафактный ЛП 3 - фальсифицированный ЛП 4 - ЛП, утративший потребительские свойства 5 - ЛП с истекшим сроком годности 6 - ЛП, отозванный производителем/держателем регистрационного удостоверения 7 - ЛП, исключенный из Государственного реестра лекарственных средств")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("reason_for_destruction_type_enum", Namespace="")]
    public enum Reason_For_Destruction_Type_Enum
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
        
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Item5,
        
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Item6,
        
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
    }
    
    /// <summary>
    /// <para>Описание организации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Описание организации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("short_org_info_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Short_Org_Info_Type
    {
        
        /// <summary>
        /// <para>Наименование организации / ИП</para>
        /// <para>Строка произвольной длины, но не более 500 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Наименование организации / ИП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(500)]
        [System.Xml.Serialization.XmlElementAttribute("organisation_name")]
        public string Organisation_Name { get; set; }
        
        /// <summary>
        /// <para>Организация - юр. лицо</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Организация - юр. лицо")]
        [System.Xml.Serialization.XmlElementAttribute("ul")]
        public Short_Org_Info_TypeUl Ul { get; set; }
        
        /// <summary>
        /// <para>Организация - физическое лицо</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Организация - физическое лицо")]
        [System.Xml.Serialization.XmlElementAttribute("fl")]
        public Short_Org_Info_TypeFl Fl { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Short_Org_Info_TypeUl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Short_Org_Info_TypeUl
    {
        
        /// <summary>
        /// <para>ИНН ЮЛ</para>
        /// <para>Идентификационный номер налогоплательщика - юридического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН ЮЛ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        /// <summary>
        /// <para>КПП</para>
        /// <para>Код причины постановки на учет (КПП)</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("КПП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}")]
        [System.Xml.Serialization.XmlElementAttribute("kpp")]
        public string Kpp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Short_Org_Info_TypeFl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Short_Org_Info_TypeFl
    {
        
        /// <summary>
        /// <para>ИНН ФЛ</para>
        /// <para>Идентификационный номер налогоплательщика - физического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН ФЛ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
    }
    
    /// <summary>
    /// <para>Идентификаторы знака</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Идентификаторы знака")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sign_ids_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sign_Ids_Type
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер КиЗ</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер КиЗ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Sign_Ids_Type" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Sign_Ids_Type" /> class.</para>
        /// </summary>
        public Sign_Ids_Type()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер третичной/транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер третичной/транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Состав сведений, передаваемых при подаче таможенной декларации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Состав сведений, передаваемых при подаче таможенной декларации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("fts_gtd_info_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fts_Gtd_Info_Type
    {
        
        /// <summary>
        /// <para>Код таможенного органа</para>
        /// <para>Код таможенного органа. 2, 5 или 8 символов</para>
        /// <para xml:lang="en">Pattern: [0-9]{2}|[0-9]{5}|[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код таможенного органа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{2}|[0-9]{5}|[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("customs_code")]
        public string Customs_Code { get; set; }
        
        /// <summary>
        /// <para>Дата регистрации декларации на товары</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата регистрации декларации на товары")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("registration_date")]
        public string Registration_Date { get; set; }
        
        /// <summary>
        /// <para>Регистрационный номер декларации на товары</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 7.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Регистрационный номер декларации на товары")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(7)]
        [System.Xml.Serialization.XmlElementAttribute("gtd_number")]
        public string Gtd_Number { get; set; }
    }
    
    /// <summary>
    /// <para>Адрес и реквизиты (ИНН/КПП) организации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Адрес и реквизиты (ИНН/КПП) организации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("org_address_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Org_Address_Type
    {
        
        /// <summary>
        /// <para>Адрес организации (по ФИАС)</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Адрес организации (по ФИАС)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("fias_addr")]
        public string Fias_Addr { get; set; }
        
        /// <summary>
        /// <para>Организация – юридическое лицо</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Организация – юридическое лицо")]
        [System.Xml.Serialization.XmlElementAttribute("ul")]
        public Org_Address_TypeUl Ul { get; set; }
        
        /// <summary>
        /// <para>Организация-физическое лицо</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Организация-физическое лицо")]
        [System.Xml.Serialization.XmlElementAttribute("fl")]
        public Org_Address_TypeFl Fl { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Org_Address_TypeUl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Org_Address_TypeUl
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - юридического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        /// <summary>
        /// <para>Код причины постановки на учет (КПП)</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}")]
        [System.Xml.Serialization.XmlElementAttribute("kpp")]
        public string Kpp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Org_Address_TypeFl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Org_Address_TypeFl
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - физического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
    }
    
    /// <summary>
    /// <para>Реквизиты (ИТИН/Код страны) организации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Реквизиты (ИТИН/Код страны) организации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("info_org_eeu_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Info_Org_Eeu_Type
    {
        
        /// <summary>
        /// <para>Аналог идентификационного номера налогоплательщика</para>
        /// <para>Строка произвольной длины, но не более 64 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Аналог идентификационного номера налогоплательщика")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(64)]
        [System.Xml.Serialization.XmlElementAttribute("itin")]
        public string Itin { get; set; }
        
        /// <summary>
        /// <para>Код страны</para>
        /// <para>Код страны</para>
        /// <para xml:lang="en">Pattern: [A-Z]{2}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код страны")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-Z]{2}")]
        [System.Xml.Serialization.XmlElementAttribute("code_country")]
        public string Code_Country { get; set; }
    }
    
    /// <summary>
    /// <para>Документы подтверждающие соответствие</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Документы подтверждающие соответствие")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("confnum_info_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Confnum_Info_Type
    {
        
        /// <summary>
        /// <para>Вид документа подтверждающий соответствие</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вид документа подтверждающий соответствие")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_doc")]
        public MdlpApiClient.Xsd.Confirm_Doc_Type_Enum Confirm_Doc { get; set; }
        
        /// <summary>
        /// <para>Дата регистрации документа подтверждения соответствия</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата регистрации документа подтверждения соответствия")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Регистрационный номер документа подтверждения соответствия</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Регистрационный номер документа подтверждения соответствия")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
    }
    
    /// <summary>
    /// <para>Информация СКЗКМ</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Информация СКЗКМ")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("skzkm_info_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Info_Type
    {
        
        /// <summary>
        /// <para>Уникальный идентификатор РЭ или РВ строка, 16 символов</para>
        /// <para>Идентификатор устройства СКЗКМ, 16 символов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Уникальный идентификатор РЭ или РВ строка, 16 символов")]
        [System.Xml.Serialization.XmlElementAttribute("device_id")]
        public string Device_Id { get; set; }
        
        /// <summary>
        /// <para>Уникальный идентификатор системы сформировавшей сообщение, формат строка до 255 символов</para>
        /// <para>Идентификатор системы сформировавшей сообщение (СКЗКМ), не более 255 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Уникальный идентификатор системы сформировавшей сообщение, формат строка до 255 с" +
            "имволов")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(255)]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_origin_msg_id")]
        public string Skzkm_Origin_Msg_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор отчета об изменении статусов кодов маркировки, формат строка до 255 символов</para>
        /// <para>Идентификатор отчета об изменении статусов кодов маркировки, не более 255 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор отчета об изменении статусов кодов маркировки, формат строка до 255" +
            " символов")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(255)]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_report_id")]
        public string Skzkm_Report_Id { get; set; }
    }
    
    /// <summary>
    /// <para>Реквизиты сведений о вводе в оборот</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Реквизиты сведений о вводе в оборот")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("release_info_type", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_Info_Type
    {
        
        /// <summary>
        /// <para>Дата записи в АИС РЗН о вводе в оборот</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата записи в АИС РЗН о вводе в оборот")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Номер разрешения на ввод в оборот (обязателен для иммунобиологических ЛП)</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер разрешения на ввод в оборот (обязателен для иммунобиологических ЛП)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Идентификатор записи в АИС РЗН</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор записи в АИС РЗН")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("confirmation_num")]
        public string Confirmation_Num { get; set; }
    }
    
    /// <summary>
    /// <para>Результат обработки направленного в систему запроса</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Результат обработки направленного в систему запроса")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("result", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Result
    {
        
        /// <summary>
        /// <para>Наименование операции</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Наименование операции")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation")]
        public string Operation { get; set; }
        
        /// <summary>
        /// <para>Идентификатор, присвоенный запросу</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор, присвоенный запросу")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("operation_id")]
        public string Operation_Id { get; set; }
        
        /// <summary>
        /// <para>Результат фиксации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Результат фиксации")]
        [System.Xml.Serialization.XmlElementAttribute("operation_result")]
        public MdlpApiClient.Xsd.Operation_Result_Type_Enum Operation_Result { get; set; }
        
        /// <summary>
        /// <para>Примечание к операции</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Примечание к операции")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation_comment")]
        public string Operation_Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ResultOperation_Warnings> _operation_Warnings;
        
        /// <summary>
        /// <para>Список предупреждений</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список предупреждений")]
        [System.Xml.Serialization.XmlElementAttribute("operation_warnings")]
        public System.Collections.ObjectModel.Collection<ResultOperation_Warnings> Operation_Warnings
        {
            get
            {
                return this._operation_Warnings;
            }
            private set
            {
                this._operation_Warnings = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation_Warnings-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation_Warnings collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Operation_WarningsSpecified
        {
            get
            {
                return (this.Operation_Warnings.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Result" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Result" /> class.</para>
        /// </summary>
        public Result()
        {
            this._operation_Warnings = new System.Collections.ObjectModel.Collection<ResultOperation_Warnings>();
            this._errors = new System.Collections.ObjectModel.Collection<ResultErrors>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ResultErrors> _errors;
        
        /// <summary>
        /// <para>Список ошибок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список ошибок")]
        [System.Xml.Serialization.XmlElementAttribute("errors")]
        public System.Collections.ObjectModel.Collection<ResultErrors> Errors
        {
            get
            {
                return this._errors;
            }
            private set
            {
                this._errors = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Errors-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Errors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorsSpecified
        {
            get
            {
                return (this.Errors.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 200;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
        
        /// <summary>
        /// <para>Дата и время проводки запроса</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата и время проводки запроса")]
        [System.Xml.Serialization.XmlAttributeAttribute("accept_time", DataType="dateTime")]
        public System.DateTime Accept_Time { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ResultOperation_Warnings", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResultOperation_Warnings
    {
        
        /// <summary>
        /// <para>Текст предупреждения</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст предупреждения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation_warning")]
        public string Operation_Warning { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ResultErrors", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResultErrors
    {
        
        /// <summary>
        /// <para>Код ошибки</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код ошибки")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("error_code")]
        public string Error_Code { get; set; }
        
        /// <summary>
        /// <para>Текст ошибки</para>
        /// <para>Строка произвольной длины, но не более 4000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст ошибки")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4000)]
        [System.Xml.Serialization.XmlElementAttribute("error_desc")]
        public string Error_Desc { get; set; }
        
        /// <summary>
        /// <para>Идентификатор ошибочной записи</para>
        /// <para>Строка произвольной длины, но не более 128 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 128.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор ошибочной записи")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(128)]
        [System.Xml.Serialization.XmlElementAttribute("object_id")]
        public string Object_Id { get; set; }
    }
    
    /// <summary>
    /// <para>Результат фиксации сведений о внесении изменений в ИС МДЛП</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Результат фиксации сведений о внесении изменений в ИС МДЛП")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("result_service", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Result_Service
    {
        
        /// <summary>
        /// <para>Наименование операции</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Наименование операции")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation")]
        public string Operation { get; set; }
        
        /// <summary>
        /// <para>Идентификатор, присвоенный запросу</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор, присвоенный запросу")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("operation_id")]
        public string Operation_Id { get; set; }
        
        /// <summary>
        /// <para>Результат фиксации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Результат фиксации")]
        [System.Xml.Serialization.XmlElementAttribute("operation_result")]
        public MdlpApiClient.Xsd.Operation_Result_Type_Enum Operation_Result { get; set; }
        
        /// <summary>
        /// <para>Примечание к операции</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Примечание к операции")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation_comment")]
        public string Operation_Comment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Result_ServiceOperation_Warnings> _operation_Warnings;
        
        /// <summary>
        /// <para>Список предупреждений</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список предупреждений")]
        [System.Xml.Serialization.XmlElementAttribute("operation_warnings")]
        public System.Collections.ObjectModel.Collection<Result_ServiceOperation_Warnings> Operation_Warnings
        {
            get
            {
                return this._operation_Warnings;
            }
            private set
            {
                this._operation_Warnings = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation_Warnings-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation_Warnings collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Operation_WarningsSpecified
        {
            get
            {
                return (this.Operation_Warnings.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Result_Service" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Result_Service" /> class.</para>
        /// </summary>
        public Result_Service()
        {
            this._operation_Warnings = new System.Collections.ObjectModel.Collection<Result_ServiceOperation_Warnings>();
            this._errors = new System.Collections.ObjectModel.Collection<Result_ServiceErrors>();
            this._success = new System.Collections.ObjectModel.Collection<Result_ServiceSuccess>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Result_ServiceErrors> _errors;
        
        /// <summary>
        /// <para>Список ошибок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список ошибок")]
        [System.Xml.Serialization.XmlElementAttribute("errors")]
        public System.Collections.ObjectModel.Collection<Result_ServiceErrors> Errors
        {
            get
            {
                return this._errors;
            }
            private set
            {
                this._errors = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Errors-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Errors collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorsSpecified
        {
            get
            {
                return (this.Errors.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Result_ServiceSuccess> _success;
        
        /// <summary>
        /// <para>Список зарегистрированных контрагентов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список зарегистрированных контрагентов")]
        [System.Xml.Serialization.XmlElementAttribute("success")]
        public System.Collections.ObjectModel.Collection<Result_ServiceSuccess> Success
        {
            get
            {
                return this._success;
            }
            private set
            {
                this._success = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Success-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Success collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuccessSpecified
        {
            get
            {
                return (this.Success.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 201;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
        
        /// <summary>
        /// <para>Дата и время проводки запроса</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата и время проводки запроса")]
        [System.Xml.Serialization.XmlAttributeAttribute("accept_time", DataType="dateTime")]
        public System.DateTime Accept_Time { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Result_ServiceOperation_Warnings", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Result_ServiceOperation_Warnings
    {
        
        /// <summary>
        /// <para>Текст предупреждения</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст предупреждения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation_warning")]
        public string Operation_Warning { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Result_ServiceErrors", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Result_ServiceErrors
    {
        
        /// <summary>
        /// <para>Код ошибки</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код ошибки")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("error_code")]
        public string Error_Code { get; set; }
        
        /// <summary>
        /// <para>Текст ошибки</para>
        /// <para>Строка произвольной длины, но не более 4000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст ошибки")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4000)]
        [System.Xml.Serialization.XmlElementAttribute("error_desc")]
        public string Error_Desc { get; set; }
        
        /// <summary>
        /// <para>Идентификатор ошибочной записи</para>
        /// <para>Строка произвольной длины, но не более 128 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 128.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор ошибочной записи")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(128)]
        [System.Xml.Serialization.XmlElementAttribute("object_id")]
        public string Object_Id { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Result_ServiceSuccess", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Result_ServiceSuccess
    {
        
        /// <summary>
        /// <para>Текст ответа</para>
        /// <para>Строка произвольной длины, но не более 4000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст ответа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4000)]
        [System.Xml.Serialization.XmlElementAttribute("success_desc")]
        public string Success_Desc { get; set; }
        
        /// <summary>
        /// <para>Идентификатор добавленной записи</para>
        /// <para>Строка произвольной длины, но не более 128 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 128.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор добавленной записи")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(128)]
        [System.Xml.Serialization.XmlElementAttribute("object_id")]
        public string Object_Id { get; set; }
        
        /// <summary>
        /// <para>ИНН добавленного контрагента</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН добавленного контрагента")]
        [System.Xml.Serialization.XmlElementAttribute("object_info")]
        public Result_ServiceSuccessObject_Info Object_Info { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Result_ServiceSuccessObject_Info", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Result_ServiceSuccessObject_Info
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - юридического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("inn_ul")]
        public string Inn_Ul { get; set; }
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - физического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}")]
        [System.Xml.Serialization.XmlElementAttribute("inn_fl")]
        public string Inn_Fl { get; set; }
    }
    
    /// <summary>
    /// <para>Запрос информации по номеру SGTIN/SSCC</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Запрос информации по номеру SGTIN/SSCC")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("query_kiz_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Query_Kiz_Info
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Запрос информации об SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Запрос информации об SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Запрос информации по SSCC (что находится в данной упаковке)</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Запрос информации по SSCC (что находится в данной упаковке)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_down")]
        public string Sscc_Down { get; set; }
        
        /// <summary>
        /// <para>Запрос информации по SSCC (где находится данная упаковка)</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Запрос информации по SSCC (где находится данная упаковка)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_up")]
        public string Sscc_Up { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 210;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Результат обработки сведений по номеру SGTIN/SSCC</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Результат обработки сведений по номеру SGTIN/SSCC")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("kiz_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_Info
    {
        
        /// <summary>
        /// <para>Информация о результате операции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация о результате операции")]
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public Kiz_InfoResult Result { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Kiz_InfoOperation_Warnings> _operation_Warnings;
        
        /// <summary>
        /// <para>Список предупреждений</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список предупреждений")]
        [System.Xml.Serialization.XmlElementAttribute("operation_warnings")]
        public System.Collections.ObjectModel.Collection<Kiz_InfoOperation_Warnings> Operation_Warnings
        {
            get
            {
                return this._operation_Warnings;
            }
            private set
            {
                this._operation_Warnings = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation_Warnings-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation_Warnings collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Operation_WarningsSpecified
        {
            get
            {
                return (this.Operation_Warnings.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Kiz_Info" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Kiz_Info" /> class.</para>
        /// </summary>
        public Kiz_Info()
        {
            this._operation_Warnings = new System.Collections.ObjectModel.Collection<Kiz_InfoOperation_Warnings>();
            this._sscc_Down = new System.Collections.ObjectModel.Collection<Kiz_InfoSscc_DownTree>();
            this._sscc_Up = new System.Collections.ObjectModel.Collection<Kiz_InfoSscc_UpInfo>();
        }
        
        /// <summary>
        /// <para>Информация об SGTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об SGTIN")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public Kiz_InfoSgtin Sgtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Kiz_InfoSscc_DownTree> _sscc_Down;
        
        /// <summary>
        /// <para>Информация по SSCC (что находится в данной упаковке)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация по SSCC (что находится в данной упаковке)")]
        [System.Xml.Serialization.XmlArrayAttribute("sscc_down")]
        [System.Xml.Serialization.XmlArrayItemAttribute("tree")]
        public System.Collections.ObjectModel.Collection<Kiz_InfoSscc_DownTree> Sscc_Down
        {
            get
            {
                return this._sscc_Down;
            }
            private set
            {
                this._sscc_Down = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc_Down-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc_Down collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Sscc_DownSpecified
        {
            get
            {
                return (this.Sscc_Down.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Kiz_InfoSscc_UpInfo> _sscc_Up;
        
        /// <summary>
        /// <para>Информация по SSCC (где находится данная упаковка)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация по SSCC (где находится данная упаковка)")]
        [System.Xml.Serialization.XmlArrayAttribute("sscc_up")]
        [System.Xml.Serialization.XmlArrayItemAttribute("info")]
        public System.Collections.ObjectModel.Collection<Kiz_InfoSscc_UpInfo> Sscc_Up
        {
            get
            {
                return this._sscc_Up;
            }
            private set
            {
                this._sscc_Up = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc_Up-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc_Up collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Sscc_UpSpecified
        {
            get
            {
                return (this.Sscc_Up.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 211;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoResult", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoResult
    {
        
        /// <summary>
        /// <para>Признак наличия информации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Признак наличия информации")]
        [System.Xml.Serialization.XmlElementAttribute("found")]
        public bool Found { get; set; }
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoOperation_Warnings", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoOperation_Warnings
    {
        
        /// <summary>
        /// <para>Текст предупреждения</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст предупреждения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation_warning")]
        public string Operation_Warning { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSgtin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSgtin
    {
        
        /// <summary>
        /// <para>Детальная информация по SGTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Детальная информация по SGTIN")]
        [System.Xml.Serialization.XmlElementAttribute("info_sgtin")]
        public Kiz_InfoSgtinInfo_Sgtin Info_Sgtin { get; set; }
        
        /// <summary>
        /// <para>Информация о решении</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация о решении")]
        [System.Xml.Serialization.XmlElementAttribute("info_decision")]
        public Kiz_InfoSgtinInfo_Decision Info_Decision { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSgtinInfo_Sgtin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSgtinInfo_Sgtin
    {
        
        /// <summary>
        /// <para>статус SGTIN</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("статус SGTIN")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public string Status { get; set; }
        
        /// <summary>
        /// <para>Код третичной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код третичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Идентификатор товара в GS1</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSgtinInfo_Decision", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSgtinInfo_Decision
    {
        
        /// <summary>
        /// <para>Идентификатор решения</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор решения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("id_decision")]
        public string Id_Decision { get; set; }
        
        /// <summary>
        /// <para>Номер решения</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер решения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Дата решения</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата решения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_Down", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_Down
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Kiz_InfoSscc_DownTree> _tree;
        
        /// <summary>
        /// <para>Информация о вложенных объектах</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация о вложенных объектах")]
        [System.Xml.Serialization.XmlElementAttribute("tree")]
        public System.Collections.ObjectModel.Collection<Kiz_InfoSscc_DownTree> Tree
        {
            get
            {
                return this._tree;
            }
            private set
            {
                this._tree = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Kiz_InfoSscc_Down" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Kiz_InfoSscc_Down" /> class.</para>
        /// </summary>
        public Kiz_InfoSscc_Down()
        {
            this._tree = new System.Collections.ObjectModel.Collection<Kiz_InfoSscc_DownTree>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_DownTree", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_DownTree
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Информация об SGTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об SGTIN")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public Kiz_InfoSscc_DownTreeSgtin Sgtin { get; set; }
        
        /// <summary>
        /// <para>Номер родительской транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер родительской транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("parent_sscc")]
        public string Parent_Sscc { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_DownTreeSgtin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_DownTreeSgtin
    {
        
        /// <summary>
        /// <para>Детальная информация по SGTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Детальная информация по SGTIN")]
        [System.Xml.Serialization.XmlElementAttribute("info_sgtin")]
        public Kiz_InfoSscc_DownTreeSgtinInfo_Sgtin Info_Sgtin { get; set; }
        
        /// <summary>
        /// <para>Информация о решении</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация о решении")]
        [System.Xml.Serialization.XmlElementAttribute("info_decision")]
        public Kiz_InfoSscc_DownTreeSgtinInfo_Decision Info_Decision { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_DownTreeSgtinInfo_Sgtin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_DownTreeSgtinInfo_Sgtin
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>статус SGTIN</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("статус SGTIN")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public string Status { get; set; }
        
        /// <summary>
        /// <para>Код третичной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код третичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Идентификатор товара в GS1</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_DownTreeSgtinInfo_Decision", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_DownTreeSgtinInfo_Decision
    {
        
        /// <summary>
        /// <para>Идентификатор решения</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор решения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("id_decision")]
        public string Id_Decision { get; set; }
        
        /// <summary>
        /// <para>Номер решения</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер решения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Дата решения</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата решения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_Up", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_Up
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Kiz_InfoSscc_UpInfo> _info;
        
        /// <summary>
        /// <para>Информация о вышестоящих упаковках</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация о вышестоящих упаковках")]
        [System.Xml.Serialization.XmlElementAttribute("info")]
        public System.Collections.ObjectModel.Collection<Kiz_InfoSscc_UpInfo> Info
        {
            get
            {
                return this._info;
            }
            private set
            {
                this._info = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Kiz_InfoSscc_Up" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Kiz_InfoSscc_Up" /> class.</para>
        /// </summary>
        public Kiz_InfoSscc_Up()
        {
            this._info = new System.Collections.ObjectModel.Collection<Kiz_InfoSscc_UpInfo>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Kiz_InfoSscc_UpInfo", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Kiz_InfoSscc_UpInfo
    {
        
        /// <summary>
        /// <para>Номер вышестоящей транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер вышестоящей транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Уровень вложенность</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Уровень вложенность")]
        [System.Xml.Serialization.XmlElementAttribute("level")]
        public int Level { get; set; }
    }
    
    /// <summary>
    /// <para>Изменение списка доверенных контрагентов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Изменение списка доверенных контрагентов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("edit_counterparty_list", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Edit_Counterparty_List
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Вид операции редактирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вид операции редактирования")]
        [System.Xml.Serialization.XmlElementAttribute("edit_type")]
        public MdlpApiClient.Xsd.Edit_Type_Enum Edit_Type { get; set; }
        
        /// <summary>
        /// <para>Список добавляемых/удаляемых контрагентов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список добавляемых/удаляемых контрагентов")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty")]
        public Edit_Counterparty_ListCounterparty Counterparty { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 212;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Edit_Counterparty_ListCounterparty", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Edit_Counterparty_ListCounterparty
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _counterparty_Id;
        
        /// <summary>
        /// <para>Идентификатор контрагента в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public System.Collections.ObjectModel.Collection<string> Counterparty_Id
        {
            get
            {
                return this._counterparty_Id;
            }
            private set
            {
                this._counterparty_Id = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Counterparty_Id-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Counterparty_Id collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Counterparty_IdSpecified
        {
            get
            {
                return (this.Counterparty_Id.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Edit_Counterparty_ListCounterparty" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Edit_Counterparty_ListCounterparty" /> class.</para>
        /// </summary>
        public Edit_Counterparty_ListCounterparty()
        {
            this._counterparty_Id = new System.Collections.ObjectModel.Collection<string>();
            this._counterparty_Info = new System.Collections.ObjectModel.Collection<Edit_Counterparty_ListCounterpartyCounterparty_Info>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Edit_Counterparty_ListCounterpartyCounterparty_Info> _counterparty_Info;
        
        /// <summary>
        /// <para>ИНН доверенных контрагентов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН доверенных контрагентов")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_info")]
        public System.Collections.ObjectModel.Collection<Edit_Counterparty_ListCounterpartyCounterparty_Info> Counterparty_Info
        {
            get
            {
                return this._counterparty_Info;
            }
            private set
            {
                this._counterparty_Info = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Counterparty_Info-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Counterparty_Info collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Counterparty_InfoSpecified
        {
            get
            {
                return (this.Counterparty_Info.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Edit_Counterparty_ListCounterpartyCounterparty_Info", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Edit_Counterparty_ListCounterpartyCounterparty_Info
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - юридического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("inn_ul")]
        public string Inn_Ul { get; set; }
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - физического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}")]
        [System.Xml.Serialization.XmlElementAttribute("inn_fl")]
        public string Inn_Fl { get; set; }
    }
    
    /// <summary>
    /// <para>Бронирование (отмена бронирования) номеров транспортной упаковки</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Бронирование (отмена бронирования) номеров транспортной упаковки")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("booking_sscc", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Booking_Sscc
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Тип операции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции")]
        [System.Xml.Serialization.XmlElementAttribute("operation_type")]
        public MdlpApiClient.Xsd.Edit_Type_Enum Operation_Type { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Перечень номеров транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень номеров транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Booking_Sscc" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Booking_Sscc" /> class.</para>
        /// </summary>
        public Booking_Sscc()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 213;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Booking_SsccSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Booking_SsccSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Booking_SsccSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Booking_SsccSigns" /> class.</para>
        /// </summary>
        public Booking_SsccSigns()
        {
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Запрос информации об иерархии вложенности SSCC</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Запрос информации об иерархии вложенности SSCC")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("query_hierarchy_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Query_Hierarchy_Info
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>SSCC, по которому запрашивается информация</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SSCC, по которому запрашивается информация")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 220;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Детальная информация по SGTIN</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Детальная информация по SGTIN")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hierarchy_sgtin_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_Sgtin_Info
    {
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Статус SGTIN</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Статус SGTIN")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("status")]
        public string Status { get; set; }
        
        /// <summary>
        /// <para>Идентификатор товара в GS1</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
        
        /// <summary>
        /// <para>Информация о решении о приостановке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация о решении о приостановке")]
        [System.Xml.Serialization.XmlElementAttribute("pause_decision_info")]
        public Hierarchy_Sgtin_InfoPause_Decision_Info Pause_Decision_Info { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Hierarchy_Sgtin_InfoPause_Decision_Info", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_Sgtin_InfoPause_Decision_Info
    {
        
        /// <summary>
        /// <para>Идентификатор решения</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор решения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("id")]
        public string Id { get; set; }
        
        /// <summary>
        /// <para>Номер решения</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер решения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("number")]
        public string Number { get; set; }
        
        /// <summary>
        /// <para>Дата решения</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата решения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("date")]
        public string Date { get; set; }
    }
    
    /// <summary>
    /// <para>Детальная информация о транспортной упаковке</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Детальная информация о транспортной упаковке")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hierarchy_sscc_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_Sscc_Info
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Дата упаковки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("packing_date", DataType="dateTime")]
        public System.DateTime Packing_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Hierarchy_Sscc_Child> _childs;
        
        [System.Xml.Serialization.XmlElementAttribute("childs")]
        public System.Collections.ObjectModel.Collection<Hierarchy_Sscc_Child> Childs
        {
            get
            {
                return this._childs;
            }
            private set
            {
                this._childs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Childs-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Childs collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChildsSpecified
        {
            get
            {
                return (this.Childs.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Hierarchy_Sscc_Info" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Hierarchy_Sscc_Info" /> class.</para>
        /// </summary>
        public Hierarchy_Sscc_Info()
        {
            this._childs = new System.Collections.ObjectModel.Collection<Hierarchy_Sscc_Child>();
        }
    }
    
    /// <summary>
    /// <para>Детальная информация о вложенных элементах</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Детальная информация о вложенных элементах")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hierarchy_sscc_child", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_Sscc_Child
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Hierarchy_Sgtin_Info> _sgtin_Info;
        
        [System.Xml.Serialization.XmlElementAttribute("sgtin_info")]
        public System.Collections.ObjectModel.Collection<Hierarchy_Sgtin_Info> Sgtin_Info
        {
            get
            {
                return this._sgtin_Info;
            }
            private set
            {
                this._sgtin_Info = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin_Info-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin_Info collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Sgtin_InfoSpecified
        {
            get
            {
                return (this.Sgtin_Info.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Hierarchy_Sscc_Child" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Hierarchy_Sscc_Child" /> class.</para>
        /// </summary>
        public Hierarchy_Sscc_Child()
        {
            this._sgtin_Info = new System.Collections.ObjectModel.Collection<Hierarchy_Sgtin_Info>();
            this._sscc_Info = new System.Collections.ObjectModel.Collection<Hierarchy_Sscc_Info>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Hierarchy_Sscc_Info> _sscc_Info;
        
        [System.Xml.Serialization.XmlElementAttribute("sscc_info")]
        public System.Collections.ObjectModel.Collection<Hierarchy_Sscc_Info> Sscc_Info
        {
            get
            {
                return this._sscc_Info;
            }
            private set
            {
                this._sscc_Info = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc_Info-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc_Info collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Sscc_InfoSpecified
        {
            get
            {
                return (this.Sscc_Info.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Результат запроса информации об иерархии вложенности SSCC</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Результат запроса информации об иерархии вложенности SSCC")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("hierarchy_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_Info
    {
        
        /// <summary>
        /// <para>Информация по SSCC (где находится данная упаковка)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация по SSCC (где находится данная упаковка)")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_up")]
        public Hierarchy_InfoSscc_Up Sscc_Up { get; set; }
        
        /// <summary>
        /// <para>Информация по SSCC (что находится в данной упаковке)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация по SSCC (что находится в данной упаковке)")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_down")]
        public Hierarchy_InfoSscc_Down Sscc_Down { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Hierarchy_InfoOperation_Warnings> _operation_Warnings;
        
        /// <summary>
        /// <para>Список предупреждений</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список предупреждений")]
        [System.Xml.Serialization.XmlElementAttribute("operation_warnings")]
        public System.Collections.ObjectModel.Collection<Hierarchy_InfoOperation_Warnings> Operation_Warnings
        {
            get
            {
                return this._operation_Warnings;
            }
            private set
            {
                this._operation_Warnings = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation_Warnings-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation_Warnings collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Operation_WarningsSpecified
        {
            get
            {
                return (this.Operation_Warnings.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Hierarchy_Info" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Hierarchy_Info" /> class.</para>
        /// </summary>
        public Hierarchy_Info()
        {
            this._operation_Warnings = new System.Collections.ObjectModel.Collection<Hierarchy_InfoOperation_Warnings>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 221;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Hierarchy_InfoSscc_Up", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_InfoSscc_Up
    {
        
        [System.Xml.Serialization.XmlElementAttribute("sscc_info")]
        public Hierarchy_Sscc_Info Sscc_Info { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Hierarchy_InfoSscc_Down", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_InfoSscc_Down
    {
        
        [System.Xml.Serialization.XmlElementAttribute("sscc_info")]
        public Hierarchy_Sscc_Info Sscc_Info { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Hierarchy_InfoOperation_Warnings", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Hierarchy_InfoOperation_Warnings
    {
        
        /// <summary>
        /// <para>Текст предупреждения</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст предупреждения")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("operation_warning")]
        public string Operation_Warning { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отмене ранее зарегистрированной собственной операции</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отмене ранее зарегистрированной собственной опе" +
        "рации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("recall", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recall
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор запроса, подлежащего отмене</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор запроса, подлежащего отмене")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("operation_id")]
        public string Operation_Id { get; set; }
        
        /// <summary>
        /// <para>Тип исходной операции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип исходной операции")]
        [System.Xml.Serialization.XmlElementAttribute("recall_action_id")]
        public MdlpApiClient.Xsd.Recall_Type_Enum Recall_Action_Id { get; set; }
        
        /// <summary>
        /// <para>Описание причины отзыва</para>
        /// <para>Строка произвольной длины, но не более 500 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 500.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Описание причины отзыва")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(500)]
        [System.Xml.Serialization.XmlElementAttribute("reason")]
        public string Reason { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 250;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отзыве отправителем переданных получателю лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отзыве отправителем переданных получателю лекар" +
        "ственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("refusal_sender", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_Sender
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации - получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации - получателя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Причина отзыва</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина отзыва")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("reason")]
        public string Reason { get; set; }
        
        /// <summary>
        /// <para>Подтверждение отзыва приостановленного товара</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Подтверждение отзыва приостановленного товара")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_paused")]
        public bool Confirm_Paused { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Confirm_Paused-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confirm_Paused property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Confirm_PausedSpecified { get; set; }
        
        /// <summary>
        /// <para>Список отзываемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отзываемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Refusal_SenderOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 251;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Refusal_SenderOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_SenderOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Refusal_SenderOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Refusal_SenderOrder_Details" /> class.</para>
        /// </summary>
        public Refusal_SenderOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отказе получателя от приемки лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отказе получателя от приемки лекарственных преп" +
        "аратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("refusal_receiver", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_Receiver
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Причина отзыва</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина отзыва")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("reason")]
        public string Reason { get; set; }
        
        /// <summary>
        /// <para>Подтверждение об отказе в приемке приостановленного товара</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Подтверждение об отказе в приемке приостановленного товара")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_paused")]
        public bool Confirm_Paused { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Confirm_Paused-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confirm_Paused property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Confirm_PausedSpecified { get; set; }
        
        /// <summary>
        /// <para>Список не принятой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список не принятой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Refusal_ReceiverOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 252;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Refusal_ReceiverOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_ReceiverOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Refusal_ReceiverOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Refusal_ReceiverOrder_Details" /> class.</para>
        /// </summary>
        public Refusal_ReceiverOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о корректировке ранее направленных реквизитов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о корректировке ранее направленных реквизитов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("change_information", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Information
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Сведения подлежащие корректировке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения подлежащие корректировке")]
        [System.Xml.Serialization.XmlElementAttribute("details")]
        public Change_InformationDetails Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_Information" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_Information" /> class.</para>
        /// </summary>
        public Change_Information()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 253;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_InformationDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_InformationDetails
    {
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника (в случае контрактного производства)</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника (в случае контрактного производства)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор производителя осуществившего упаковку/фасовку во вторичную (третичную) упаковку</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор производителя осуществившего упаковку/фасовку во вторичную (третичн" +
            "ую) упаковку")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("packing_id")]
        public string Packing_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор производителя, осуществившего выпускающий контроль качества</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор производителя, осуществившего выпускающий контроль качества")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("control_id")]
        public string Control_Id { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_InformationSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_InformationSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_InformationSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_InformationSigns" /> class.</para>
        /// </summary>
        public Change_InformationSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о корректировке</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о корректировке")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("change_property", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор контрагента</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public string Counterparty_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип исходной операции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип исходной операции")]
        [System.Xml.Serialization.XmlElementAttribute("action_id_type")]
        public MdlpApiClient.Xsd.Action_Id_Type_Enum Action_Id_Type { get; set; }
        
        /// <summary>
        /// <para>Идентификатор запроса, подлежащего корректировке</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор запроса, подлежащего корректировке")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("operation_id")]
        public string Operation_Id { get; set; }
        
        /// <summary>
        /// <para>Сведения подлежащие корректировке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения подлежащие корректировке")]
        [System.Xml.Serialization.XmlElementAttribute("details")]
        public Change_PropertyDetails Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 254;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_PropertyDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_PropertyDetails
    {
        
        /// <summary>
        /// <para>Реквизиты документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Source-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Source property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора) в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора) в Единой информационной системе в сфере зак" +
            "упок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Contract_Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contract_Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Contract_TypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_PropertyDetails" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_PropertyDetails" /> class.</para>
        /// </summary>
        public Change_PropertyDetails()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_PropertyDetailsOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_PropertyDetailsOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_PropertyDetailsOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_PropertyDetailsOrder_Details" /> class.</para>
        /// </summary>
        public Change_PropertyDetailsOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_PropertyDetailsOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_PropertyDetailsOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Change_PropertyDetailsOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "ения посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cost-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CostSpecified { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Vat_Value-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vat_Value property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Vat_ValueSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_PropertyDetailsOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_PropertyDetailsOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_PropertyDetailsOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_PropertyDetailsOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Change_PropertyDetailsOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Change_PropertyDetailsOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_PropertyDetailsOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_PropertyDetailsOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cost-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CostSpecified { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Vat_Value-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vat_Value property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Vat_ValueSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация держателем РУ (или его представительством) сведений о передаче кодов маркировки таможенному складу в ИС МДЛП</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация держателем РУ (или его представительством) сведений о передаче кодов " +
        "маркировки таможенному складу в ИС МДЛП")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("transfer_code_to_custom", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Transfer_Code_To_Custom
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата упаковки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Код GTIN</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код GTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Transfer_Code_To_Custom" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Transfer_Code_To_Custom" /> class.</para>
        /// </summary>
        public Transfer_Code_To_Custom()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 300;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Transfer_Code_To_CustomSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Transfer_Code_To_CustomSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Transfer_Code_To_CustomSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Transfer_Code_To_CustomSigns" /> class.</para>
        /// </summary>
        public Transfer_Code_To_CustomSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("register_end_packing", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Register_End_Packing
    {
        
        /// <summary>
        /// <para>Идентификатор отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата упаковки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип производственного заказа</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип производственного заказа")]
        [System.Xml.Serialization.XmlElementAttribute("order_type")]
        public MdlpApiClient.Xsd.Order_Type_Enum Order_Type { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника (в случае контрактного производства)</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника (в случае контрактного производства)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
        
        /// <summary>
        /// <para>Код GTIN</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код GTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Register_End_Packing" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Register_End_Packing" /> class.</para>
        /// </summary>
        public Register_End_Packing()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 311;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Register_End_PackingSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Register_End_PackingSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Register_End_PackingSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Register_End_PackingSigns" /> class.</para>
        /// </summary>
        public Register_End_PackingSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о выпуске готовой продукции</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о выпуске готовой продукции")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("register_product_emission", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Register_Product_Emission
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты сведений о вводе в оборот</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты сведений о вводе в оборот")]
        [System.Xml.Serialization.XmlElementAttribute("release_info")]
        public MdlpApiClient.Xsd.Release_Info_Type Release_Info { get; set; }
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.Xml.Serialization.XmlElementAttribute("signs")]
        public Register_Product_EmissionSigns Signs { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 313;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Register_Product_EmissionSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Register_Product_EmissionSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Register_Product_EmissionSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Register_Product_EmissionSigns" /> class.</para>
        /// </summary>
        public Register_Product_EmissionSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов для выпуска готовой продукции</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов для выпуска г" +
        "отовой продукции")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_to_release", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_To_Release
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника ЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника ЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_To_ReleaseOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 314;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_To_ReleaseOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_To_ReleaseOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_To_ReleaseOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_To_ReleaseOrder_Details" /> class.</para>
        /// </summary>
        public Move_To_ReleaseOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о возврате лекарственных препаратов контрактному производителю</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о возврате лекарственных препаратов контрактному п" +
        "роизводителю")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("return_contract_production", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_Contract_Production
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Return_Contract_ProductionOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 315;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Return_Contract_ProductionOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_Contract_ProductionOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Return_Contract_ProductionOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Return_Contract_ProductionOrder_Details" /> class.</para>
        /// </summary>
        public Return_Contract_ProductionOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о выпуске готовой продукции за пределами территории Российской Федерации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о выпуске готовой продукции за пределами территори" +
        "и Российской Федерации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreign_emission", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Emission
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор производителя осуществившего упаковку/фасовку во вторичную (третичную) упаковку</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор производителя осуществившего упаковку/фасовку во вторичную (третичн" +
            "ую) упаковку")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("packing_id")]
        public string Packing_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор производителя, осуществившего выпускающий контроль качества</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор производителя, осуществившего выпускающий контроль качества")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("control_id")]
        public string Control_Id { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
        
        /// <summary>
        /// <para>Код GTIN</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код GTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_Emission" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_Emission" /> class.</para>
        /// </summary>
        public Foreign_Emission()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 321;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_EmissionSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_EmissionSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_EmissionSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_EmissionSigns" /> class.</para>
        /// </summary>
        public Foreign_EmissionSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Российскую Федерацию</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Российскую " +
        "Федерацию")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreign_shipment", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Shipment
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Foreign_ShipmentContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Foreign_ShipmentOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 331;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_ShipmentContract_Type", Namespace="")]
    public enum Foreign_ShipmentContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_ShipmentOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_ShipmentOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_ShipmentOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_ShipmentOrder_Details" /> class.</para>
        /// </summary>
        public Foreign_ShipmentOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российскую Федерацию</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российскую Феде" +
        "рацию")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreign_import", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Import
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Foreign_ImportContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Сведения о подтверждающем документе: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о подтверждающем документе: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Сведения о подтверждающем документе: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о подтверждающем документе: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Foreign_ImportOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 332;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_ImportContract_Type", Namespace="")]
    public enum Foreign_ImportContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_ImportOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_ImportOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_ImportOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_ImportOrder_Details" /> class.</para>
        /// </summary>
        public Foreign_ImportOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российскую Федерацию без импортера</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российскую Феде" +
        "рацию без импортера")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreign_import_owner", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Import_Owner
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Foreign_Import_OwnerContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Сведения о подтверждающем документе: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о подтверждающем документе: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Сведения о подтверждающем документе: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о подтверждающем документе: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Foreign_Import_OwnerOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 333;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_Import_OwnerContract_Type", Namespace="")]
    public enum Foreign_Import_OwnerContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Item7,
        
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_Import_OwnerOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Import_OwnerOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_Import_OwnerOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_Import_OwnerOrder_Details" /> class.</para>
        /// </summary>
        public Foreign_Import_OwnerOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между зонами таможенного контроля</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между зонам" +
        "и таможенного контроля")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("custom_move", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Custom_Move
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор места отгрузки в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор места отгрузки в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_shipper_id")]
        public string Custom_Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор места приемки в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор места приемки в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Список перемещаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список перемещаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Custom_MoveOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 334;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Custom_MoveOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Custom_MoveOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Custom_MoveOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Custom_MoveOrder_Details" /> class.</para>
        /// </summary>
        public Custom_MoveOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о результатах таможенного оформления</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о результатах таможенного оформления")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("fts_data", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fts_Data
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Состав сведений, передаваемых при подаче таможенной декларации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Состав сведений, передаваемых при подаче таможенной декларации")]
        [System.Xml.Serialization.XmlElementAttribute("fts_info")]
        public MdlpApiClient.Xsd.Fts_Gtd_Info_Type Fts_Info { get; set; }
        
        /// <summary>
        /// <para>Код таможенной процедуры</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код таможенной процедуры")]
        [System.Xml.Serialization.XmlElementAttribute("custom_procedure_code")]
        public MdlpApiClient.Xsd.Custom_Procedure_Code_Enum Custom_Procedure_Code { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Fts_Data" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Fts_Data" /> class.</para>
        /// </summary>
        public Fts_Data()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 335;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Fts_DataOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fts_DataOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Fts_DataOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Fts_DataOrder_Details" /> class.</para>
        /// </summary>
        public Fts_DataOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Fts_DataOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fts_DataOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Fts_DataOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Таможенная стоимость</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Таможенная стоимость")]
        [System.Xml.Serialization.XmlElementAttribute("customs_value")]
        public decimal Customs_Value { get; set; }
        
        /// <summary>
        /// <para>Документы подтверждающие соответствие</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документы подтверждающие соответствие")]
        [System.Xml.Serialization.XmlElementAttribute("confnum_info")]
        public MdlpApiClient.Xsd.Confnum_Info_Type Confnum_Info { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Fts_DataOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fts_DataOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Fts_DataOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Fts_DataOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Fts_DataOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Fts_DataOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Fts_DataOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Fts_DataOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("customs_value")]
        public decimal Customs_Value { get; set; }
        
        /// <summary>
        /// <para>Документы подтверждающие соответствие</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документы подтверждающие соответствие")]
        [System.Xml.Serialization.XmlElementAttribute("confnum_info")]
        public MdlpApiClient.Xsd.Confnum_Info_Type Confnum_Info { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация держателем РУ (или его представительством) сведений об условиях ввоза в Российскую Федерацию ЛП, маркированных на таможенном складе, в ИС МДЛП</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация держателем РУ (или его представительством) сведений об условиях ввоза" +
        " в Российскую Федерацию ЛП, маркированных на таможенном складе, в ИС МДЛП")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("import_info", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_Info
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Import_InfoContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Import_InfoOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 336;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Import_InfoContract_Type", Namespace="")]
    public enum Import_InfoContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Import_InfoOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_InfoOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Import_InfoOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Import_InfoOrder_Details" /> class.</para>
        /// </summary>
        public Import_InfoOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о приемке лекарственных препаратов на склад импортера</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о приемке лекарственных препаратов на склад импорт" +
        "ера")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_importer", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Importer
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_shipper_id")]
        public string Custom_Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа приемки - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа приемки - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа приемки - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа приемки - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Importer" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Importer" /> class.</para>
        /// </summary>
        public Receive_Importer()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 341;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_ImporterOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_ImporterOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_ImporterOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_ImporterOrder_Details" /> class.</para>
        /// </summary>
        public Receive_ImporterOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_ImporterOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_ImporterOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Receive_ImporterOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость с учетом налогов и сборов</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость с учетом налогов и сборов")]
        [System.Xml.Serialization.XmlElementAttribute("cost_taxes")]
        public decimal Cost_Taxes { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_ImporterOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_ImporterOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_ImporterOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_ImporterOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Receive_ImporterOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Receive_ImporterOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_ImporterOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_ImporterOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы ЛП с учетом налогов и сборов</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы ЛП с учетом налогов и сборов")]
        [System.Xml.Serialization.XmlElementAttribute("cost_taxes")]
        public decimal Cost_Taxes { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о вводе ЛП в оборот на территории РФ</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о вводе ЛП в оборот на территории РФ")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("release_in_circulation", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_In_Circulation
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты сведений о вводе в оборот</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты сведений о вводе в оборот")]
        [System.Xml.Serialization.XmlElementAttribute("release_info")]
        public MdlpApiClient.Xsd.Release_Info_Type Release_Info { get; set; }
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.Xml.Serialization.XmlElementAttribute("signs")]
        public Release_In_CirculationSigns Signs { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 342;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Release_In_CirculationSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_In_CirculationSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Release_In_CirculationSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Release_In_CirculationSigns" /> class.</para>
        /// </summary>
        public Release_In_CirculationSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о смене собственника лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о смене собственника лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("change_owner", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Owner
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Change_OwnerOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 351;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_OwnerOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_OwnerOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_OwnerOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_OwnerOrder_Details" /> class.</para>
        /// </summary>
        public Change_OwnerOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о ввозе собственных лекарственных препаратов в Российскую Федерацию из стран ЕАЭС</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о ввозе собственных лекарственных препаратов в Рос" +
        "сийскую Федерацию из стран ЕАЭС")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eeu_owner", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Owner
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Eeu_OwnerContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Eeu_OwnerOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 360;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_OwnerContract_Type", Namespace="")]
    public enum Eeu_OwnerContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Item8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_OwnerOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_OwnerOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_OwnerOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_OwnerOrder_Details" /> class.</para>
        /// </summary>
        public Eeu_OwnerOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Российскую Федерацию из стран ЕАЭС</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Российскую " +
        "Федерацию из стран ЕАЭС")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eeu_shipment", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Shipment
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Eeu_ShipmentContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Shipment" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Shipment" /> class.</para>
        /// </summary>
        public Eeu_Shipment()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 361;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ShipmentContract_Type", Namespace="")]
    public enum Eeu_ShipmentContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ShipmentOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ShipmentOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_ShipmentOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_ShipmentOrder_Details" /> class.</para>
        /// </summary>
        public Eeu_ShipmentOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ShipmentOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ShipmentOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Eeu_ShipmentOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ShipmentOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ShipmentOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_ShipmentOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_ShipmentOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Eeu_ShipmentOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Eeu_ShipmentOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ShipmentOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ShipmentOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о ввозе из ЕАЭС и приемке лекарственных препаратов на склад покупателя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о ввозе из ЕАЭС и приемке лекарственных препаратов" +
        " на склад покупателя")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eeu_import", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Import
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Eeu_ImportContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Import" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Import" /> class.</para>
        /// </summary>
        public Eeu_Import()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 362;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ImportContract_Type", Namespace="")]
    public enum Eeu_ImportContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ImportOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ImportOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_ImportOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_ImportOrder_Details" /> class.</para>
        /// </summary>
        public Eeu_ImportOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ImportOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ImportOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Eeu_ImportOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ImportOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ImportOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_ImportOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_ImportOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Eeu_ImportOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Eeu_ImportOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ImportOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ImportOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о вводе лекарственных препаратов в оборот на территории Российской Федерации</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о вводе лекарственных препаратов в оборот на терри" +
        "тории Российской Федерации")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eeu_release", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Release
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции, подлежащей вводу в оборот</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции, подлежащей вводу в оборот")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Release" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Release" /> class.</para>
        /// </summary>
        public Eeu_Release()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 363;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ReleaseOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ReleaseOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_ReleaseOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_ReleaseOrder_Details" /> class.</para>
        /// </summary>
        public Eeu_ReleaseOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ReleaseOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ReleaseOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Eeu_ReleaseOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Реквизиты сведений о вводе в оборот</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты сведений о вводе в оборот")]
        [System.Xml.Serialization.XmlElementAttribute("release_info")]
        public MdlpApiClient.Xsd.Release_Info_Type Release_Info { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ReleaseOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ReleaseOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о документах, подтверждающих соответствие, для содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о документах, подтверждающих соответствие, для содержимого транспортной " +
            "упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_ReleaseOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_ReleaseOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Eeu_ReleaseOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Eeu_ReleaseOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_ReleaseOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_ReleaseOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Реквизиты сведений о вводе в оборот</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты сведений о вводе в оборот")]
        [System.Xml.Serialization.XmlElementAttribute("release_info")]
        public MdlpApiClient.Xsd.Release_Info_Type Release_Info { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов собственнику</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов собственнику")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_owner", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Owner
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника ЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника ЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_OwnerOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 381;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_OwnerOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_OwnerOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_OwnerOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_OwnerOrder_Details" /> class.</para>
        /// </summary>
        public Move_OwnerOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о повторном вводе лекарственного препарата в оборот</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о повторном вводе лекарственного препарата в оборо" +
        "т")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("return_to_circulation", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_To_Circulation
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Причина вывода из оборота</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина вывода из оборота")]
        [System.Xml.Serialization.XmlElementAttribute("withdrawal_reason")]
        public MdlpApiClient.Xsd.Withdrawal_Reason_Enum Withdrawal_Reason { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания  - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Причина возврата</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина возврата")]
        [System.Xml.Serialization.XmlElementAttribute("reason_return")]
        public MdlpApiClient.Xsd.Reason_Return_Type_Enum Reason_Return { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reason_Return-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reason_Return property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Reason_ReturnSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Return_To_Circulation" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Return_To_Circulation" /> class.</para>
        /// </summary>
        public Return_To_Circulation()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 391;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Return_To_CirculationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_To_CirculationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Return_To_CirculationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Return_To_CirculationOrder_Details" /> class.</para>
        /// </summary>
        public Return_To_CirculationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со склада отправителя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со склада отп" +
        "равителя")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_order", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Order
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа отгрузки: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа отгрузки: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа отгрузки: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа отгрузки: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип операции отгрузки со склада</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции отгрузки со склада")]
        [System.Xml.Serialization.XmlElementAttribute("turnover_type")]
        public MdlpApiClient.Xsd.Turnover_Type_Enum Turnover_Type { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора)в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора)в Единой информационной системе в сфере заку" +
            "пок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Order" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Order" /> class.</para>
        /// </summary>
        public Move_Order()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 415;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_OrderOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_OrderOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_OrderOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_OrderOrder_Details" /> class.</para>
        /// </summary>
        public Move_OrderOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_OrderOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_OrderOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Move_OrderOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "ения посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_OrderOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_OrderOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_OrderOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_OrderOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Move_OrderOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Move_OrderOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_OrderOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_OrderOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация ИС МДЛП сведений о приемке лекарственных препаратов на склад получателя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация ИС МДЛП сведений о приемке лекарственных препаратов на склад получате" +
        "ля")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_order", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Дата приемки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата приемки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Документ подтверждающий получение: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документ подтверждающий получение: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Документ подтверждающий получение: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документ подтверждающий получение: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип операции приемки на склад</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции приемки на склад")]
        [System.Xml.Serialization.XmlElementAttribute("receive_type")]
        public MdlpApiClient.Xsd.Receive_Type_Enum Receive_Type { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора) в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора) в Единой информационной системе в сфере зак" +
            "упок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Order" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Order" /> class.</para>
        /// </summary>
        public Receive_Order()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 416;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_OrderOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_OrderOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_OrderOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_OrderOrder_Details" /> class.</para>
        /// </summary>
        public Receive_OrderOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_OrderOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_OrderOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Receive_OrderOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "ения посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_OrderOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_OrderOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_OrderOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_OrderOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Receive_OrderOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Receive_OrderOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_OrderOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_OrderOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о возврате приостановленных лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о возврате приостановленных лекарственных препарат" +
        "ов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_return", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Return
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_ReturnOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 417;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_ReturnOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_ReturnOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_ReturnOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_ReturnOrder_Details" /> class.</para>
        /// </summary>
        public Move_ReturnOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между различными адресами осуществления деятельности</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между разли" +
        "чными адресами осуществления деятельности")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_place", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Place
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа перемещения: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа перемещения: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа перемещения: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа перемещения: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список перемещаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список перемещаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_PlaceOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 431;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_PlaceOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_PlaceOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_PlaceOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_PlaceOrder_Details" /> class.</para>
        /// </summary>
        public Move_PlaceOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов на незарегистрированное место деятельности</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов на незарегист" +
        "рированное место деятельности")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_unregistered_order", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_Order
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Информация об организации-получателе</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об организации-получателе")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_info")]
        public Move_Unregistered_OrderReceiver_Info Receiver_Info { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа отгрузки: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа отгрузки: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа отгрузки: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа отгрузки: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Unregistered_Order" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Unregistered_Order" /> class.</para>
        /// </summary>
        public Move_Unregistered_Order()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 441;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderReceiver_Info", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderReceiver_Info
    {
        
        /// <summary>
        /// <para>ИНН/КПП получателя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН/КПП получателя")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_inn")]
        public Move_Unregistered_OrderReceiver_InfoReceiver_Inn Receiver_Inn { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderReceiver_InfoReceiver_Inn", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderReceiver_InfoReceiver_Inn
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ul")]
        public Move_Unregistered_OrderReceiver_InfoReceiver_InnUl Ul { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fl")]
        public Move_Unregistered_OrderReceiver_InfoReceiver_InnFl Fl { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderReceiver_InfoReceiver_InnUl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderReceiver_InfoReceiver_InnUl
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - юридического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        /// <summary>
        /// <para>Код причины постановки на учет (КПП)</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}")]
        [System.Xml.Serialization.XmlElementAttribute("kpp")]
        public string Kpp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderReceiver_InfoReceiver_InnFl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderReceiver_InfoReceiver_InnFl
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - физического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Unregistered_OrderOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Unregistered_OrderOrder_Details" /> class.</para>
        /// </summary>
        public Move_Unregistered_OrderOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Move_Unregistered_OrderOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведения посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Unregistered_OrderOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Unregistered_OrderOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Move_Unregistered_OrderOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Move_Unregistered_OrderOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Unregistered_OrderOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Unregistered_OrderOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о приемке на склад лекарственных препаратов, ранее отгруженных на незарегистрированное место деятельности</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о приемке на склад лекарственных препаратов, ранее" +
        " отгруженных на незарегистрированное место деятельности")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_unregistered_order", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Unregistered_Order
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Receive_Unregistered_OrderOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 442;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Unregistered_OrderOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Unregistered_OrderOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Unregistered_OrderOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Unregistered_OrderOrder_Details" /> class.</para>
        /// </summary>
        public Receive_Unregistered_OrderOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о вывозе лекарственных препаратов с территории Российской Федерации на территорию государства-члена ЕАЭС</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о вывозе лекарственных препаратов с территории Рос" +
        "сийской Федерации на территорию государства-члена ЕАЭС")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_eeu", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Eeu
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты (ИТИН/Код страны) организации-получатель</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты (ИТИН/Код страны) организации-получатель")]
        [System.Xml.Serialization.XmlElementAttribute("info_org_eeu")]
        public MdlpApiClient.Xsd.Info_Org_Eeu_Type Info_Org_Eeu { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Eeu" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Eeu" /> class.</para>
        /// </summary>
        public Move_Eeu()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 461;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_EeuOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_EeuOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_EeuOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_EeuOrder_Details" /> class.</para>
        /// </summary>
        public Move_EeuOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_EeuOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_EeuOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Move_EeuOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_EeuOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_EeuOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_EeuOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_EeuOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Move_EeuOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Move_EeuOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_EeuOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_EeuOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между различными адресами осуществления деятельности в рамках государственного лекарственного обеспечения</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между разли" +
        "чными адресами осуществления деятельности в рамках государственного лекарственно" +
        "го обеспечения")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_state_dispatch", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_State_Dispatch
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа перемещения: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа перемещения: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа перемещения: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа перемещения: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public Move_State_DispatchSource Source { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора)в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора)в Единой информационной системе в сфере заку" +
            "пок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список перемещаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список перемещаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_State_Dispatch" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_State_Dispatch" /> class.</para>
        /// </summary>
        public Move_State_Dispatch()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 470;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_State_DispatchSource", Namespace="")]
    public enum Move_State_DispatchSource
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_State_DispatchOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_State_DispatchOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_State_DispatchOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_State_DispatchOrder_Details" /> class.</para>
        /// </summary>
        public Move_State_DispatchOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_State_DispatchOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_State_DispatchOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Move_State_DispatchOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведенья посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "енья посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_State_DispatchOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_State_DispatchOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_State_DispatchOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_State_DispatchOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Move_State_DispatchOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Move_State_DispatchOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_State_DispatchOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_State_DispatchOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о смене владельца лекарственных препаратов в рамках государственного лекарственного обеспечения</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о смене владельца лекарственных препаратов в рамка" +
        "х государственного лекарственного обеспечения")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("state_dispatch", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class State_Dispatch
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public State_DispatchOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 471;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("State_DispatchOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class State_DispatchOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="State_DispatchOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="State_DispatchOrder_Details" /> class.</para>
        /// </summary>
        public State_DispatchOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со склада отправителя в рамках агентского договора</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со склада отп" +
        "равителя в рамках агентского договора")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("agent_dispatch", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Agent_Dispatch
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип операции отгрузки со склада</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции отгрузки со склада")]
        [System.Xml.Serialization.XmlElementAttribute("turnover_type")]
        public MdlpApiClient.Xsd.Turnover_Type_Enum Turnover_Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnover_Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Turnover_Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Turnover_TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Agent_DispatchOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 472;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Agent_DispatchOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Agent_DispatchOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Agent_DispatchOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Agent_DispatchOrder_Details" /> class.</para>
        /// </summary>
        public Agent_DispatchOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о постановке в арбитраж/снятие арбитража</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о постановке в арбитраж/снятие арбитража")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("arbitration", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Arbitration
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор контрагента</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public string Counterparty_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания  - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Признак постановки в арбитраж/снятие арбитража</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Признак постановки в арбитраж/снятие арбитража")]
        [System.Xml.Serialization.XmlElementAttribute("sign_arbitration")]
        public MdlpApiClient.Xsd.Edit_Type_Enum Sign_Arbitration { get; set; }
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public ArbitrationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 481;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ArbitrationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArbitrationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ArbitrationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ArbitrationOrder_Details" /> class.</para>
        /// </summary>
        public ArbitrationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках розничной торговли</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках рознич" +
        "ной торговли")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("retail_sale", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sale
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_SaleSalesUnion> _sales;
        
        /// <summary>
        /// <para>Детализация продажи</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Детализация продажи")]
        [System.Xml.Serialization.XmlArrayAttribute("sales")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Retail_SaleSalesUnion> Sales
        {
            get
            {
                return this._sales;
            }
            private set
            {
                this._sales = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_Sale" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_Sale" /> class.</para>
        /// </summary>
        public Retail_Sale()
        {
            this._sales = new System.Collections.ObjectModel.Collection<Retail_SaleSalesUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 511;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_SaleSales", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_SaleSales
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_SaleSalesUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Retail_SaleSalesUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_SaleSales" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_SaleSales" /> class.</para>
        /// </summary>
        public Retail_SaleSales()
        {
            this._union = new System.Collections.ObjectModel.Collection<Retail_SaleSalesUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_SaleSalesUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_SaleSalesUnion
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_SaleSalesUnionDetail> _detail;
        
        /// <summary>
        /// <para>Детализация продажи по каждой единице продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Детализация продажи по каждой единице продукции")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Retail_SaleSalesUnionDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_SaleSalesUnion" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_SaleSalesUnion" /> class.</para>
        /// </summary>
        public Retail_SaleSalesUnion()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Retail_SaleSalesUnionDetail>();
        }
        
        /// <summary>
        /// <para>Документы</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документы")]
        [System.Xml.Serialization.XmlElementAttribute("sale_docs")]
        public Retail_SaleSalesUnionSale_Docs Sale_Docs { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_SaleSalesUnionDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_SaleSalesUnionDetail
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Стоимость (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
        
        /// <summary>
        /// <para>Сумма скидки</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сумма скидки")]
        [System.Xml.Serialization.XmlElementAttribute("discount")]
        public decimal Discount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Discount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Discount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_SaleSalesUnionSale_Docs", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_SaleSalesUnionSale_Docs
    {
        
        /// <summary>
        /// <para>Вид документа (1 - чек, 2 - бланк строгой отчетности (БСО), 3 - договор, 4 - прочее)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вид документа (1 - чек, 2 - бланк строгой отчетности (БСО), 3 - договор, 4 - проч" +
            "ее)")]
        [System.Xml.Serialization.XmlElementAttribute("doc_type")]
        public MdlpApiClient.Xsd.Sale_Doc_Type_Enum Doc_Type { get; set; }
        
        /// <summary>
        /// <para>Наименование документа (обязательно к заполнению пользователем при указании вида документа со значением "прочее")</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Наименование документа (обязательно к заполнению пользователем при указании вида " +
            "документа со значением \"прочее\")")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_name")]
        public string Doc_Name { get; set; }
        
        /// <summary>
        /// <para>Номер документа (элемент обязательный, в случае отсутствия номера, указывается "б/н")</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер документа (элемент обязательный, в случае отсутствия номера, указывается \"б" +
            "/н\")")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_number")]
        public string Doc_Number { get; set; }
        
        /// <summary>
        /// <para>Дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Льготный рецепт</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Льготный рецепт")]
        [System.Xml.Serialization.XmlElementAttribute("prescription")]
        public Retail_SaleSalesUnionSale_DocsPrescription Prescription { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_SaleSalesUnionSale_DocsPrescription", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_SaleSalesUnionSale_DocsPrescription
    {
        
        /// <summary>
        /// <para>Реквизиты документа: номер льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("prescription_num")]
        public string Prescription_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: дата регистрации льготного рецепта</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: дата регистрации льготного рецепта")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("prescription_date")]
        public string Prescription_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер серии льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер серии льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("prescription_series")]
        public string Prescription_Series { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному р" +
        "ецепту")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("recipe", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: дата регистрации льготного рецепта</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: дата регистрации льготного рецепта")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер серии льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер серии льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_series")]
        public string Doc_Series { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RecipeOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<RecipeOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Recipe" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Recipe" /> class.</para>
        /// </summary>
        public Recipe()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<RecipeOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 521;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RecipeOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecipeOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RecipeOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<RecipeOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RecipeOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RecipeOrder_Details" /> class.</para>
        /// </summary>
        public RecipeOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<RecipeOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RecipeOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecipeOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания медицинской помощи</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания мед" +
        "ицинской помощи")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("health_care", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Health_Care
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа, на основании которого осуществлена выдача - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа, на основании которого осуществлена выдача - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа, на основании которого осуществлена выдача - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа, на основании которого осуществлена выдача - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Health_CareOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Health_CareOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Health_Care" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Health_Care" /> class.</para>
        /// </summary>
        public Health_Care()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Health_CareOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 531;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Health_CareOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Health_CareOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Health_CareOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Health_CareOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Health_CareOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Health_CareOrder_Details" /> class.</para>
        /// </summary>
        public Health_CareOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Health_CareOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Health_CareOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Health_CareOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о передаче лекарственных препаратов на уничтожение</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о передаче лекарственных препаратов на уничтожение" +
        "")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_destruction", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Destruction
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>ИНН/КПП организации, осуществляющей уничтожение</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН/КПП организации, осуществляющей уничтожение")]
        [System.Xml.Serialization.XmlElementAttribute("destruction_org")]
        public MdlpApiClient.Xsd.Org_Address_Type Destruction_Org { get; set; }
        
        /// <summary>
        /// <para>Реквизиты договора передачи на уничтожение: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты договора передачи на уничтожение: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты договора передачи на уничтожение: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты договора передачи на уничтожение: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты акта передачи на уничтожение: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты акта передачи на уничтожение: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("act_number")]
        public string Act_Number { get; set; }
        
        /// <summary>
        /// <para>Реквизиты акта передачи на уничтожение: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты акта передачи на уничтожение: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("act_date")]
        public string Act_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_DestructionOrder_DetailsDetail> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_DestructionOrder_DetailsDetail> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Destruction" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Destruction" /> class.</para>
        /// </summary>
        public Move_Destruction()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Move_DestructionOrder_DetailsDetail>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 541;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_DestructionOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_DestructionOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_DestructionOrder_DetailsDetail> _detail;
        
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_DestructionOrder_DetailsDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_DestructionOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_DestructionOrder_Details" /> class.</para>
        /// </summary>
        public Move_DestructionOrder_Details()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Move_DestructionOrder_DetailsDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_DestructionOrder_DetailsDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_DestructionOrder_DetailsDetail
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Реквизиты решения Росздравнадзора о выводе из оборота. Заполняется в случает решения Росздравнадзора.</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты решения Росздравнадзора о выводе из оборота. Заполняется в случает реше" +
            "ния Росздравнадзора.")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("decision")]
        public string Decision { get; set; }
        
        /// <summary>
        /// <para>Основание передачи на уничтожение</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Основание передачи на уничтожение")]
        [System.Xml.Serialization.XmlElementAttribute("destruction_type")]
        public MdlpApiClient.Xsd.Destruction_Type_Enum Destruction_Type { get; set; }
        
        /// <summary>
        /// <para>Причина передачи на уничтожение</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина передачи на уничтожение")]
        [System.Xml.Serialization.XmlElementAttribute("reason_for_destruction")]
        public MdlpApiClient.Xsd.Reason_For_Destruction_Type_Enum Reason_For_Destruction { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reason_For_Destruction-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Reason_For_Destruction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Reason_For_DestructionSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о факте уничтожения лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о факте уничтожения лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("destruction", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Destruction
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Способ уничтожения</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Способ уничтожения")]
        [System.Xml.Serialization.XmlElementAttribute("destruction_method")]
        public MdlpApiClient.Xsd.Destruction_Method_Enum Destruction_Method { get; set; }
        
        /// <summary>
        /// <para>ИНН/КПП организации, осуществляющей уничтожение</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН/КПП организации, осуществляющей уничтожение")]
        [System.Xml.Serialization.XmlElementAttribute("destruction_org")]
        public DestructionDestruction_Org Destruction_Org { get; set; }
        
        /// <summary>
        /// <para>Реквизиты акта об уничтожении: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты акта об уничтожении: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты акта об уничтожении: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты акта об уничтожении: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public DestructionOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 542;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DestructionDestruction_Org", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestructionDestruction_Org
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ul")]
        public DestructionDestruction_OrgUl Ul { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("fl")]
        public DestructionDestruction_OrgFl Fl { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DestructionDestruction_OrgUl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestructionDestruction_OrgUl
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - юридического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{8}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        /// <summary>
        /// <para>Код причины постановки на учет (КПП)</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}")]
        [System.Xml.Serialization.XmlElementAttribute("kpp")]
        public string Kpp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DestructionDestruction_OrgFl", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestructionDestruction_OrgFl
    {
        
        /// <summary>
        /// <para>Идентификационный номер налогоплательщика - физического лица</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{10}")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DestructionOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DestructionOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DestructionOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DestructionOrder_Details" /> class.</para>
        /// </summary>
        public DestructionOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о выводе из оборота лекарственных препаратов по различным причинам</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о выводе из оборота лекарственных препаратов по ра" +
        "зличным причинам")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("withdrawal", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Withdrawal
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Регистрационный номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Регистрационный номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Дата регистрации документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата регистрации документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип вывода из оборота</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип вывода из оборота")]
        [System.Xml.Serialization.XmlElementAttribute("withdrawal_type")]
        public MdlpApiClient.Xsd.Withdrawal_Type_Enum Withdrawal_Type { get; set; }
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public WithdrawalOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 552;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WithdrawalOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WithdrawalOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="WithdrawalOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WithdrawalOrder_Details" /> class.</para>
        /// </summary>
        public WithdrawalOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление получателя об отгрузке лекарственных препаратов со склада отправителя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление получателя об отгрузке лекарственных препаратов со склада отправителя" +
        "")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_order_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Order_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа отгрузки: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа отгрузки: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа отгрузки: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа отгрузки: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип операции отгрузки со склада</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции отгрузки со склада")]
        [System.Xml.Serialization.XmlElementAttribute("turnover_type")]
        public MdlpApiClient.Xsd.Turnover_Type_Enum Turnover_Type { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора) в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора) в Единой информационной системе в сфере зак" +
            "упок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Order_Notification" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Order_Notification" /> class.</para>
        /// </summary>
        public Move_Order_Notification()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 601;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Order_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Order_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Order_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Order_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Move_Order_NotificationOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Order_NotificationOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Order_NotificationOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Move_Order_NotificationOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Order_NotificationOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Order_NotificationOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Order_NotificationOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Order_NotificationOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Move_Order_NotificationOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Move_Order_NotificationOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Order_NotificationOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Order_NotificationOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Уведомление отправителя о приемке лекарственных препаратов на склад получателя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление отправителя о приемке лекарственных препаратов на склад получателя")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_order_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Дата приемки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата приемки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Документ подтверждающий получение: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документ подтверждающий получение: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Документ подтверждающий получение: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документ подтверждающий получение: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип операции приемки на склад</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции приемки на склад")]
        [System.Xml.Serialization.XmlElementAttribute("receive_type")]
        public MdlpApiClient.Xsd.Receive_Type_Enum Receive_Type { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора) в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора) в Единой информационной системе в сфере зак" +
            "упок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Order_Notification" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Order_Notification" /> class.</para>
        /// </summary>
        public Receive_Order_Notification()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 602;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Order_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Order_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Order_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Receive_Order_NotificationOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Order_NotificationOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_NotificationOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Receive_Order_NotificationOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведенья посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Order_NotificationOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_NotificationOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Order_NotificationOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Order_NotificationOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Receive_Order_NotificationOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Receive_Order_NotificationOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Order_NotificationOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_NotificationOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Уведомление собственника об отгрузке лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление собственника об отгрузке лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_owner_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Owner_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника ЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника ЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_Owner_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 603;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Owner_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Owner_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Owner_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Owner_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Move_Owner_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление получателя об отзыве отправителем переданных лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление получателя об отзыве отправителем переданных лекарственных препаратов" +
        "")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("refusal_sender_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_Sender_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации - получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации - получателя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Причина отзыва</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина отзыва")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("reason")]
        public string Reason { get; set; }
        
        /// <summary>
        /// <para>Подтверждение отзыва приостановленного товара</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Подтверждение отзыва приостановленного товара")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_paused")]
        public bool Confirm_Paused { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Confirm_Paused-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confirm_Paused property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Confirm_PausedSpecified { get; set; }
        
        /// <summary>
        /// <para>Список отзываемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отзываемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Refusal_Sender_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 605;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Refusal_Sender_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_Sender_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Refusal_Sender_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Refusal_Sender_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Refusal_Sender_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление отправителя об отказе получателя от приемки лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление отправителя об отказе получателя от приемки лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("refusal_receiver_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_Receiver_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Причина отказа</para>
        /// <para>Строка произвольной длины, но не более 1000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина отказа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("reason")]
        public string Reason { get; set; }
        
        /// <summary>
        /// <para>Подтверждение об отказе в приемке приостановленного товара</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Подтверждение об отказе в приемке приостановленного товара")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_paused")]
        public bool Confirm_Paused { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Confirm_Paused-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confirm_Paused property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Confirm_PausedSpecified { get; set; }
        
        /// <summary>
        /// <para>Список не принятой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список не принятой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Refusal_Receiver_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 606;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Refusal_Receiver_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Refusal_Receiver_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Refusal_Receiver_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Refusal_Receiver_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Refusal_Receiver_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление о подтверждении (акцептовании) сведений</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление о подтверждении (акцептовании) сведений")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("accept_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accept_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор контрагента</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public string Counterparty_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Подтверждение приемки приостановленного товара</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Подтверждение приемки приостановленного товара")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_paused")]
        public bool Confirm_Paused { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Confirm_Paused-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confirm_Paused property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Confirm_PausedSpecified { get; set; }
        
        /// <summary>
        /// <para>Список подтверждаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список подтверждаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Accept_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 607;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Accept_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accept_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Accept_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Accept_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Accept_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление нового собственника о смене собственника лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление нового собственника о смене собственника лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("change_owner_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Owner_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Change_Owner_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 609;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_Owner_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Owner_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_Owner_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_Owner_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Change_Owner_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление получателя о возврате приостановленных лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление получателя о возврате приостановленных лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_return_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Return_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_Return_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 610;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_Return_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_Return_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_Return_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_Return_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Move_Return_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление отправителя о регистрации получателя в ИС МДЛП и приемке на склад лекарственных препаратов, ранее отгруженных на незарегистрированное место деятельности</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление отправителя о регистрации получателя в ИС МДЛП и приемке на склад лек" +
        "арственных препаратов, ранее отгруженных на незарегистрированное место деятельно" +
        "сти")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_unregistered_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Unregistered_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Дата приемки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата приемки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Документ подтверждающий получение: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документ подтверждающий получение: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Документ подтверждающий получение: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Документ подтверждающий получение: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Receive_Unregistered_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 611;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Unregistered_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Unregistered_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Unregistered_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Unregistered_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Receive_Unregistered_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление Получателя об отгрузке лекарственных препаратов со склада Отправителя в рамках смены владельца лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление Получателя об отгрузке лекарственных препаратов со склада Отправителя" +
        " в рамках смены владельца лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("state_dispatch_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class State_Dispatch_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public State_Dispatch_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 612;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("State_Dispatch_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class State_Dispatch_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="State_Dispatch_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="State_Dispatch_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public State_Dispatch_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreign_shipment_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Shipment_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Foreign_Shipment_NotificationContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Foreign_Shipment_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 613;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_Shipment_NotificationContract_Type", Namespace="")]
    public enum Foreign_Shipment_NotificationContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_Shipment_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Shipment_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_Shipment_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_Shipment_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Foreign_Shipment_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление о ввозе лекарственных препаратов в Российскую Федерацию</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление о ввозе лекарственных препаратов в Российскую Федерацию")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("foreign_import_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Import_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Foreign_Import_NotificationContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Сведения о подтверждающем документе: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о подтверждающем документе: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Сведения о подтверждающем документе: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о подтверждающем документе: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Foreign_Import_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 614;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_Import_NotificationContract_Type", Namespace="")]
    public enum Foreign_Import_NotificationContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Foreign_Import_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Foreign_Import_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Foreign_Import_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Foreign_Import_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Foreign_Import_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию из стран ЕАЭС</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию из стран " +
        "ЕАЭС")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eeu_shipment_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Shipment_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Eeu_Shipment_NotificationContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Shipment_Notification" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Shipment_Notification" /> class.</para>
        /// </summary>
        public Eeu_Shipment_Notification()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 615;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Shipment_NotificationContract_Type", Namespace="")]
    public enum Eeu_Shipment_NotificationContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Shipment_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Shipment_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Shipment_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Shipment_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Eeu_Shipment_NotificationOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Shipment_NotificationOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Shipment_NotificationOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Eeu_Shipment_NotificationOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведения посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Shipment_NotificationOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Shipment_NotificationOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Shipment_NotificationOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Shipment_NotificationOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Eeu_Shipment_NotificationOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Eeu_Shipment_NotificationOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Shipment_NotificationOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Shipment_NotificationOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Уведомление о ввозе из ЕАЭС и приемке лекарственных препаратов на склад покупателя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление о ввозе из ЕАЭС и приемке лекарственных препаратов на склад покупател" +
        "я")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("eeu_import_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Import_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор грузоотправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор грузоотправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Eeu_Import_NotificationContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список принимаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список принимаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Import_Notification" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Import_Notification" /> class.</para>
        /// </summary>
        public Eeu_Import_Notification()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 616;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Import_NotificationContract_Type", Namespace="")]
    public enum Eeu_Import_NotificationContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Import_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Import_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Import_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Import_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Eeu_Import_NotificationOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Import_NotificationOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Import_NotificationOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Eeu_Import_NotificationOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции. Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции. Если сведения посылаются в транспортной упаковке - с" +
            "тоимость единичной упаковки внутри третичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Import_NotificationOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Import_NotificationOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Eeu_Import_NotificationOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Eeu_Import_NotificationOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Eeu_Import_NotificationOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Eeu_Import_NotificationOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Eeu_Import_NotificationOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Eeu_Import_NotificationOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Уведомление отправителя об ошибках при приемке лекарственных препаратов на склад получателя</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление отправителя об ошибках при приемке лекарственных препаратов на склад " +
        "получателя")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("receive_order_errors_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_Errors_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_id")]
        public string Shipper_Id { get; set; }
        
        /// <summary>
        /// <para>Дата приемки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата приемки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_Order_Errors_NotificationOrder_DetailsErrors> _order_Details;
        
        /// <summary>
        /// <para>Список ошибок при приемке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список ошибок при приемке")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("errors")]
        public System.Collections.ObjectModel.Collection<Receive_Order_Errors_NotificationOrder_DetailsErrors> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Order_Errors_Notification" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Order_Errors_Notification" /> class.</para>
        /// </summary>
        public Receive_Order_Errors_Notification()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Receive_Order_Errors_NotificationOrder_DetailsErrors>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 617;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Order_Errors_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_Errors_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Receive_Order_Errors_NotificationOrder_DetailsErrors> _errors;
        
        /// <summary>
        /// <para>Список ошибок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список ошибок")]
        [System.Xml.Serialization.XmlElementAttribute("errors")]
        public System.Collections.ObjectModel.Collection<Receive_Order_Errors_NotificationOrder_DetailsErrors> Errors
        {
            get
            {
                return this._errors;
            }
            private set
            {
                this._errors = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Receive_Order_Errors_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Receive_Order_Errors_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Receive_Order_Errors_NotificationOrder_Details()
        {
            this._errors = new System.Collections.ObjectModel.Collection<Receive_Order_Errors_NotificationOrder_DetailsErrors>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Receive_Order_Errors_NotificationOrder_DetailsErrors", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Receive_Order_Errors_NotificationOrder_DetailsErrors
    {
        
        /// <summary>
        /// <para>Код ошибки</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код ошибки")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("error_code")]
        public string Error_Code { get; set; }
        
        /// <summary>
        /// <para>Текст ошибки</para>
        /// <para>Строка произвольной длины, но не более 4000 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 4000.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Текст ошибки")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(4000)]
        [System.Xml.Serialization.XmlElementAttribute("error_desc")]
        public string Error_Desc { get; set; }
        
        /// <summary>
        /// <para>Идентификатор ошибочной записи</para>
        /// <para>Строка произвольной длины, но не более 128 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 128.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор ошибочной записи")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(128)]
        [System.Xml.Serialization.XmlElementAttribute("object_id")]
        public string Object_Id { get; set; }
    }
    
    /// <summary>
    /// <para>Уведомление собственника об отгрузке лекарственных препаратов для выпуска готовой продукции</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление собственника об отгрузке лекарственных препаратов для выпуска готовой" +
        " продукции")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("move_to_release_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_To_Release_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника ЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника ЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Move_To_Release_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 618;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Move_To_Release_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Move_To_Release_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Move_To_Release_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Move_To_Release_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Move_To_Release_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление получателя об отгрузке лекарственных препаратов со склада отправителя в рамках агентского договора</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление получателя об отгрузке лекарственных препаратов со склада отправителя" +
        " в рамках агентского договора")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("agent_dispatch_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Agent_Dispatch_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип операции отгрузки со склада</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип операции отгрузки со склада")]
        [System.Xml.Serialization.XmlElementAttribute("turnover_type")]
        public MdlpApiClient.Xsd.Turnover_Type_Enum Turnover_Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Turnover_Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Turnover_Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Turnover_TypeSpecified { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Agent_Dispatch_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 619;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Agent_Dispatch_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Agent_Dispatch_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Agent_Dispatch_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Agent_Dispatch_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Agent_Dispatch_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление импортера о регистрации в ИС МДЛП сведений об условиях ввоза ЛП держателем РУ (или его представительством)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление импортера о регистрации в ИС МДЛП сведений об условиях ввоза ЛП держа" +
        "телем РУ (или его представительством)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("import_info_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_Info_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор продавца</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор продавца")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("seller_id")]
        public string Seller_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public Import_Info_NotificationContract_Type Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Import_Info_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 620;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Import_Info_NotificationContract_Type", Namespace="")]
    public enum Import_Info_NotificationContract_Type
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Import_Info_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_Info_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Import_Info_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Import_Info_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Import_Info_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление о регистрации в ИС МДЛП сведений о постановке в арбитраж/снятие арбитража</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление о регистрации в ИС МДЛП сведений о постановке в арбитраж/снятие арбит" +
        "ража")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("arbitration_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Arbitration_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор контрагента</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public string Counterparty_Id { get; set; }
        
        /// <summary>
        /// <para>Дата отгрузки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата отгрузки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания  - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Признак постановки в арбитраж/снятие арбитража</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Признак постановки в арбитраж/снятие арбитража")]
        [System.Xml.Serialization.XmlElementAttribute("sign_arbitration")]
        public MdlpApiClient.Xsd.Edit_Type_Enum Sign_Arbitration { get; set; }
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Arbitration_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 621;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Arbitration_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Arbitration_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Arbitration_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Arbitration_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Arbitration_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление о регистрации в ИС МДЛП сведений о возврате лекарственных препаратов контрактному производителю</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление о регистрации в ИС МДЛП сведений о возврате лекарственных препаратов " +
        "контрактному производителю")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("return_contract_production_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_Contract_Production_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор организации-получателя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-получателя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("receiver_id")]
        public string Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты подтверждающего первичного документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты подтверждающего первичного документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Список передаваемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список передаваемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public Return_Contract_Production_NotificationOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 622;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Return_Contract_Production_NotificationOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Return_Contract_Production_NotificationOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Return_Contract_Production_NotificationOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Return_Contract_Production_NotificationOrder_Details" /> class.</para>
        /// </summary>
        public Return_Contract_Production_NotificationOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Уведомление о регистрация в ИС МДЛП сведений о корректировке</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Уведомление о регистрация в ИС МДЛП сведений о корректировке")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("change_property_notification", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property_Notification
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор контрагента</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public string Counterparty_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип исходной операции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип исходной операции")]
        [System.Xml.Serialization.XmlElementAttribute("action_id_type")]
        public MdlpApiClient.Xsd.Action_Id_Type_Enum Action_Id_Type { get; set; }
        
        /// <summary>
        /// <para>Идентификатор запроса, подлежащего корректировке</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор запроса, подлежащего корректировке")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("operation_id")]
        public string Operation_Id { get; set; }
        
        /// <summary>
        /// <para>Сведения подлежащие корректировке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения подлежащие корректировке")]
        [System.Xml.Serialization.XmlElementAttribute("details")]
        public Change_Property_NotificationDetails Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 623;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_Property_NotificationDetails", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property_NotificationDetails
    {
        
        /// <summary>
        /// <para>Реквизиты документа - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Source-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Source property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceSpecified { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора) в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора) в Единой информационной системе в сфере зак" +
            "упок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Contract_Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Contract_Type property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Contract_TypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_Property_NotificationDetails" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_Property_NotificationDetails" /> class.</para>
        /// </summary>
        public Change_Property_NotificationDetails()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_Property_NotificationDetailsOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property_NotificationDetailsOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_Property_NotificationDetailsOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_Property_NotificationDetailsOrder_Details" /> class.</para>
        /// </summary>
        public Change_Property_NotificationDetailsOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_Property_NotificationDetailsOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property_NotificationDetailsOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Change_Property_NotificationDetailsOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "ения посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cost-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CostSpecified { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Vat_Value-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vat_Value property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Vat_ValueSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_Property_NotificationDetailsOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property_NotificationDetailsOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Change_Property_NotificationDetailsOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Change_Property_NotificationDetailsOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Change_Property_NotificationDetailsOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Change_Property_NotificationDetailsOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Change_Property_NotificationDetailsOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Change_Property_NotificationDetailsOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cost-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CostSpecified { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Vat_Value-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Vat_Value property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Vat_ValueSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП подтверждения (акцептования) сведений</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП подтверждения (акцептования) сведений")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("accept", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accept
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор контрагента</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор контрагента")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("counterparty_id")]
        public string Counterparty_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Подтверждение приемки приостановленного товара</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Подтверждение приемки приостановленного товара")]
        [System.Xml.Serialization.XmlElementAttribute("confirm_paused")]
        public bool Confirm_Paused { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Confirm_Paused-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Confirm_Paused property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Confirm_PausedSpecified { get; set; }
        
        /// <summary>
        /// <para>Список подтверждаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список подтверждаемой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("order_details")]
        public AcceptOrder_Details Order_Details { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 701;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AcceptOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="AcceptOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AcceptOrder_Details" /> class.</para>
        /// </summary>
        public AcceptOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об оприходовании</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об оприходовании")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("posting", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Posting
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Информация об организации-грузоотправителя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об организации-грузоотправителя")]
        [System.Xml.Serialization.XmlElementAttribute("shipper_info")]
        public PostingShipper_Info Shipper_Info { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: основания номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: основания номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа основания: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа основания: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        /// <summary>
        /// <para>Источник финансирования</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Источник финансирования")]
        [System.Xml.Serialization.XmlElementAttribute("source")]
        public MdlpApiClient.Xsd.Source_Type Source { get; set; }
        
        /// <summary>
        /// <para>Реестровый номер контракта (договора)в Единой информационной системе в сфере закупок</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реестровый номер контракта (договора)в Единой информационной системе в сфере заку" +
            "пок")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("contract_num")]
        public string Contract_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Posting" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Posting" /> class.</para>
        /// </summary>
        public Posting()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 702;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PostingShipper_Info", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostingShipper_Info
    {
        
        /// <summary>
        /// <para>ИНН</para>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// <para xml:lang="en">Pattern: ([0-9]{10}|[0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{10}|[0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        /// <summary>
        /// <para>Код причины постановки на учет (КПП)</para>
        /// <para xml:lang="en">Pattern: ([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{1}[1-9]{1}|[1-9]{1}[0-9]{1})[0-9]{7}")]
        [System.Xml.Serialization.XmlElementAttribute("kpp")]
        public string Kpp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PostingOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostingOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PostingOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PostingOrder_Details" /> class.</para>
        /// </summary>
        public PostingOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PostingOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostingOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public PostingOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "ения посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PostingOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostingOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PostingOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PostingOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public PostingOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<PostingOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PostingOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostingOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об оприходовании (импорт)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об оприходовании (импорт)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("posting_import", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Posting_Import
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: номер документа</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: номер документа")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        /// <summary>
        /// <para>Реквизиты первичного документа: дата документа</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты первичного документа: дата документа")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Тип договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип договора")]
        [System.Xml.Serialization.XmlElementAttribute("contract_type")]
        public MdlpApiClient.Xsd.Contract_Type_Enum Contract_Type { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Posting_Import" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Posting_Import" /> class.</para>
        /// </summary>
        public Posting_Import()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnion>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 703;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Posting_ImportOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Posting_ImportOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Posting_ImportOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Posting_ImportOrder_Details" /> class.</para>
        /// </summary>
        public Posting_ImportOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Posting_ImportOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Posting_ImportOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Сведения о транспортной упаковке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о транспортной упаковке")]
        [System.Xml.Serialization.XmlElementAttribute("sscc_detail")]
        public Posting_ImportOrder_DetailsUnionSscc_Detail Sscc_Detail { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если сведения посылаются в транспортной упаковке - стоимость единичной упаковки внутри третичной упаковки, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость). Если свед" +
            "ения посылаются в транспортной упаковке - стоимость единичной упаковки внутри тр" +
            "етичной упаковки, руб")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Posting_ImportOrder_DetailsUnionSscc_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Posting_ImportOrder_DetailsUnionSscc_Detail
    {
        
        /// <summary>
        /// <para>Номер транспортной упаковки</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер транспортной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnionSscc_DetailDetail> _detail;
        
        /// <summary>
        /// <para>Сведения о цене содержимого транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о цене содержимого транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnionSscc_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Detail-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Detail collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DetailSpecified
        {
            get
            {
                return (this.Detail.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Posting_ImportOrder_DetailsUnionSscc_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Posting_ImportOrder_DetailsUnionSscc_Detail" /> class.</para>
        /// </summary>
        public Posting_ImportOrder_DetailsUnionSscc_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Posting_ImportOrder_DetailsUnionSscc_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Posting_ImportOrder_DetailsUnionSscc_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Posting_ImportOrder_DetailsUnionSscc_DetailDetail
    {
        
        /// <summary>
        /// <para>Идентификатор товара в GS1 (GTIN)</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор товара в GS1 (GTIN)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Стоимость единицы продукции (с учетом налога на добавленную стоимость)</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость единицы продукции (с учетом налога на добавленную стоимость)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Cумма НДС, руб</para>
        /// <para>Стоимость</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Cумма НДС, руб")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о переупаковке и перемаркировке лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о переупаковке и перемаркировке лекарственных преп" +
        "аратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("relabeling", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Relabeling
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelabelingRelabeling_DetailDetail> _relabeling_Detail;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("relabeling_detail")]
        [System.Xml.Serialization.XmlArrayItemAttribute("detail")]
        public System.Collections.ObjectModel.Collection<RelabelingRelabeling_DetailDetail> Relabeling_Detail
        {
            get
            {
                return this._relabeling_Detail;
            }
            private set
            {
                this._relabeling_Detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Relabeling" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Relabeling" /> class.</para>
        /// </summary>
        public Relabeling()
        {
            this._relabeling_Detail = new System.Collections.ObjectModel.Collection<RelabelingRelabeling_DetailDetail>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 811;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RelabelingRelabeling_Detail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RelabelingRelabeling_Detail
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelabelingRelabeling_DetailDetail> _detail;
        
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<RelabelingRelabeling_DetailDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RelabelingRelabeling_Detail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RelabelingRelabeling_Detail" /> class.</para>
        /// </summary>
        public RelabelingRelabeling_Detail()
        {
            this._detail = new System.Collections.ObjectModel.Collection<RelabelingRelabeling_DetailDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RelabelingRelabeling_DetailDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RelabelingRelabeling_DetailDetail
    {
        
        /// <summary>
        /// <para>SGTIN новой потребительской упаковки</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SGTIN новой потребительской упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("new_sgtin")]
        public string New_Sgtin { get; set; }
        
        /// <summary>
        /// <para>SGTIN старой потребительской упаковки</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("SGTIN старой потребительской упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("old_sgtin")]
        public string Old_Sgtin { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об агрегировании упаковок лекарственных препаратов в третичную (заводскую, транспортную) упаковку</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об агрегировании упаковок лекарственных препаратов" +
        " в третичную (заводскую, транспортную) упаковку")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unit_pack", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_Pack
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Дата упаковки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Содержимое упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Содержимое упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("content")]
        public Unit_PackContent Content { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 911;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Unit_PackContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_PackContent
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Unit_PackContent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Unit_PackContent" /> class.</para>
        /// </summary>
        public Unit_PackContent()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о расформировании третичной (заводской, транспортной) упаковки лекарственных препаратов</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о расформировании третичной (заводской, транспортн" +
        "ой) упаковки лекарственных препаратов")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unit_unpack", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_Unpack
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата расформирования</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата расформирования")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Unit_Unpack" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Unit_Unpack" /> class.</para>
        /// </summary>
        public Unit_Unpack()
        {
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// <para>Тип расформирования. При отсутствии элемента расформирование на один уровень (по умолчанию). При включении элемента рекурсивно до вторичной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип расформирования. При отсутствии элемента расформирование на один уровень (по " +
            "умолчанию). При включении элемента рекурсивно до вторичной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("is_recursive")]
        public bool Is_Recursive { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Is_Recursive-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Is_Recursive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Is_RecursiveSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 912;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об изъятии упаковок лекарственных препаратов из третичной (заводской, транспортной) упаковки</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об изъятии упаковок лекарственных препаратов из тр" +
        "етичной (заводской, транспортной) упаковки")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unit_extract", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_Extract
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата изъятия</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата изъятия")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Содержимое упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Содержимое упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("content")]
        public Unit_ExtractContent Content { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 913;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Unit_ExtractContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_ExtractContent
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Unit_ExtractContent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Unit_ExtractContent" /> class.</para>
        /// </summary>
        public Unit_ExtractContent()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о дополнительном вложении упаковок в третичную (заводскую, транспортную) упаковку</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о дополнительном вложении упаковок в третичную (за" +
        "водскую, транспортную) упаковку")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("unit_append", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_Append
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата включения</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата включения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        /// <summary>
        /// <para>Содержимое упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Содержимое упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("content")]
        public Unit_AppendContent Content { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 914;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Unit_AppendContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Unit_AppendContent
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Unit_AppendContent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Unit_AppendContent" /> class.</para>
        /// </summary>
        public Unit_AppendContent()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об агрегировании во множество третичных (заводских, транспортных) упаковок</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об агрегировании во множество третичных (заводских" +
        ", транспортных) упаковок")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("multi_pack", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_Pack
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата упаковки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Multi_PackBy_SgtinDetail> _by_Sgtin;
        
        /// <summary>
        /// <para>Вложены только SGTIN</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вложены только SGTIN")]
        [System.Xml.Serialization.XmlArrayAttribute("by_sgtin")]
        [System.Xml.Serialization.XmlArrayItemAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Multi_PackBy_SgtinDetail> By_Sgtin
        {
            get
            {
                return this._by_Sgtin;
            }
            private set
            {
                this._by_Sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die By_Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the By_Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool By_SgtinSpecified
        {
            get
            {
                return (this.By_Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_Pack" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_Pack" /> class.</para>
        /// </summary>
        public Multi_Pack()
        {
            this._by_Sgtin = new System.Collections.ObjectModel.Collection<Multi_PackBy_SgtinDetail>();
            this._by_Sscc = new System.Collections.ObjectModel.Collection<Multi_PackBy_SsccDetail>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Multi_PackBy_SsccDetail> _by_Sscc;
        
        /// <summary>
        /// <para>Вложены только SSCC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вложены только SSCC")]
        [System.Xml.Serialization.XmlArrayAttribute("by_sscc")]
        [System.Xml.Serialization.XmlArrayItemAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Multi_PackBy_SsccDetail> By_Sscc
        {
            get
            {
                return this._by_Sscc;
            }
            private set
            {
                this._by_Sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die By_Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the By_Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool By_SsccSpecified
        {
            get
            {
                return (this.By_Sscc.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 915;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_PackBy_Sgtin", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_PackBy_Sgtin
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Multi_PackBy_SgtinDetail> _detail;
        
        /// <summary>
        /// <para>Данные</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Данные")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Multi_PackBy_SgtinDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_PackBy_Sgtin" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_PackBy_Sgtin" /> class.</para>
        /// </summary>
        public Multi_PackBy_Sgtin()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Multi_PackBy_SgtinDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_PackBy_SgtinDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_PackBy_SgtinDetail
    {
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _content;
        
        /// <summary>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("content")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Content
        {
            get
            {
                return this._content;
            }
            private set
            {
                this._content = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_PackBy_SgtinDetail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_PackBy_SgtinDetail" /> class.</para>
        /// </summary>
        public Multi_PackBy_SgtinDetail()
        {
            this._content = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_PackBy_SgtinDetailContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_PackBy_SgtinDetailContent
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Вложенные идентификаторы SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вложенные идентификаторы SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_PackBy_SgtinDetailContent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_PackBy_SgtinDetailContent" /> class.</para>
        /// </summary>
        public Multi_PackBy_SgtinDetailContent()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_PackBy_Sscc", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_PackBy_Sscc
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Multi_PackBy_SsccDetail> _detail;
        
        /// <summary>
        /// <para>Данные</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Данные")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Multi_PackBy_SsccDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_PackBy_Sscc" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_PackBy_Sscc" /> class.</para>
        /// </summary>
        public Multi_PackBy_Sscc()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Multi_PackBy_SsccDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_PackBy_SsccDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_PackBy_SsccDetail
    {
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _content;
        
        /// <summary>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlArrayAttribute("content")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Content
        {
            get
            {
                return this._content;
            }
            private set
            {
                this._content = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_PackBy_SsccDetail" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_PackBy_SsccDetail" /> class.</para>
        /// </summary>
        public Multi_PackBy_SsccDetail()
        {
            this._content = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_PackBy_SsccDetailContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_PackBy_SsccDetailContent
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Вложенные идентификаторы SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Вложенные идентификаторы SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_PackBy_SsccDetailContent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_PackBy_SsccDetailContent" /> class.</para>
        /// </summary>
        public Multi_PackBy_SsccDetailContent()
        {
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о дополнительном вложении во множество третичных (заводских, транспортных) упаковок</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о дополнительном вложении во множество третичных (" +
        "заводских, транспортных) упаковок")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("multi_unit_append", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_Unit_Append
    {
        
        /// <summary>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор субъекта обращения в ИС МДЛП")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата включения</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата включения")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Multi_Unit_AppendInfo_AppendDetail> _info_Append;
        
        /// <summary>
        /// <para>Сведения о дополнительном вложении</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сведения о дополнительном вложении")]
        [System.Xml.Serialization.XmlArrayAttribute("info_append")]
        [System.Xml.Serialization.XmlArrayItemAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Multi_Unit_AppendInfo_AppendDetail> Info_Append
        {
            get
            {
                return this._info_Append;
            }
            private set
            {
                this._info_Append = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_Unit_Append" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_Unit_Append" /> class.</para>
        /// </summary>
        public Multi_Unit_Append()
        {
            this._info_Append = new System.Collections.ObjectModel.Collection<Multi_Unit_AppendInfo_AppendDetail>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 916;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_Unit_AppendInfo_Append", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_Unit_AppendInfo_Append
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Multi_Unit_AppendInfo_AppendDetail> _detail;
        
        /// <summary>
        /// <para>Данные</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Данные")]
        [System.Xml.Serialization.XmlElementAttribute("detail")]
        public System.Collections.ObjectModel.Collection<Multi_Unit_AppendInfo_AppendDetail> Detail
        {
            get
            {
                return this._detail;
            }
            private set
            {
                this._detail = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_Unit_AppendInfo_Append" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_Unit_AppendInfo_Append" /> class.</para>
        /// </summary>
        public Multi_Unit_AppendInfo_Append()
        {
            this._detail = new System.Collections.ObjectModel.Collection<Multi_Unit_AppendInfo_AppendDetail>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_Unit_AppendInfo_AppendDetail", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_Unit_AppendInfo_AppendDetail
    {
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public string Sscc { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("content")]
        public Multi_Unit_AppendInfo_AppendDetailContent Content { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Multi_Unit_AppendInfo_AppendDetailContent", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Multi_Unit_AppendInfo_AppendDetailContent
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sgtin-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sgtin collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SgtinSpecified
        {
            get
            {
                return (this.Sgtin.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Multi_Unit_AppendInfo_AppendDetailContent" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Multi_Unit_AppendInfo_AppendDetailContent" /> class.</para>
        /// </summary>
        public Multi_Unit_AppendInfo_AppendDetailContent()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
            this._sscc = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sscc;
        
        /// <summary>
        /// <para>Идентификатор SSCC</para>
        /// <para>Индивидуальный серийный номер третичной/транспортной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{18}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SSCC")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{18}")]
        [System.Xml.Serialization.XmlElementAttribute("sscc")]
        public System.Collections.ObjectModel.Collection<string> Sscc
        {
            get
            {
                return this._sscc;
            }
            private set
            {
                this._sscc = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sscc-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Sscc collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SsccSpecified
        {
            get
            {
                return (this.Sscc.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об эмиссии (информация от СУЗ)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об эмиссии (информация от СУЗ)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("code_emission", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Code_Emission
    {
        
        /// <summary>
        /// <para>Идентификатор отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата эмиссии</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата эмиссии")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор СУЗ</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор СУЗ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("oms_id")]
        public string Oms_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор заказа СУЗ</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор заказа СУЗ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("oms_order_id")]
        public string Oms_Order_Id { get; set; }
        
        /// <summary>
        /// <para>Код GTIN</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код GTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Code_Emission" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Code_Emission" /> class.</para>
        /// </summary>
        public Code_Emission()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10300;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Code_EmissionSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Code_EmissionSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Code_EmissionSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Code_EmissionSigns" /> class.</para>
        /// </summary>
        public Code_EmissionSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отбраковке (информация от СУЗ)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отбраковке (информация от СУЗ)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("skzkm_report_of_dropout", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Report_Of_Dropout
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор СУЗ</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор СУЗ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("oms_id")]
        public string Oms_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор заказа СУЗ</para>
        /// <para>GUID</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор заказа СУЗ")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("oms_order_id")]
        public string Oms_Order_Id { get; set; }
        
        /// <summary>
        /// <para>Причина списания</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Причина списания")]
        [System.Xml.Serialization.XmlElementAttribute("dropout_reason")]
        public MdlpApiClient.Xsd.Dropout_Reason_Type_Enum Dropout_Reason { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Report_Of_Dropout" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Report_Of_Dropout" /> class.</para>
        /// </summary>
        public Skzkm_Report_Of_Dropout()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// <para>Информация об устройстве РЭ или РВ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об устройстве РЭ или РВ")]
        [System.Xml.Serialization.XmlElementAttribute("device_info")]
        public MdlpApiClient.Xsd.Skzkm_Info_Type Device_Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10305;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_Report_Of_DropoutOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Report_Of_DropoutOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Report_Of_DropoutOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Report_Of_DropoutOrder_Details" /> class.</para>
        /// </summary>
        public Skzkm_Report_Of_DropoutOrder_Details()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки (информация с СКЗКМ)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки (информа" +
        "ция с СКЗКМ)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("skzkm_register_end_packing", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Register_End_Packing
    {
        
        /// <summary>
        /// <para>Идентификатор отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата упаковки</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Тип производственного заказа</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип производственного заказа")]
        [System.Xml.Serialization.XmlElementAttribute("order_type")]
        public MdlpApiClient.Xsd.Order_Type_Enum Order_Type { get; set; }
        
        /// <summary>
        /// <para>Идентификатор собственника (в случае контрактного производства)</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор собственника (в случае контрактного производства)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("owner_id")]
        public string Owner_Id { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
        
        /// <summary>
        /// <para>Код GTIN</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код GTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Перечень идентификационных кодов потребительских упаковок</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень идентификационных кодов потребительских упаковок")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Register_End_Packing" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Register_End_Packing" /> class.</para>
        /// </summary>
        public Skzkm_Register_End_Packing()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// <para>Информация об устройстве РЭ или РВ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об устройстве РЭ или РВ")]
        [System.Xml.Serialization.XmlElementAttribute("device_info")]
        public MdlpApiClient.Xsd.Skzkm_Info_Type Device_Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10311;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_Register_End_PackingSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Register_End_PackingSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Идентификатор SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Register_End_PackingSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Register_End_PackingSigns" /> class.</para>
        /// </summary>
        public Skzkm_Register_End_PackingSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках розничной торговли с использованием ККТ</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках рознич" +
        "ной торговли с использованием ККТ")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("retail_sell_kkt", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sell_Kkt
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>ИНН организации</para>
        /// <para>ИНН</para>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// <para xml:lang="en">Pattern: ([0-9]{10}|[0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН организации")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{10}|[0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceipt> _sell_Details;
        
        /// <summary>
        /// <para>Детализация продажи</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Детализация продажи")]
        [System.Xml.Serialization.XmlArrayAttribute("sell_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("receipt")]
        public System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceipt> Sell_Details
        {
            get
            {
                return this._sell_Details;
            }
            private set
            {
                this._sell_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_Sell_Kkt" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_Sell_Kkt" /> class.</para>
        /// </summary>
        public Retail_Sell_Kkt()
        {
            this._sell_Details = new System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceipt>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10511;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_Sell_KktSell_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sell_KktSell_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceipt> _receipt;
        
        /// <summary>
        /// <para>Перечень фискальных чеков, по которым была произведена продажа</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень фискальных чеков, по которым была произведена продажа")]
        [System.Xml.Serialization.XmlElementAttribute("receipt")]
        public System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceipt> Receipt
        {
            get
            {
                return this._receipt;
            }
            private set
            {
                this._receipt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_Sell_KktSell_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_Sell_KktSell_Details" /> class.</para>
        /// </summary>
        public Retail_Sell_KktSell_Details()
        {
            this._receipt = new System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceipt>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_Sell_KktSell_DetailsReceipt", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sell_KktSell_DetailsReceipt
    {
        
        /// <summary>
        /// <para>Тип фискального чека (3 - чек продажи, 31 - чек коррекции)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип фискального чека (3 - чек продажи, 31 - чек коррекции)")]
        [System.Xml.Serialization.XmlElementAttribute("type")]
        public MdlpApiClient.Xsd.Receipt_Type_Enum Type { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции (тег 1012)</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции (тег 1012)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Льготный рецепт</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Льготный рецепт")]
        [System.Xml.Serialization.XmlElementAttribute("prescription")]
        public Retail_Sell_KktSell_DetailsReceiptPrescription Prescription { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceiptItemsItem> _items;
        
        /// <summary>
        /// <para>Список товарных позиций в фискальном чеке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список товарных позиций в фискальном чеке")]
        [System.Xml.Serialization.XmlArrayAttribute("items")]
        [System.Xml.Serialization.XmlArrayItemAttribute("item")]
        public System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceiptItemsItem> Items
        {
            get
            {
                return this._items;
            }
            private set
            {
                this._items = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_Sell_KktSell_DetailsReceipt" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_Sell_KktSell_DetailsReceipt" /> class.</para>
        /// </summary>
        public Retail_Sell_KktSell_DetailsReceipt()
        {
            this._items = new System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceiptItemsItem>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_Sell_KktSell_DetailsReceiptPrescription", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sell_KktSell_DetailsReceiptPrescription
    {
        
        /// <summary>
        /// <para>Реквизиты документа: дата регистрации льготного рецепта</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: дата регистрации льготного рецепта")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер серии льготного рецепта (опционален)</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер серии льготного рецепта (опционален)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_series")]
        public string Doc_Series { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_Sell_KktSell_DetailsReceiptItems", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sell_KktSell_DetailsReceiptItems
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceiptItemsItem> _item;
        
        /// <summary>
        /// <para>Параметры товарной позиции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Параметры товарной позиции")]
        [System.Xml.Serialization.XmlElementAttribute("item")]
        public System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceiptItemsItem> Item
        {
            get
            {
                return this._item;
            }
            private set
            {
                this._item = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Retail_Sell_KktSell_DetailsReceiptItems" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Retail_Sell_KktSell_DetailsReceiptItems" /> class.</para>
        /// </summary>
        public Retail_Sell_KktSell_DetailsReceiptItems()
        {
            this._item = new System.Collections.ObjectModel.Collection<Retail_Sell_KktSell_DetailsReceiptItemsItem>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Retail_Sell_KktSell_DetailsReceiptItemsItem", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Retail_Sell_KktSell_DetailsReceiptItemsItem
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Стоимость предмета расчета с учетом скидок и наценок (тег 1079)</para>
        /// <para>Стоимость для ККТ, в копейках</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Стоимость предмета расчета с учетом скидок и наценок (тег 1079)")]
        [System.Xml.Serialization.XmlElementAttribute("cost")]
        public decimal Cost { get; set; }
        
        /// <summary>
        /// <para>Сумма НДС (тег 1200)</para>
        /// <para>Стоимость для ККТ, в копейках</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сумма НДС (тег 1200)")]
        [System.Xml.Serialization.XmlElementAttribute("vat_value")]
        public decimal Vat_Value { get; set; }
        
        /// <summary>
        /// <para>Сумма льготной скидки</para>
        /// <para>Стоимость для ККТ, в копейках</para>
        /// <para xml:lang="en">Total number of digits: 16.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Сумма льготной скидки")]
        [System.Xml.Serialization.XmlElementAttribute("discount")]
        public decimal Discount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Discount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Discount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountSpecified { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту (информация с СКЗКМ)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному р" +
        "ецепту (информация с СКЗКМ)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("skzkm_recipe", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Recipe
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: дата регистрации льготного рецепта</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: дата регистрации льготного рецепта")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер серии льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер серии льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_series")]
        public string Doc_Series { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Skzkm_RecipeOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Skzkm_RecipeOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Recipe" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Recipe" /> class.</para>
        /// </summary>
        public Skzkm_Recipe()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Skzkm_RecipeOrder_DetailsUnion>();
        }
        
        /// <summary>
        /// <para>Информация об устройстве РЭ или РВ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об устройстве РЭ или РВ")]
        [System.Xml.Serialization.XmlElementAttribute("device_info")]
        public MdlpApiClient.Xsd.Skzkm_Info_Type Device_Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10521;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_RecipeOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_RecipeOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Skzkm_RecipeOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Skzkm_RecipeOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_RecipeOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_RecipeOrder_Details" /> class.</para>
        /// </summary>
        public Skzkm_RecipeOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Skzkm_RecipeOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_RecipeOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_RecipeOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту с использованием ККТ</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному р" +
        "ецепту с использованием ККТ")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("recipe_kkt", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe_Kkt
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП (14 или 36 знаков)</para>
        /// <para xml:lang="en">Minimum length: 14.</para>
        /// <para xml:lang="en">Maximum length: 36.</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(36)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9" +
            "]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>ИНН организации (тег 1018)</para>
        /// <para>ИНН</para>
        /// <para xml:lang="en">Minimum length: 10.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// <para xml:lang="en">Pattern: ([0-9]{10}|[0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("ИНН организации (тег 1018)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(10)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]{10}|[0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("inn")]
        public string Inn { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceipt> _recipe_Details;
        
        /// <summary>
        /// <para>Детализация отпуска</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Детализация отпуска")]
        [System.Xml.Serialization.XmlArrayAttribute("recipe_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("receipt")]
        public System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceipt> Recipe_Details
        {
            get
            {
                return this._recipe_Details;
            }
            private set
            {
                this._recipe_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Recipe_Kkt" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Recipe_Kkt" /> class.</para>
        /// </summary>
        public Recipe_Kkt()
        {
            this._recipe_Details = new System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceipt>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10522;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Recipe_KktRecipe_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe_KktRecipe_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceipt> _receipt;
        
        /// <summary>
        /// <para>Перечень фискальных чеков, по которым был произведён отпуск</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Перечень фискальных чеков, по которым был произведён отпуск")]
        [System.Xml.Serialization.XmlElementAttribute("receipt")]
        public System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceipt> Receipt
        {
            get
            {
                return this._receipt;
            }
            private set
            {
                this._receipt = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Recipe_KktRecipe_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Recipe_KktRecipe_Details" /> class.</para>
        /// </summary>
        public Recipe_KktRecipe_Details()
        {
            this._receipt = new System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceipt>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Recipe_KktRecipe_DetailsReceipt", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe_KktRecipe_DetailsReceipt
    {
        
        /// <summary>
        /// <para>Тип фискального чека (3 - чек продажи, 31 - чек коррекции)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Тип фискального чека (3 - чек продажи, 31 - чек коррекции)")]
        [System.Xml.Serialization.XmlElementAttribute("type")]
        public MdlpApiClient.Xsd.Receipt_Type_Enum Type { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции (тег 1012)</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции (тег 1012)")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Льготный рецепт</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Льготный рецепт")]
        [System.Xml.Serialization.XmlElementAttribute("prescription")]
        public Recipe_KktRecipe_DetailsReceiptPrescription Prescription { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceiptItemsItem> _items;
        
        /// <summary>
        /// <para>Список товарных позиций в фискальном чеке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список товарных позиций в фискальном чеке")]
        [System.Xml.Serialization.XmlArrayAttribute("items")]
        [System.Xml.Serialization.XmlArrayItemAttribute("item")]
        public System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceiptItemsItem> Items
        {
            get
            {
                return this._items;
            }
            private set
            {
                this._items = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Recipe_KktRecipe_DetailsReceipt" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Recipe_KktRecipe_DetailsReceipt" /> class.</para>
        /// </summary>
        public Recipe_KktRecipe_DetailsReceipt()
        {
            this._items = new System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceiptItemsItem>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Recipe_KktRecipe_DetailsReceiptPrescription", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe_KktRecipe_DetailsReceiptPrescription
    {
        
        /// <summary>
        /// <para>Реквизиты документа: дата регистрации льготного рецепта</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: дата регистрации льготного рецепта")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер серии льготного рецепта (опционален)</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер серии льготного рецепта (опционален)")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_series")]
        public string Doc_Series { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Recipe_KktRecipe_DetailsReceiptItems", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe_KktRecipe_DetailsReceiptItems
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceiptItemsItem> _item;
        
        /// <summary>
        /// <para>Параметры товарной позиции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Параметры товарной позиции")]
        [System.Xml.Serialization.XmlElementAttribute("item")]
        public System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceiptItemsItem> Item
        {
            get
            {
                return this._item;
            }
            private set
            {
                this._item = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Recipe_KktRecipe_DetailsReceiptItems" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Recipe_KktRecipe_DetailsReceiptItems" /> class.</para>
        /// </summary>
        public Recipe_KktRecipe_DetailsReceiptItems()
        {
            this._item = new System.Collections.ObjectModel.Collection<Recipe_KktRecipe_DetailsReceiptItemsItem>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Recipe_KktRecipe_DetailsReceiptItemsItem", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Recipe_KktRecipe_DetailsReceiptItemsItem
    {
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания медицинской помощи (информация с СКЗКМ)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания мед" +
        "ицинской помощи (информация с СКЗКМ)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("skzkm_health_care", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Health_Care
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа, на основании которого осуществлена выдача - дата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа, на основании которого осуществлена выдача - дата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа, на основании которого осуществлена выдача - номер</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа, на основании которого осуществлена выдача - номер")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Skzkm_Health_CareOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Skzkm_Health_CareOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Health_Care" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Health_Care" /> class.</para>
        /// </summary>
        public Skzkm_Health_Care()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Skzkm_Health_CareOrder_DetailsUnion>();
        }
        
        /// <summary>
        /// <para>Информация об устройстве РЭ или РВ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об устройстве РЭ или РВ")]
        [System.Xml.Serialization.XmlElementAttribute("device_info")]
        public MdlpApiClient.Xsd.Skzkm_Info_Type Device_Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10531;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_Health_CareOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Health_CareOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Skzkm_Health_CareOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Skzkm_Health_CareOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Health_CareOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Health_CareOrder_Details" /> class.</para>
        /// </summary>
        public Skzkm_Health_CareOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Skzkm_Health_CareOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_Health_CareOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Health_CareOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений об упаковке лекарственного препарата и нанесении средств идентификации за пределами территории РФ (информация с СКЗКМ)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений об упаковке лекарственного препарата и нанесении с" +
        "редств идентификации за пределами территории РФ (информация с СКЗКМ)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("skzkm_foreign_emission", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Foreign_Emission
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Идентификатор производителя осуществившего упаковку/фасовку во вторичную (третичную) упаковку</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор производителя осуществившего упаковку/фасовку во вторичную (третичн" +
            "ую) упаковку")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("packing_id")]
        public string Packing_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор производителя, осуществившего выпускающий контроль качества</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор производителя, осуществившего выпускающий контроль качества")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("control_id")]
        public string Control_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор местонахождения товара в зоне таможенного контроля</para>
        /// <para>Идентификатор субъекта обращения (GUID)</para>
        /// <para xml:lang="en">Pattern: ([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор местонахождения товара в зоне таможенного контроля")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})")]
        [System.Xml.Serialization.XmlElementAttribute("custom_receiver_id")]
        public string Custom_Receiver_Id { get; set; }
        
        /// <summary>
        /// <para>Номер производственной серии</para>
        /// <para>Номер производственной серии</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер производственной серии")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("series_number")]
        public string Series_Number { get; set; }
        
        /// <summary>
        /// <para>Срок годности препарата</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Срок годности препарата")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("expiration_date")]
        public string Expiration_Date { get; set; }
        
        /// <summary>
        /// <para>Код GTIN</para>
        /// <para>Идентификационный номер GS1 для идентификации товаров (допускаются только цифры общей длины 14 символов)</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Код GTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("gtin")]
        public string Gtin { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _signs;
        
        /// <summary>
        /// <para>Список отгружаемой продукции</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список отгружаемой продукции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlArrayAttribute("signs")]
        [System.Xml.Serialization.XmlArrayItemAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Signs
        {
            get
            {
                return this._signs;
            }
            private set
            {
                this._signs = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Foreign_Emission" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Foreign_Emission" /> class.</para>
        /// </summary>
        public Skzkm_Foreign_Emission()
        {
            this._signs = new System.Collections.ObjectModel.Collection<string>();
        }
        
        /// <summary>
        /// <para>Информация об устройстве РЭ или РВ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об устройстве РЭ или РВ")]
        [System.Xml.Serialization.XmlElementAttribute("device_info")]
        public MdlpApiClient.Xsd.Skzkm_Info_Type Device_Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 10319;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Skzkm_Foreign_EmissionSigns", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Skzkm_Foreign_EmissionSigns
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<string> _sgtin;
        
        /// <summary>
        /// <para>Номер SGTIN</para>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Номер SGTIN")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public System.Collections.ObjectModel.Collection<string> Sgtin
        {
            get
            {
                return this._sgtin;
            }
            private set
            {
                this._sgtin = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Skzkm_Foreign_EmissionSigns" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Skzkm_Foreign_EmissionSigns" /> class.</para>
        /// </summary>
        public Skzkm_Foreign_EmissionSigns()
        {
            this._sgtin = new System.Collections.ObjectModel.Collection<string>();
        }
    }
    
    /// <summary>
    /// <para>Регистрация в ИС МДЛП сведений о подключении регистратора выбытия</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Регистрация в ИС МДЛП сведений о подключении регистратора выбытия")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("service_disposal_registrar", Namespace="")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Service_Disposal_Registrar
    {
        
        /// <summary>
        /// <para>Идентификатор организации-отправителя</para>
        /// <para>Идентификатор субъекта обращения в ИС МДЛП</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор организации-отправителя")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}")]
        [System.Xml.Serialization.XmlElementAttribute("subject_id")]
        public string Subject_Id { get; set; }
        
        /// <summary>
        /// <para>Дата совершения операции</para>
        /// <para>Тип "Дата со временем" (с временной зоной)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0001-01-01T00:00:00Z.</para>
        /// <para xml:lang="en">Pattern: ((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\.[0-9]+)?(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Дата совершения операции")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-" +
            "((0[1-9])|([12][0-9])|(3[01]))T(([01][0-9])|(2[0-3]))(:[0-5][0-9]){2}(\\.[0-9]+)?" +
            "(([+-]((((0[0-9])|(1[0-3]))(:[0-5][0-9]))|14:00))|Z)")]
        [System.Xml.Serialization.XmlElementAttribute("operation_date", DataType="dateTime")]
        public System.DateTime Operation_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: дата регистрации льготного рецепта</para>
        /// <para>Дата в формате ДД.ММ.ГГГГ</para>
        /// <para xml:lang="en">Pattern: ((((0[1-9]|1[0-9]|2[0-8])[\.](0[1-9]|1[012]))|((29|30|31)[\.](0[13578]|1[02]))|((29|30)[\.](0[4,6,9]|11)))[\.](19|[2-9][0-9])\d\d)|(29[\.]02[\.](19|[2-9][0-9])(00|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96)).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: дата регистрации льготного рецепта")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((((0[1-9]|1[0-9]|2[0-8])[\\.](0[1-9]|1[012]))|((29|30|31)[\\.](0[13578]|1[02]))|((" +
            "29|30)[\\.](0[4,6,9]|11)))[\\.](19|[2-9][0-9])\\d\\d)|(29[\\.]02[\\.](19|[2-9][0-9])(0" +
            "0|04|08|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96))")]
        [System.Xml.Serialization.XmlElementAttribute("doc_date")]
        public string Doc_Date { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер серии льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер серии льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_series")]
        public string Doc_Series { get; set; }
        
        /// <summary>
        /// <para>Реквизиты документа: номер льготного рецепта</para>
        /// <para>Номер документа, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Реквизиты документа: номер льготного рецепта")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlElementAttribute("doc_num")]
        public string Doc_Num { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Service_Disposal_RegistrarOrder_DetailsUnion> _order_Details;
        
        /// <summary>
        /// <para>Список продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Список продукции")]
        [System.Xml.Serialization.XmlArrayAttribute("order_details")]
        [System.Xml.Serialization.XmlArrayItemAttribute("union")]
        public System.Collections.ObjectModel.Collection<Service_Disposal_RegistrarOrder_DetailsUnion> Order_Details
        {
            get
            {
                return this._order_Details;
            }
            private set
            {
                this._order_Details = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Service_Disposal_Registrar" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Service_Disposal_Registrar" /> class.</para>
        /// </summary>
        public Service_Disposal_Registrar()
        {
            this._order_Details = new System.Collections.ObjectModel.Collection<Service_Disposal_RegistrarOrder_DetailsUnion>();
        }
        
        /// <summary>
        /// <para>Информация об устройстве РЭ или РВ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Информация об устройстве РЭ или РВ")]
        [System.Xml.Serialization.XmlElementAttribute("device_info")]
        public MdlpApiClient.Xsd.Skzkm_Info_Type Device_Info { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _action_Id = 20521;
        
        [System.Xml.Serialization.XmlAttributeAttribute("action_id")]
        public int Action_Id
        {
            get
            {
                return this._action_Id;
            }
            set
            {
                this._action_Id = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Service_Disposal_RegistrarOrder_Details", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Service_Disposal_RegistrarOrder_Details
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Service_Disposal_RegistrarOrder_DetailsUnion> _union;
        
        [System.Xml.Serialization.XmlElementAttribute("union")]
        public System.Collections.ObjectModel.Collection<Service_Disposal_RegistrarOrder_DetailsUnion> Union
        {
            get
            {
                return this._union;
            }
            private set
            {
                this._union = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Service_Disposal_RegistrarOrder_Details" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Service_Disposal_RegistrarOrder_Details" /> class.</para>
        /// </summary>
        public Service_Disposal_RegistrarOrder_Details()
        {
            this._union = new System.Collections.ObjectModel.Collection<Service_Disposal_RegistrarOrder_DetailsUnion>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Service_Disposal_RegistrarOrder_DetailsUnion", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Service_Disposal_RegistrarOrder_DetailsUnion
    {
        
        /// <summary>
        /// <para>Индивидуальный серийный номер вторичной упаковки</para>
        /// <para xml:lang="en">Pattern: [0-9]{14}[!-"%-/0-9A-Z_a-z]{13}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{14}[!-\"%-/0-9A-Z_a-z]{13}")]
        [System.Xml.Serialization.XmlElementAttribute("sgtin")]
        public string Sgtin { get; set; }
        
        /// <summary>
        /// <para>Доля от вторичной упаковки</para>
        /// <para>Доля первичной упаковки</para>
        /// <para xml:lang="en">Pattern: ([1-9][0-9]*/[1-9][0-9]*).</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Доля от вторичной упаковки")]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([1-9][0-9]*/[1-9][0-9]*)")]
        [System.Xml.Serialization.XmlElementAttribute("sold_part")]
        public string Sold_Part { get; set; }
    }
    
    /// <summary>
    /// <para>Перечень документов ИС МДЛП</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Перечень документов ИС МДЛП")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.349.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("documents", Namespace="", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("documents", Namespace="")]
    public partial class Documents
    {
        
        /// <summary>
        /// <para>200 - Результат фиксации сведений в ИС МДЛП</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("200 - Результат фиксации сведений в ИС МДЛП")]
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public MdlpApiClient.Xsd.Result Result { get; set; }
        
        /// <summary>
        /// <para>201 - Результат фиксации сведений о внесении изменений в ИС МДЛП</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("201 - Результат фиксации сведений о внесении изменений в ИС МДЛП")]
        [System.Xml.Serialization.XmlElementAttribute("result_service")]
        public MdlpApiClient.Xsd.Result_Service Result_Service { get; set; }
        
        /// <summary>
        /// <para>210 - Запрос информации по номеру SGTIN/SSCC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("210 - Запрос информации по номеру SGTIN/SSCC")]
        [System.Xml.Serialization.XmlElementAttribute("query_kiz_info")]
        public MdlpApiClient.Xsd.Query_Kiz_Info Query_Kiz_Info { get; set; }
        
        /// <summary>
        /// <para>211 - Результат обработки сведений по номеру SGTIN/SSCC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("211 - Результат обработки сведений по номеру SGTIN/SSCC")]
        [System.Xml.Serialization.XmlElementAttribute("kiz_info")]
        public MdlpApiClient.Xsd.Kiz_Info Kiz_Info { get; set; }
        
        /// <summary>
        /// <para>212 - Изменение списка доверенных контрагентов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("212 - Изменение списка доверенных контрагентов")]
        [System.Xml.Serialization.XmlElementAttribute("edit_counterparty_list")]
        public MdlpApiClient.Xsd.Edit_Counterparty_List Edit_Counterparty_List { get; set; }
        
        /// <summary>
        /// <para>213 - Бронирование (отмена бронирования) номеров транспортной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("213 - Бронирование (отмена бронирования) номеров транспортной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("booking_sscc")]
        public MdlpApiClient.Xsd.Booking_Sscc Booking_Sscc { get; set; }
        
        /// <summary>
        /// <para>220 - Запрос информации об иерархии вложенности SSCC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("220 - Запрос информации об иерархии вложенности SSCC")]
        [System.Xml.Serialization.XmlElementAttribute("query_hierarchy_info")]
        public MdlpApiClient.Xsd.Query_Hierarchy_Info Query_Hierarchy_Info { get; set; }
        
        /// <summary>
        /// <para>221 - Результат запроса информации об иерархии вложенности SSCC</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("221 - Результат запроса информации об иерархии вложенности SSCC")]
        [System.Xml.Serialization.XmlElementAttribute("hierarchy_info")]
        public MdlpApiClient.Xsd.Hierarchy_Info Hierarchy_Info { get; set; }
        
        /// <summary>
        /// <para>250 - Регистрация в ИС МДЛП сведений об отмене ранее зарегистрированной собственной операции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("250 - Регистрация в ИС МДЛП сведений об отмене ранее зарегистрированной собственн" +
            "ой операции")]
        [System.Xml.Serialization.XmlElementAttribute("recall")]
        public MdlpApiClient.Xsd.Recall Recall { get; set; }
        
        /// <summary>
        /// <para>251 - Регистрация в ИС МДЛП сведений об отзыве отправителем переданных получателю лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("251 - Регистрация в ИС МДЛП сведений об отзыве отправителем переданных получателю" +
            " лекарственных препаратов")]
        [System.Xml.Serialization.XmlElementAttribute("refusal_sender")]
        public MdlpApiClient.Xsd.Refusal_Sender Refusal_Sender { get; set; }
        
        /// <summary>
        /// <para>252 - Регистрация в ИС МДЛП сведений об отказе получателя от приемки лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("252 - Регистрация в ИС МДЛП сведений об отказе получателя от приемки лекарственны" +
            "х препаратов")]
        [System.Xml.Serialization.XmlElementAttribute("refusal_receiver")]
        public MdlpApiClient.Xsd.Refusal_Receiver Refusal_Receiver { get; set; }
        
        /// <summary>
        /// <para>253 - Регистрация в ИС МДЛП сведений о корректировке ранее направленных реквизитов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("253 - Регистрация в ИС МДЛП сведений о корректировке ранее направленных реквизито" +
            "в")]
        [System.Xml.Serialization.XmlElementAttribute("change_information")]
        public MdlpApiClient.Xsd.Change_Information Change_Information { get; set; }
        
        /// <summary>
        /// <para>254 - Регистрация в ИС МДЛП сведений о корректировке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("254 - Регистрация в ИС МДЛП сведений о корректировке")]
        [System.Xml.Serialization.XmlElementAttribute("change_property")]
        public MdlpApiClient.Xsd.Change_Property Change_Property { get; set; }
        
        /// <summary>
        /// <para>300 - Регистрация держателем РУ (или его представительством) сведений о передаче кодов маркировки таможенному складу в ИС МДЛП</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("300 - Регистрация держателем РУ (или его представительством) сведений о передаче " +
            "кодов маркировки таможенному складу в ИС МДЛП")]
        [System.Xml.Serialization.XmlElementAttribute("transfer_code_to_custom")]
        public MdlpApiClient.Xsd.Transfer_Code_To_Custom Transfer_Code_To_Custom { get; set; }
        
        /// <summary>
        /// <para>311 - Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("311 - Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("register_end_packing")]
        public MdlpApiClient.Xsd.Register_End_Packing Register_End_Packing { get; set; }
        
        /// <summary>
        /// <para>313 - Регистрация в ИС МДЛП сведений о выпуске готовой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("313 - Регистрация в ИС МДЛП сведений о выпуске готовой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("register_product_emission")]
        public MdlpApiClient.Xsd.Register_Product_Emission Register_Product_Emission { get; set; }
        
        /// <summary>
        /// <para>314 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов для выпуска готовой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("314 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов для вып" +
            "уска готовой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("move_to_release")]
        public MdlpApiClient.Xsd.Move_To_Release Move_To_Release { get; set; }
        
        /// <summary>
        /// <para>315 - Регистрация в ИС МДЛП сведений о возврате лекарственных препаратов контрактному производителю</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("315 - Регистрация в ИС МДЛП сведений о возврате лекарственных препаратов контракт" +
            "ному производителю")]
        [System.Xml.Serialization.XmlElementAttribute("return_contract_production")]
        public MdlpApiClient.Xsd.Return_Contract_Production Return_Contract_Production { get; set; }
        
        /// <summary>
        /// <para>321 - Регистрация в ИС МДЛП сведений о выпуске готовой продукции за пределами территории Российской Федерации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("321 - Регистрация в ИС МДЛП сведений о выпуске готовой продукции за пределами тер" +
            "ритории Российской Федерации")]
        [System.Xml.Serialization.XmlElementAttribute("foreign_emission")]
        public MdlpApiClient.Xsd.Foreign_Emission Foreign_Emission { get; set; }
        
        /// <summary>
        /// <para>331 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Российскую Федерацию</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("331 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Росси" +
            "йскую Федерацию")]
        [System.Xml.Serialization.XmlElementAttribute("foreign_shipment")]
        public MdlpApiClient.Xsd.Foreign_Shipment Foreign_Shipment { get; set; }
        
        /// <summary>
        /// <para>332 - Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российскую Федерацию</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("332 - Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российску" +
            "ю Федерацию")]
        [System.Xml.Serialization.XmlElementAttribute("foreign_import")]
        public MdlpApiClient.Xsd.Foreign_Import Foreign_Import { get; set; }
        
        /// <summary>
        /// <para>333 - Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российскую Федерацию без импортера</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("333 - Регистрация в ИС МДЛП сведений о ввозе лекарственных препаратов в Российску" +
            "ю Федерацию без импортера")]
        [System.Xml.Serialization.XmlElementAttribute("foreign_import_owner")]
        public MdlpApiClient.Xsd.Foreign_Import_Owner Foreign_Import_Owner { get; set; }
        
        /// <summary>
        /// <para>334 - Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между зонами таможенного контроля</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("334 - Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между" +
            " зонами таможенного контроля")]
        [System.Xml.Serialization.XmlElementAttribute("custom_move")]
        public MdlpApiClient.Xsd.Custom_Move Custom_Move { get; set; }
        
        /// <summary>
        /// <para>335 - Регистрация в ИС МДЛП сведений о результатах таможенного оформления</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("335 - Регистрация в ИС МДЛП сведений о результатах таможенного оформления")]
        [System.Xml.Serialization.XmlElementAttribute("fts_data")]
        public MdlpApiClient.Xsd.Fts_Data Fts_Data { get; set; }
        
        /// <summary>
        /// <para>336 -Регистрация держателем РУ (или его представительством) сведений об условиях ввоза в Российскую Федерацию ЛП, маркированных на таможенном складе, в ИС МДЛП</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("336 -Регистрация держателем РУ (или его представительством) сведений об условиях " +
            "ввоза в Российскую Федерацию ЛП, маркированных на таможенном складе, в ИС МДЛП")]
        [System.Xml.Serialization.XmlElementAttribute("import_info")]
        public MdlpApiClient.Xsd.Import_Info Import_Info { get; set; }
        
        /// <summary>
        /// <para>341 - Регистрация в ИС МДЛП сведений о приемке лекарственных препаратов на склад импортера</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("341 - Регистрация в ИС МДЛП сведений о приемке лекарственных препаратов на склад " +
            "импортера")]
        [System.Xml.Serialization.XmlElementAttribute("receive_importer")]
        public MdlpApiClient.Xsd.Receive_Importer Receive_Importer { get; set; }
        
        /// <summary>
        /// <para>342 - Регистрация в ИС МДЛП сведений о вводе ЛП в оборот на территории РФ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("342 - Регистрация в ИС МДЛП сведений о вводе ЛП в оборот на территории РФ")]
        [System.Xml.Serialization.XmlElementAttribute("release_in_circulation")]
        public MdlpApiClient.Xsd.Release_In_Circulation Release_In_Circulation { get; set; }
        
        /// <summary>
        /// <para>351 - Регистрация в ИС МДЛП сведений о смене собственника лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("351 - Регистрация в ИС МДЛП сведений о смене собственника лекарственных препарато" +
            "в")]
        [System.Xml.Serialization.XmlElementAttribute("change_owner")]
        public MdlpApiClient.Xsd.Change_Owner Change_Owner { get; set; }
        
        /// <summary>
        /// <para>360 - Регистрация в ИС МДЛП сведений о ввозе собственных лекарственных препаратов в Российскую Федерацию из стран ЕАЭС</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("360 - Регистрация в ИС МДЛП сведений о ввозе собственных лекарственных препаратов" +
            " в Российскую Федерацию из стран ЕАЭС")]
        [System.Xml.Serialization.XmlElementAttribute("eeu_owner")]
        public MdlpApiClient.Xsd.Eeu_Owner Eeu_Owner { get; set; }
        
        /// <summary>
        /// <para>361 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Российскую Федерацию из стран ЕАЭС</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("361 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов в Росси" +
            "йскую Федерацию из стран ЕАЭС")]
        [System.Xml.Serialization.XmlElementAttribute("eeu_shipment")]
        public MdlpApiClient.Xsd.Eeu_Shipment Eeu_Shipment { get; set; }
        
        /// <summary>
        /// <para>362 - Регистрация в ИС МДЛП сведений о ввозе из ЕАЭС и приемке лекарственных препаратов на склад покупателя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("362 - Регистрация в ИС МДЛП сведений о ввозе из ЕАЭС и приемке лекарственных преп" +
            "аратов на склад покупателя")]
        [System.Xml.Serialization.XmlElementAttribute("eeu_import")]
        public MdlpApiClient.Xsd.Eeu_Import Eeu_Import { get; set; }
        
        /// <summary>
        /// <para>363 - Регистрация в ИС МДЛП сведений о вводе лекарственных препаратов в оборот на территории Российской Федерации</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("363 - Регистрация в ИС МДЛП сведений о вводе лекарственных препаратов в оборот на" +
            " территории Российской Федерации")]
        [System.Xml.Serialization.XmlElementAttribute("eeu_release")]
        public MdlpApiClient.Xsd.Eeu_Release Eeu_Release { get; set; }
        
        /// <summary>
        /// <para>381 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов собственнику</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("381 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов собстве" +
            "ннику")]
        [System.Xml.Serialization.XmlElementAttribute("move_owner")]
        public MdlpApiClient.Xsd.Move_Owner Move_Owner { get; set; }
        
        /// <summary>
        /// <para>391 - Регистрация в ИС МДЛП сведений о повторном вводе лекарственного препарата в оборот</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("391 - Регистрация в ИС МДЛП сведений о повторном вводе лекарственного препарата в" +
            " оборот")]
        [System.Xml.Serialization.XmlElementAttribute("return_to_circulation")]
        public MdlpApiClient.Xsd.Return_To_Circulation Return_To_Circulation { get; set; }
        
        /// <summary>
        /// <para>415 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со склада отправителя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("415 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со скла" +
            "да отправителя")]
        [System.Xml.Serialization.XmlElementAttribute("move_order")]
        public MdlpApiClient.Xsd.Move_Order Move_Order { get; set; }
        
        /// <summary>
        /// <para>416 - Регистрация в ИС МДЛП сведений о приемке лекарственных препаратов на склад получателя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("416 - Регистрация в ИС МДЛП сведений о приемке лекарственных препаратов на склад " +
            "получателя")]
        [System.Xml.Serialization.XmlElementAttribute("receive_order")]
        public MdlpApiClient.Xsd.Receive_Order Receive_Order { get; set; }
        
        /// <summary>
        /// <para>417 - Регистрация в ИС МДЛП сведений о возврате приостановленных лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("417 - Регистрация в ИС МДЛП сведений о возврате приостановленных лекарственных пр" +
            "епаратов")]
        [System.Xml.Serialization.XmlElementAttribute("move_return")]
        public MdlpApiClient.Xsd.Move_Return Move_Return { get; set; }
        
        /// <summary>
        /// <para>431 - Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между различными адресами осуществления деятельности</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("431 - Регистрация в ИС МДЛП сведений о перемещении лекарственных препаратов между" +
            " различными адресами осуществления деятельности")]
        [System.Xml.Serialization.XmlElementAttribute("move_place")]
        public MdlpApiClient.Xsd.Move_Place Move_Place { get; set; }
        
        /// <summary>
        /// <para>441 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов незарегистрированному участнику</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("441 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов незарег" +
            "истрированному участнику")]
        [System.Xml.Serialization.XmlElementAttribute("move_unregistered_order")]
        public MdlpApiClient.Xsd.Move_Unregistered_Order Move_Unregistered_Order { get; set; }
        
        /// <summary>
        /// <para>442 - Регистрация в ИС МДЛП сведений о приемке на склад лекарственных препаратов, ранее отгруженных на незарегистрированное место деятельности</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("442 - Регистрация в ИС МДЛП сведений о приемке на склад лекарственных препаратов," +
            " ранее отгруженных на незарегистрированное место деятельности")]
        [System.Xml.Serialization.XmlElementAttribute("receive_unregistered_order")]
        public MdlpApiClient.Xsd.Receive_Unregistered_Order Receive_Unregistered_Order { get; set; }
        
        /// <summary>
        /// <para>461 - Регистрация в ИС МДЛП сведений о вывозе лекарственных препаратов с территории Российской Федерации на территорию государства-члена ЕАЭС</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("461 - Регистрация в ИС МДЛП сведений о вывозе лекарственных препаратов с территор" +
            "ии Российской Федерации на территорию государства-члена ЕАЭС")]
        [System.Xml.Serialization.XmlElementAttribute("move_eeu")]
        public MdlpApiClient.Xsd.Move_Eeu Move_Eeu { get; set; }
        
        /// <summary>
        /// <para>470 - Регистрация в ИС МДЛП сведений о смене владельца лекарственных препаратов в рамках государственного лекарственного обеспечения</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("470 - Регистрация в ИС МДЛП сведений о смене владельца лекарственных препаратов в" +
            " рамках государственного лекарственного обеспечения")]
        [System.Xml.Serialization.XmlElementAttribute("move_state_dispatch")]
        public MdlpApiClient.Xsd.Move_State_Dispatch Move_State_Dispatch { get; set; }
        
        /// <summary>
        /// <para>471 - Регистрация в ИС МДЛП сведений о смене владельца лекарственных препаратов в рамках государственного лекарственного обеспечения</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("471 - Регистрация в ИС МДЛП сведений о смене владельца лекарственных препаратов в" +
            " рамках государственного лекарственного обеспечения")]
        [System.Xml.Serialization.XmlElementAttribute("state_dispatch")]
        public MdlpApiClient.Xsd.State_Dispatch State_Dispatch { get; set; }
        
        /// <summary>
        /// <para>472 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со склада отправителя в рамках агентского договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("472 - Регистрация в ИС МДЛП сведений об отгрузке лекарственных препаратов со скла" +
            "да отправителя в рамках агентского договора")]
        [System.Xml.Serialization.XmlElementAttribute("agent_dispatch")]
        public MdlpApiClient.Xsd.Agent_Dispatch Agent_Dispatch { get; set; }
        
        /// <summary>
        /// <para>481 - Регистрация в ИС МДЛП сведений о постановке в арбитраж/снятие арбитража</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("481 - Регистрация в ИС МДЛП сведений о постановке в арбитраж/снятие арбитража")]
        [System.Xml.Serialization.XmlElementAttribute("arbitration")]
        public MdlpApiClient.Xsd.Arbitration Arbitration { get; set; }
        
        /// <summary>
        /// <para>511 - Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках розничной торговли</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("511 - Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках " +
            "розничной торговли")]
        [System.Xml.Serialization.XmlElementAttribute("retail_sale")]
        public MdlpApiClient.Xsd.Retail_Sale Retail_Sale { get; set; }
        
        /// <summary>
        /// <para>521 - Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("521 - Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льгот" +
            "ному рецепту")]
        [System.Xml.Serialization.XmlElementAttribute("recipe")]
        public MdlpApiClient.Xsd.Recipe Recipe { get; set; }
        
        /// <summary>
        /// <para>531 - Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания медицинской помощи</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("531 - Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказан" +
            "ия медицинской помощи")]
        [System.Xml.Serialization.XmlElementAttribute("health_care")]
        public MdlpApiClient.Xsd.Health_Care Health_Care { get; set; }
        
        /// <summary>
        /// <para>541 - Регистрация в ИС МДЛП сведений о передаче лекарственных препаратов на уничтожение</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("541 - Регистрация в ИС МДЛП сведений о передаче лекарственных препаратов на уничт" +
            "ожение")]
        [System.Xml.Serialization.XmlElementAttribute("move_destruction")]
        public MdlpApiClient.Xsd.Move_Destruction Move_Destruction { get; set; }
        
        /// <summary>
        /// <para>542 - Регистрация в ИС МДЛП сведений о факте уничтожения лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("542 - Регистрация в ИС МДЛП сведений о факте уничтожения лекарственных препаратов" +
            "")]
        [System.Xml.Serialization.XmlElementAttribute("destruction")]
        public MdlpApiClient.Xsd.Destruction Destruction { get; set; }
        
        /// <summary>
        /// <para>552 - Регистрация в ИС МДЛП сведений о выводе из оборота лекарственных препаратов по различным причинам</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("552 - Регистрация в ИС МДЛП сведений о выводе из оборота лекарственных препаратов" +
            " по различным причинам")]
        [System.Xml.Serialization.XmlElementAttribute("withdrawal")]
        public MdlpApiClient.Xsd.Withdrawal Withdrawal { get; set; }
        
        /// <summary>
        /// <para>601 - Уведомление получателя об отгрузке лекарственных препаратов со склада отправителя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("601 - Уведомление получателя об отгрузке лекарственных препаратов со склада отпра" +
            "вителя")]
        [System.Xml.Serialization.XmlElementAttribute("move_order_notification")]
        public MdlpApiClient.Xsd.Move_Order_Notification Move_Order_Notification { get; set; }
        
        /// <summary>
        /// <para>602 - Уведомление отправителя о приемке лекарственных препаратов на склад получателя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("602 - Уведомление отправителя о приемке лекарственных препаратов на склад получат" +
            "еля")]
        [System.Xml.Serialization.XmlElementAttribute("receive_order_notification")]
        public MdlpApiClient.Xsd.Receive_Order_Notification Receive_Order_Notification { get; set; }
        
        /// <summary>
        /// <para>603 - Уведомление собственника об отгрузке лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("603 - Уведомление собственника об отгрузке лекарственных препаратов")]
        [System.Xml.Serialization.XmlElementAttribute("move_owner_notification")]
        public MdlpApiClient.Xsd.Move_Owner_Notification Move_Owner_Notification { get; set; }
        
        /// <summary>
        /// <para>605 - Уведомление получателя об отзыве отправителем переданных лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("605 - Уведомление получателя об отзыве отправителем переданных лекарственных преп" +
            "аратов")]
        [System.Xml.Serialization.XmlElementAttribute("refusal_sender_notification")]
        public MdlpApiClient.Xsd.Refusal_Sender_Notification Refusal_Sender_Notification { get; set; }
        
        /// <summary>
        /// <para>606 - Уведомление отправителя об отказе получателя от приемки лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("606 - Уведомление отправителя об отказе получателя от приемки лекарственных препа" +
            "ратов")]
        [System.Xml.Serialization.XmlElementAttribute("refusal_receiver_notification")]
        public MdlpApiClient.Xsd.Refusal_Receiver_Notification Refusal_Receiver_Notification { get; set; }
        
        /// <summary>
        /// <para>607 - Уведомление о подтверждении (акцептовании) сведений</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("607 - Уведомление о подтверждении (акцептовании) сведений")]
        [System.Xml.Serialization.XmlElementAttribute("accept_notification")]
        public MdlpApiClient.Xsd.Accept_Notification Accept_Notification { get; set; }
        
        /// <summary>
        /// <para>609 - Уведомление нового собственника о смене собственника лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("609 - Уведомление нового собственника о смене собственника лекарственных препарат" +
            "ов")]
        [System.Xml.Serialization.XmlElementAttribute("change_owner_notification")]
        public MdlpApiClient.Xsd.Change_Owner_Notification Change_Owner_Notification { get; set; }
        
        /// <summary>
        /// <para>610 - Уведомление получателя о возврате приостановленных лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("610 - Уведомление получателя о возврате приостановленных лекарственных препаратов" +
            "")]
        [System.Xml.Serialization.XmlElementAttribute("move_return_notification")]
        public MdlpApiClient.Xsd.Move_Return_Notification Move_Return_Notification { get; set; }
        
        /// <summary>
        /// <para>611 - Уведомление отправителя о регистрации получателя в ИС МДЛП и приемке на склад лекарственных препаратов, ранее отгруженных на незарегистрированное место деятельности</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("611 - Уведомление отправителя о регистрации получателя в ИС МДЛП и приемке на скл" +
            "ад лекарственных препаратов, ранее отгруженных на незарегистрированное место дея" +
            "тельности")]
        [System.Xml.Serialization.XmlElementAttribute("receive_unregistered_notification")]
        public MdlpApiClient.Xsd.Receive_Unregistered_Notification Receive_Unregistered_Notification { get; set; }
        
        /// <summary>
        /// <para>612 - Уведомление Получателя об отгрузке лекарственных препаратов со склада Отправителя в рамках смены владельца лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("612 - Уведомление Получателя об отгрузке лекарственных препаратов со склада Отпра" +
            "вителя в рамках смены владельца лекарственных препаратов")]
        [System.Xml.Serialization.XmlElementAttribute("state_dispatch_notification")]
        public MdlpApiClient.Xsd.State_Dispatch_Notification State_Dispatch_Notification { get; set; }
        
        /// <summary>
        /// <para>613 - Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("613 - Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию")]
        [System.Xml.Serialization.XmlElementAttribute("foreign_shipment_notification")]
        public MdlpApiClient.Xsd.Foreign_Shipment_Notification Foreign_Shipment_Notification { get; set; }
        
        /// <summary>
        /// <para>614 - Уведомление о ввозе лекарственных препаратов в Российскую Федерацию</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("614 - Уведомление о ввозе лекарственных препаратов в Российскую Федерацию")]
        [System.Xml.Serialization.XmlElementAttribute("foreign_import_notification")]
        public MdlpApiClient.Xsd.Foreign_Import_Notification Foreign_Import_Notification { get; set; }
        
        /// <summary>
        /// <para>615 - Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию из стран ЕАЭС</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("615 - Уведомление об отгрузке лекарственных препаратов в Российскую Федерацию из " +
            "стран ЕАЭС")]
        [System.Xml.Serialization.XmlElementAttribute("eeu_shipment_notification")]
        public MdlpApiClient.Xsd.Eeu_Shipment_Notification Eeu_Shipment_Notification { get; set; }
        
        /// <summary>
        /// <para>616 - Уведомление о ввозе из ЕАЭС и приемке лекарственных препаратов на склад покупателя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("616 - Уведомление о ввозе из ЕАЭС и приемке лекарственных препаратов на склад пок" +
            "упателя")]
        [System.Xml.Serialization.XmlElementAttribute("eeu_import_notification")]
        public MdlpApiClient.Xsd.Eeu_Import_Notification Eeu_Import_Notification { get; set; }
        
        /// <summary>
        /// <para>617 - Уведомление отправителя об ошибках при приемке лекарственных препаратов на склад получателя</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("617 - Уведомление отправителя об ошибках при приемке лекарственных препаратов на " +
            "склад получателя")]
        [System.Xml.Serialization.XmlElementAttribute("receive_order_errors_notification")]
        public MdlpApiClient.Xsd.Receive_Order_Errors_Notification Receive_Order_Errors_Notification { get; set; }
        
        /// <summary>
        /// <para>618 - Уведомление собственника об отгрузке лекарственных препаратов для выпуска готовой продукции</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("618 - Уведомление собственника об отгрузке лекарственных препаратов для выпуска г" +
            "отовой продукции")]
        [System.Xml.Serialization.XmlElementAttribute("move_to_release_notification")]
        public MdlpApiClient.Xsd.Move_To_Release_Notification Move_To_Release_Notification { get; set; }
        
        /// <summary>
        /// <para>619 - Уведомление получателя об отгрузке лекарственных препаратов со склада отправителя в рамках агентского договора</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("619 - Уведомление получателя об отгрузке лекарственных препаратов со склада отпра" +
            "вителя в рамках агентского договора")]
        [System.Xml.Serialization.XmlElementAttribute("agent_dispatch_notification")]
        public MdlpApiClient.Xsd.Agent_Dispatch_Notification Agent_Dispatch_Notification { get; set; }
        
        /// <summary>
        /// <para>620 - Уведомление импортера о регистрации в ИС МДЛП сведений об условиях ввоза ЛП держателем РУ (или его представительством)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("620 - Уведомление импортера о регистрации в ИС МДЛП сведений об условиях ввоза ЛП" +
            " держателем РУ (или его представительством)")]
        [System.Xml.Serialization.XmlElementAttribute("import_info_notification")]
        public MdlpApiClient.Xsd.Import_Info_Notification Import_Info_Notification { get; set; }
        
        /// <summary>
        /// <para>621 - Уведомление о регистрации в ИС МДЛП сведений о постановке в арбитраж/снятие арбитража</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("621 - Уведомление о регистрации в ИС МДЛП сведений о постановке в арбитраж/снятие" +
            " арбитража")]
        [System.Xml.Serialization.XmlElementAttribute("arbitration_notification")]
        public MdlpApiClient.Xsd.Arbitration_Notification Arbitration_Notification { get; set; }
        
        /// <summary>
        /// <para>622 - Уведомление о регистрации в ИС МДЛП сведений о возврате лекарственных препаратов контрактному производителю</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("622 - Уведомление о регистрации в ИС МДЛП сведений о возврате лекарственных препа" +
            "ратов контрактному производителю")]
        [System.Xml.Serialization.XmlElementAttribute("return_contract_production_notification")]
        public MdlpApiClient.Xsd.Return_Contract_Production_Notification Return_Contract_Production_Notification { get; set; }
        
        /// <summary>
        /// <para>623 - Уведомление о регистрация в ИС МДЛП сведений о корректировке</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("623 - Уведомление о регистрация в ИС МДЛП сведений о корректировке")]
        [System.Xml.Serialization.XmlElementAttribute("change_property_notification")]
        public MdlpApiClient.Xsd.Change_Property_Notification Change_Property_Notification { get; set; }
        
        /// <summary>
        /// <para>701 - Регистрация в ИС МДЛП подтверждения (акцептования) сведений</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("701 - Регистрация в ИС МДЛП подтверждения (акцептования) сведений")]
        [System.Xml.Serialization.XmlElementAttribute("accept")]
        public MdlpApiClient.Xsd.Accept Accept { get; set; }
        
        /// <summary>
        /// <para>702 - Регистрация в ИС МДЛП сведений об оприходовании</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("702 - Регистрация в ИС МДЛП сведений об оприходовании")]
        [System.Xml.Serialization.XmlElementAttribute("posting")]
        public MdlpApiClient.Xsd.Posting Posting { get; set; }
        
        /// <summary>
        /// <para>703 - Регистрация в ИС МДЛП сведений об оприходовании (импорт)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("703 - Регистрация в ИС МДЛП сведений об оприходовании (импорт)")]
        [System.Xml.Serialization.XmlElementAttribute("posting_import")]
        public MdlpApiClient.Xsd.Posting_Import Posting_Import { get; set; }
        
        /// <summary>
        /// <para>811 - Регистрация в ИС МДЛП сведений о переупаковке и перемаркировке лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("811 - Регистрация в ИС МДЛП сведений о переупаковке и перемаркировке лекарственны" +
            "х препаратов")]
        [System.Xml.Serialization.XmlElementAttribute("relabeling")]
        public MdlpApiClient.Xsd.Relabeling Relabeling { get; set; }
        
        /// <summary>
        /// <para>911 - Регистрация в ИС МДЛП сведений об агрегировании упаковок лекарственных препаратов в третичную (заводскую, транспортную) упаковку</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("911 - Регистрация в ИС МДЛП сведений об агрегировании упаковок лекарственных преп" +
            "аратов в третичную (заводскую, транспортную) упаковку")]
        [System.Xml.Serialization.XmlElementAttribute("unit_pack")]
        public MdlpApiClient.Xsd.Unit_Pack Unit_Pack { get; set; }
        
        /// <summary>
        /// <para>912 - Регистрация в ИС МДЛП сведений о расформировании третичной (заводской, транспортной) упаковки лекарственных препаратов</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("912 - Регистрация в ИС МДЛП сведений о расформировании третичной (заводской, тран" +
            "спортной) упаковки лекарственных препаратов")]
        [System.Xml.Serialization.XmlElementAttribute("unit_unpack")]
        public MdlpApiClient.Xsd.Unit_Unpack Unit_Unpack { get; set; }
        
        /// <summary>
        /// <para>913 - Регистрация в ИС МДЛП сведений об изъятии упаковок лекарственных препаратов из третичной (заводской, транспортной) упаковки</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("913 - Регистрация в ИС МДЛП сведений об изъятии упаковок лекарственных препаратов" +
            " из третичной (заводской, транспортной) упаковки")]
        [System.Xml.Serialization.XmlElementAttribute("unit_extract")]
        public MdlpApiClient.Xsd.Unit_Extract Unit_Extract { get; set; }
        
        /// <summary>
        /// <para>914 - Регистрация в ИС МДЛП сведений о дополнительном вложении упаковок в третичную (заводскую, транспортную) упаковку</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("914 - Регистрация в ИС МДЛП сведений о дополнительном вложении упаковок в третичн" +
            "ую (заводскую, транспортную) упаковку")]
        [System.Xml.Serialization.XmlElementAttribute("unit_append")]
        public MdlpApiClient.Xsd.Unit_Append Unit_Append { get; set; }
        
        /// <summary>
        /// <para>915 - Регистрация в ИС МДЛП сведений об агрегировании во множество третичных (заводских, транспортных) упаковок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("915 - Регистрация в ИС МДЛП сведений об агрегировании во множество третичных (зав" +
            "одских, транспортных) упаковок")]
        [System.Xml.Serialization.XmlElementAttribute("multi_pack")]
        public MdlpApiClient.Xsd.Multi_Pack Multi_Pack { get; set; }
        
        /// <summary>
        /// <para>916 - Регистрация в ИС МДЛП сведений о дополнительном вложении во множество третичных (заводских, транспортных) упаковок</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("916 - Регистрация в ИС МДЛП сведений о дополнительном вложении во множество трети" +
            "чных (заводских, транспортных) упаковок")]
        [System.Xml.Serialization.XmlElementAttribute("multi_unit_append")]
        public MdlpApiClient.Xsd.Multi_Unit_Append Multi_Unit_Append { get; set; }
        
        /// <summary>
        /// <para>10300 - Регистрация в ИС МДЛП сведений об эмиссии (информация от СУЗ)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10300 - Регистрация в ИС МДЛП сведений об эмиссии (информация от СУЗ)")]
        [System.Xml.Serialization.XmlElementAttribute("code_emission")]
        public MdlpApiClient.Xsd.Code_Emission Code_Emission { get; set; }
        
        /// <summary>
        /// <para>10305 - Регистрация в ИС МДЛП сведений об отбраковке (информация от СУЗ)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10305 - Регистрация в ИС МДЛП сведений об отбраковке (информация от СУЗ)")]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_report_of_dropout")]
        public MdlpApiClient.Xsd.Skzkm_Report_Of_Dropout Skzkm_Report_Of_Dropout { get; set; }
        
        /// <summary>
        /// <para>10311 - Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки (информация с СКЗКМ)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10311 - Регистрация в ИС МДЛП сведений о завершении этапа окончательной упаковки " +
            "(информация с СКЗКМ)")]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_register_end_packing")]
        public MdlpApiClient.Xsd.Skzkm_Register_End_Packing Skzkm_Register_End_Packing { get; set; }
        
        /// <summary>
        /// <para>10319 - Регистрация в ИС МДЛП сведений об упаковке лекарственного препарата и нанесении средств идентификации за пределами территории РФ (информация с СКЗКМ)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10319 - Регистрация в ИС МДЛП сведений об упаковке лекарственного препарата и нан" +
            "есении средств идентификации за пределами территории РФ (информация с СКЗКМ)")]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_foreign_emission")]
        public MdlpApiClient.Xsd.Skzkm_Foreign_Emission Skzkm_Foreign_Emission { get; set; }
        
        /// <summary>
        /// <para>10511 - Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамках розничной торговли с использование ККТ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10511 - Регистрация в ИС МДЛП сведений о продаже лекарственного препарата в рамка" +
            "х розничной торговли с использование ККТ")]
        [System.Xml.Serialization.XmlElementAttribute("retail_sell_kkt")]
        public MdlpApiClient.Xsd.Retail_Sell_Kkt Retail_Sell_Kkt { get; set; }
        
        /// <summary>
        /// <para>10521 - Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту (информация с СКЗКМ)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10521 - Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льг" +
            "отному рецепту (информация с СКЗКМ)")]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_recipe")]
        public MdlpApiClient.Xsd.Skzkm_Recipe Skzkm_Recipe { get; set; }
        
        /// <summary>
        /// <para>10522 - Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту c использование ККТ</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10522 - Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льг" +
            "отному рецепту c использование ККТ")]
        [System.Xml.Serialization.XmlElementAttribute("recipe_kkt")]
        public MdlpApiClient.Xsd.Recipe_Kkt Recipe_Kkt { get; set; }
        
        /// <summary>
        /// <para>10531 - Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания медицинской помощи (информация с СКЗКМ)</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("10531 - Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказ" +
            "ания медицинской помощи (информация с СКЗКМ)")]
        [System.Xml.Serialization.XmlElementAttribute("skzkm_health_care")]
        public MdlpApiClient.Xsd.Skzkm_Health_Care Skzkm_Health_Care { get; set; }
        
        /// <summary>
        /// <para>20521 - Регистрация в ИС МДЛП сведений о подключении регистратора выбытия</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("20521 - Регистрация в ИС МДЛП сведений о подключении регистратора выбытия")]
        [System.Xml.Serialization.XmlElementAttribute("service_disposal_registrar")]
        public MdlpApiClient.Xsd.Service_Disposal_Registrar Service_Disposal_Registrar { get; set; }
        
        /// <summary>
        /// <para>Версия формата</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Версия формата")]
        [System.Xml.Serialization.XmlAttributeAttribute("version")]
        public string Version { get; set; }
        
        /// <summary>
        /// <para>Идентификатор сессии информационного обмена</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор сессии информационного обмена")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlAttributeAttribute("session_ui")]
        public string Session_Ui { get; set; }
        
        /// <summary>
        /// <para>Идентификатор исходной (родительской) сессии информационного обмена</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор исходной (родительской) сессии информационного обмена")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlAttributeAttribute("original_id")]
        public string Original_Id { get; set; }
        
        /// <summary>
        /// <para>Идентификатор по учетной системе клиента</para>
        /// <para>Строка произвольной длины, но не более 200 символов</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 200.</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute("Идентификатор по учетной системе клиента")]
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(200)]
        [System.Xml.Serialization.XmlAttributeAttribute("client_identifier")]
        public string Client_Identifier { get; set; }
    }
}
#pragma warning restore 1591


namespace MdlpApiClient
{
    using DataContracts;
    using RestSharp;
    using RestSharp.Authenticators;

    /// <summary>
    /// MDLP REST API authenticator using credentials.
    /// </summary>
    internal class CredentialsAuthenticator : IAuthenticator
    {
        public CredentialsAuthenticator(MdlpClient apiClient, CredentialsBase credentials)
        {
            State = AuthState.NotAuthenticated;
            Client = apiClient;
            Credentials = credentials;
        }

        private MdlpClient Client { get; set; }

        private CredentialsBase Credentials { get; set; }

        private AuthState State { get; set; }

        private enum AuthState
        {
            NotAuthenticated, InProgress, Authenticated
        }

        private AuthToken AuthToken { get; set; }

        private string AuthHeader { get; set; }

        public void SetAuthToken(string authToken)
        {
            AuthHeader = string.IsNullOrWhiteSpace(authToken) ?
                null : "token " + authToken;
        }

        public void Authenticate(IRestClient client, IRestRequest request)
        {
            // perform authentication request
            if (State == AuthState.NotAuthenticated)
            {
                State = AuthState.InProgress;
                AuthToken = Credentials.Authenticate(Client);
                SetAuthToken(AuthToken.Token);
                State = AuthState.Authenticated;
            }

            // add authorization header if any
            if (!string.IsNullOrWhiteSpace(AuthHeader))
            {
               request.AddOrUpdateParameter("Authorization", AuthHeader, ParameterType.HttpHeader);
            }
        }
    }
}

namespace MdlpApiClient
{
    using DataContracts;

    /// <summary>
    /// MDLP REST API credentials base class.
    /// </summary>
    public abstract class CredentialsBase
    {
        /// <summary>
        /// Client identifier.
        /// </summary>
        public string ClientID { get; set; }

        /// <summary>
        /// Client secret.
        /// </summary>
        public string ClientSecret { get; set; }

        /// <summary>
        /// Gets or sets the user identity.
        /// </summary>
        /// <remarks>
        /// For resident users: installed GOST certificate subject name or thumbprint.
        /// </remarks>
        public string UserID { get; set; }

        /// <summary>
        /// Performs authentication, returns access token with a limited lifetime.
        /// </summary>
        /// <param name="apiClient">MDLP client to perform API calls.</param>
        /// <returns><see cref="AuthToken"/> instance.</returns>
        public abstract AuthToken Authenticate(MdlpClient apiClient);
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.26. Формат объекта AccountSystem
    /// Таблица 22. Формат объекта AccountSystem
    /// 6.1.1. Метод для регистрации учетной системы
    /// 6.1.11. Метод для получения информации об УС
    /// </summary>
    [DataContract]
    public class AccountSystem
    {
        /// <summary>
        /// Идентификатор клиента
        /// </summary>
        [DataMember(Name = "client_id", IsRequired = true)]
        public string ClientID { get; set; }

        /// <summary>
        /// Секретный ключ клиента (возвращается только при регистрации УС)
        /// </summary>
        [DataMember(Name = "client_secret", IsRequired = false)]
        public string ClientSecret { get; set; }

        /// <summary>
        /// Уникальный идентификатор  учетной системы
        /// </summary>
        [DataMember(Name = "account_system_id", IsRequired = true)]
        public string AccountSystemID { get; set; }

        /// <summary>
        /// Название УС (возвращается только при запросе параметров УС)
        /// </summary>
        [DataMember(Name = "name", IsRequired = false)]
        public string Name { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список записей:
    /// 6.8.2. Метод для поиска УС по фильтру
    /// </summary>
    /// <typeparam name="T">Тип поля Entries</typeparam>
    [DataContract]
    public class AccountSystemsResponse<T>
    {
        /// <summary>
        /// Список записей
        /// </summary>
        [DataMember(Name = "account_systems", IsRequired = true)]
        public T[] AccountSystems { get; set; }

        /// <summary>
        /// Общее количество записей
        /// </summary>
        [DataMember(Name = "total", IsRequired = true)]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.28. Формат объекта Address
    /// Таблица 24. Формат объекта Address
    /// 8.1.2. Адрес места осуществления деятельности.
    /// </summary>
    [DataContract]
    public class Address
    {
        /// <summary>
        /// Уникальный идентификатор адресного объекта (ФИАС)
        /// </summary>
        [DataMember(Name = "aoguid")]
        public string AoGuid { get; set; }

        /// <summary>
        /// Адрес установки (код ФИАС)
        /// </summary>
        [DataMember(Name = "houseguid")]
        public string HouseGuid { get; set; }

        /// <summary>
        /// Текстовый адрес объекта
        /// </summary>
        [DataMember(Name = "address_description")]
        public string AddressDescription { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.8.1. Метод для получения информации о всех местах осуществления
    /// деятельности и местах ответственного хранения участника
    /// </summary>
    [DataContract]
    public class AddressEntry
    {
        /// <summary>
        /// Идентификатор места осуществления деятельности или идентификатор места ответственного хранения
        /// </summary>
        [DataMember(Name = "address_id")]
        public string AddressID { get; set; }

        /// <summary>
        /// Адрес места осуществления деятельности или места ответственного хранения
        /// </summary>
        [DataMember(Name = "address")]
        public Address Address { get; set; }

        /// <summary>
        /// Тип записи
        /// 0 — место осуществления деятельности
        /// 1 — место ответственного хранения
        /// </summary>
        [DataMember(Name = "entity_type")]
        public int EntityType { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта AddressFias
    /// </summary>
    [DataContract]
    public class AddressFias
    {
        /// <summary>
        /// Уникальный идентификатор адресного объекта (ФИАС)
        /// </summary>
        [DataMember(Name = "aoguid")]
        public string AoGuid { get; set; }

        /// <summary>
        /// Адрес установки (код ФИАС)
        /// </summary>
        [DataMember(Name = "houseguid")]
        public string HouseGuid { get; set; }

        /// <summary>
        /// Комната, 1-50 символов
        /// </summary>
        [DataMember(Name = "room")]
        public string Room { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта AddressResolved
    /// </summary>
    [DataContract]
    public class AddressResolved
    {
        /// <summary>
        /// Код выполнения операции:
        /// 0 — операция выполнена успешно, адрес найден
        /// 1 — адрес не может быть идентифицирован в БД ФИАС
        /// </summary>
        [DataMember(Name = "code")]
        public int Code { get; set; }

        /// <summary>
        /// Адрес установки (код ФИАС)
        /// </summary>
        [DataMember(Name = "houseguid", IsRequired = true)]
        public string HouseGuid { get; set; }

        /// <summary>
        /// Текстовый адрес объекта
        /// </summary>
        [DataMember(Name = "address", IsRequired = true)]
        public string Address { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.7.1. Метод добавления доверенного контрагента
    /// </summary>
    [DataContract]
    public class AddTrustedPartnersResponse
    {
        [DataMember(Name = "code", IsRequired = true)]
        public string Code { get; set; }

        [DataMember(Name = "failed_partners", IsRequired = false)]
        public string[] FailedPartners { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
    /// Формат объекта AgreementInfoEntry
    /// </summary>
    [DataContract]
    public class AgreementInfoEntry
    {
        /// <summary>
        /// Статус документа
        /// 0 — не подписан
        /// 1 — подписан
        /// </summary>
        [DataMember(Name = "status")]
        public int Status { get; set; }

        /// <summary>
        /// Дата последней смены статуса
        /// Если статус еще не менялся, будет возвращена дата регистрации участника        /// </summary>
        [DataMember(Name = "op_date")]
        public DateTime OperationDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
    /// Формат объекта AgreementsInfo
    /// </summary>
    [DataContract]
    public class AgreementsInfo
    {
        /// <summary>
        /// Договор о присоединении
        /// </summary>
        [DataMember(Name = "contract_join", IsRequired = false)]
        public AgreementInfoEntry[] ContractJoin { get; set; }

        /// <summary>
        /// Договор о платности
        /// </summary>
        [DataMember(Name = "contract_billing", IsRequired = false)]
        public AgreementInfoEntry[] ContractBilling { get; set; }

        /// <summary>
        /// Договор о безвозмездном использовании РВ
        /// </summary>
        [DataMember(Name = "contract_withdrawal_registrator", IsRequired = false)]
        public AgreementInfoEntry[] ContractWithdrawalRegistrator { get; set; }

        /// <summary>
        /// Договор о безвозмездном использовании РЭ
        /// </summary>
        [DataMember(Name = "contract_emission_registrator", IsRequired = false)]
        public AgreementInfoEntry[] ContractEmissionRegistrator { get; set; }

        /// <summary>
        /// Договор о безвозмездном использовании РЭ с удаленным доступом
        /// </summary>
        [DataMember(Name = "contract_remote_emission_registrator", IsRequired = false)]
        public AgreementInfoEntry[] ContractRemoteEmissionRegistrator { get; set; }

        /// <summary>
        /// Заявление на предоставление оборудования (на основании 
        /// анкет на РВ, к договору о безвозмездном использовании РВ)
        /// </summary>
        [DataMember(Name = "application_withdrawal_registrator", IsRequired = false)]
        public AgreementInfoEntry[] ApplicationWithdrawalRegistrator { get; set; }

        /// <summary>
        /// Заявление на предоставление оборудования (на основании 
        /// анкет на РЭ, к договору о безвозмездном использовании РЭ)
        /// </summary>
        [DataMember(Name = "application_emission_registrator", IsRequired = false)]
        public AgreementInfoEntry[] ApplicationEmissionRegistrator { get; set; }

        /// <summary>
        /// Заявление на предоставление оборудования (на основании 
        /// анкет на РЭ с удаленным доступом, к договору о безвозмездном 
        /// использовании РЭ с удаленным доступом)
        /// </summary>
        [DataMember(Name = "application_remote_emission_registrator", IsRequired = false)]
        public AgreementInfoEntry[] ApplicationRemoteEmissionRegistrator { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.2.1. Метод для получения кода аутентификации
    /// </summary>
    [DataContract]
    internal class AuthResponse
    {
        [DataMember(Name = "code")]
        public string Code { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// MDLP REST API authentication token.
    /// 6.2.2. Метод для получения ключа сессии
    /// </summary>
    [DataContract]
    public class AuthToken
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthToken"/>.
        /// </summary>
        public AuthToken()
        {
            // make sure we don't expire prematurely
            CreationDate = DateTime.Now.AddSeconds(-30);
        }

        /// <summary>
        /// Gets the creation date.
        /// </summary>
        [IgnoreDataMember]
        public DateTime CreationDate { get; private set; }

        /// <summary>
        /// Gets the expiration date.
        /// </summary>
        [IgnoreDataMember]
        public DateTime ExpirationDate
        {
            get { return CreationDate.AddMinutes(LifeTime); }
        }

        /// <summary>
        /// Gets or sets the authentication token.
        /// </summary>
        [DataMember(Name = "token")]
        public string Token { get; set; }

        /// <summary>
        /// Gets or sets the token lifetime, in minutes.
        /// </summary>
        [DataMember(Name = "life_time")]
        public int LifeTime { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.14. Список типов аутентификации (AuthType)
    /// Таблица 10. Список типов аутентификации    /// </summary>
    public class AuthTypeEnum
    {
        /// <summary>
        /// Аутентификация с помощью пароля.
        /// </summary>
        public const string PASSWORD = "PASSWORD";

        /// <summary>
        /// Аутентификация с помощью подписанного одноразового кода.
        /// </summary>
        public const string SIGNED_CODE = "SIGNED_CODE";
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
    /// Формат объекта BankingInfo
    /// </summary>
    [DataContract]
    public class BankingInfo
    {
        /// <summary>
        /// Номер расчетного счета
        /// </summary>
        [DataMember(Name = "checking_account", IsRequired = false)]
        public string Account { get; set; }

        /// <summary>
        /// Наименование банка
        /// </summary>
        [DataMember(Name = "bank", IsRequired = false)]
        public string Bank { get; set; }

        /// <summary>
        /// Номер корреспондентского счета
        /// </summary>
        [DataMember(Name = "correspondent_account", IsRequired = false)]
        public string CorrespondentAccount { get; set; }

        /// <summary>
        /// Основание для действий руководителя
        /// 1 — доверенность
        /// 2 — учредительные документы
        /// </summary>
        [DataMember(Name = "authorized_by", IsRequired = false)]
        public int AuthorizedBy { get; set; }

        /// <summary>
        /// БИК банка
        /// </summary>
        [DataMember(Name = "bic", IsRequired = false)]
        public string Bic { get; set; }

        /// <summary>
        /// Подписант
        /// </summary>
        [DataMember(Name = "signer", IsRequired = false)]
        public string Signer { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.13.1. Получение сводной информации распределения ЛП
    /// Информация о производственных сериях
    /// </summary>
    [DataContract]
    public class BatchInfo
    {
        /// <summary>
        /// Номер производственной серии.
        /// </summary>
        [DataMember(Name = "batch")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Дата регистрации производственной серии.
        /// </summary>
        [DataMember(Name = "registration_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Количество кодов маркировки в производственной серии.
        /// </summary>
        [DataMember(Name = "size")]
        public int Size { get; set; }

        /// <summary>
        /// Информация по статусам кодов маркировки в производственной серии, <see cref="BatchStatusInfo"/>.
        /// </summary>
        [DataMember(Name = "statuses")]
        public BatchStatusInfo[] Statuses { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.45. Статусы кодов маркировки в производственной серии
    /// Таблица 41. Статусы кодов маркировки в производственной серии
    /// </summary>
    public class BatchStatus
    {
        /// <summary>
        /// Производство.
        /// </summary>
        public const string PRODUCTION = "PRODUCTION";

        /// <summary>
        /// Импорт.
        /// </summary>
        public const string IMPORT = "IMPORT";

        /// <summary>
        /// Закупка в России.
        /// </summary>
        public const string PURCHASE_IN_RUSSIA = "PURCHASE_IN_RUSSIA";

        /// <summary>
        /// Розничные продажи.
        /// </summary>
        public const string RETAIL_SALE = "RETAIL_SALE";

        /// <summary>
        /// Отпуск по льготным рецептам.
        /// </summary>
        public const string DISCOUNT_SALE = "DISCOUNT_SALE";

        /// <summary>
        /// Отпуск для оказания мед. помощи.
        /// </summary>
        public const string MEDICAL_USE = "MEDICAL_USE";

        /// <summary>
        /// Оптовые продажи.
        /// </summary>
        public const string WHOLESALE = "WHOLESALE";

        /// <summary>
        /// Прочий вывод.
        /// </summary>
        public const string OTHER = "OTHER";
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.13.1. Получение сводной информации распределения ЛП
    /// Информация по статусам кодов маркировки в производственной серии
    /// </summary>
    [DataContract]
    public class BatchStatusInfo
    {
        /// <summary>
        /// Статус кодов маркировки в производственной серии, <see cref="BatchStatus"/>.
        /// </summary>
        [DataMember(Name = "status", IsRequired = true)]
        public string Status { get; set; }

        /// <summary>
        /// Наименование организации.
        /// </summary>
        [DataMember(Name = "organization_name", IsRequired = true)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Адрес МД/МОХ.
        /// </summary>
        [DataMember(Name = "address", IsRequired = false)]
        public string Address { get; set; }

        /// <summary>
        /// Количество кодов маркировки в данном статусе.
        /// </summary>
        [DataMember(Name = "sgtin_amount", IsRequired = false)]
        public int SgtinAmount { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.3. Метод для получения информации о лицевых счетах
    /// Формат объекта BillingAccount
    /// </summary>
    [DataContract]
    public class BillingAccount
    {
        /// <summary>
        /// Идентификатор лицевого счета
        /// </summary>
        [DataMember(Name = "account_number", IsRequired = true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Баланс лицевого счета
        /// </summary>
        /// <remarks>
        /// Может быть не заполнен, если данной информации не поступало в ИС "МДЛП"
        /// </remarks>
        [DataMember(Name = "balance", IsRequired = false)]
        public decimal? Balance { get; set; }

        /// <summary>
        /// Дата последнего обновления баланса лицевого счёта
        /// </summary>
        [DataMember(Name = "last_update", IsRequired = false)]
        public DateTime? LastUpdate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.3. Метод для получения информации о лицевых счетах
    /// </summary>
    [DataContract]
    internal class BillingAccountResponse
    {
        /// <summary>
        /// Список лицевых счетов
        /// </summary>
        [DataMember(Name = "accounts", IsRequired = false)]
        public BillingAccount[] Accounts { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.1.2. Место осуществления деятельности.
    /// </summary>
    [DataContract]
    public class BranchEntry
    {
        /// <summary>
        /// Код сущности (для методов, возвращающих места и склады в одном списке, например, 7.8.1).
        /// </summary>
        public const int EntityType = 0;

        /// <summary>
        /// Уникальный идентификатор места осуществления деятельности
        /// </summary>
        [DataMember(Name = "id")]
        public string ID { get; set; }

        /// <summary>
        /// Код субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_code")]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// Название субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_name")]
        public string FederalSubjectName { get; set; }

        /// <summary>
        /// Название организации
        /// </summary>
        [DataMember(Name = "org_name")]
        public string OrgName { get; set; }

        /// <summary>
        /// Перечень работ/услуг согласно лицензии
        /// </summary>
        [DataMember(Name = "work_list")]
        public string[] WorkList { get; set; }

        /// <summary>
        /// Адрес места осуществления деятельности
        /// </summary>
        [DataMember(Name = "address")]
        public Address Address { get; set; }

        /// <summary>
        /// Статус: 0 — не действует, 1 — действует, 2 — в процессе приостановления
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public int? Status { get; set; }

        /// <summary>
        /// Дата регистрации
        /// </summary>
        [DataMember(Name = "registration_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Дата приостановления
        /// </summary>
        [DataMember(Name = "suspension_date", IsRequired = false)]
        public DateTime? SuspensionDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.1.2. Фильтр для мест осуществления деятельности.
    /// Содержит информацию для фильтрации списка мест осуществления деятельности.
    /// </summary>
    [DataContract]
    public class BranchFilter
    {
        /// <summary>
        /// Уникальный идентификатор места осуществления деятельности
        /// </summary>
        [DataMember(Name = "branch_id", IsRequired = false)]
        public string BranchID { get; set; }

        /// <summary>
        /// Уникальный идентификатор дома
        /// </summary>
        [DataMember(Name = "houseguid", IsRequired = false)]
        public string HouseGuid { get; set; }

        /// <summary>
        /// Код субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_code", IsRequired = false)]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// Код округа РФ
        /// </summary>
        [DataMember(Name = "federal_district_code", IsRequired = false)]
        public string FederalDistrictCode { get; set; }

        /// <summary>
        /// Статус: 0 — не действует, 1 — действует, 2 — в процессе приостановления
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public int? Status { get; set; }

        /// <summary>
        /// Дата начала периода фильтрации
        /// </summary>
        [DataMember(Name = "start_date", IsRequired = false)]
        public CustomDateTime StartDate { get; set; }

        /// <summary>
        /// Дата окончания периода фильтрации
        /// </summary>
        [DataMember(Name = "end_date", IsRequired = false)]
        public CustomDateTime EndDate { get; set; }

        /// <summary>
        /// Возможность вывода ЛП из оборота через РВ или соответствующий документ.
        /// • true — вывод ЛП из оборота возможен через РВ или документ
        /// • false — вывод ЛП из оборота возможен только через РВ        /// </summary>
        [DataMember(Name = "is_withdrawal_via_document_allowed", IsRequired = false)]
        public bool? IsWithdrawalViaDocumentAllowed { get; set; }

        /// <summary>
        /// Лицензия на фармацевтическую деятельность        /// </summary>
        [DataMember(Name = "has_pharm_license", IsRequired = false)]
        public bool? HasPharmLicense { get; set; }

        /// <summary>
        /// Лицензия на производственную деятельность        /// </summary>
        [DataMember(Name = "has_prod_license", IsRequired = false)]
        public bool? HasProdLicense { get; set; }

        /// <summary>
        /// Лицензия на медицинскую деятельность        /// </summary>
        [DataMember(Name = "has_med_license", IsRequired = false)]
        public bool? HasMedLicense { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список сертификатов:
    /// 6.1.9. Метод для получения информации о зарегистрированных сертификатах текущего пользователя
    /// 6.1.10. Метод для получения информации о зарегистрированных сертификатах пользователя
    /// </summary>
    /// <typeparam name="T">Тип поля Items</typeparam>
    [DataContract]
    public class CertificatesResponse<T>
    {
        /// <summary>
        /// Список записей
        /// </summary>
        [DataMember(Name = "certs")]
        public T[] Certificates { get; set; }

        /// <summary>
        /// Общее количество записей
        /// </summary>
        [DataMember(Name = "total")]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
    /// Формат объекта ChiefInfo
    /// </summary>
    [DataContract]
    public class ChiefInfo
    {
        /// <summary>
        /// Имя руководителя организации
        /// </summary>
        [DataMember(Name = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// Отчество руководителя организации
        /// </summary>
        [DataMember(Name = "middle_name")]
        public string MiddleName { get; set; }

        /// <summary>
        /// Фамилия руководителя организации
        /// </summary>
        [DataMember(Name = "last_name")]
        public string LastName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.9.1. Метод для получения списка стран
    /// Структура данных CountryInfo
    /// </summary>
    [DataContract]
    public class CountryInfo
    {
        /// <summary>
        /// Уникальный идентификатор, почти всегда пуст
        /// </summary>
        [DataMember(Name = "id", IsRequired = false)]
        public string ID { get; set; }

        /// <summary>
        /// Код ISO
        /// </summary>
        [DataMember(Name = "iso", IsRequired = true)]
        public string Iso { get; set; }

        /// <summary>
        /// Двухзначное обозначение
        /// </summary>
        [DataMember(Name = "alpha2", IsRequired = true)]
        public string Alpha2 { get; set; }

        /// <summary>
        /// Трехзначное обозначение
        /// </summary>
        [DataMember(Name = "alpha3", IsRequired = true)]
        public string Alpha3 { get; set; }

        /// <summary>
        /// Расположение
        /// </summary>
        [DataMember(Name = "location", IsRequired = true)]
        public string Location { get; set; }

        /// <summary>
        /// Наименование
        /// </summary>
        [DataMember(Name = "name", IsRequired = true)]
        public string Name { get; set; }

        /// <summary>
        /// Полное наименование, бывает не заполнено
        /// </summary>
        [DataMember(Name = "fullname", IsRequired = false)]
        public string FullName { get; set; }

        /// <summary>
        /// Англоязычное наименование
        /// </summary>
        [DataMember(Name = "english", IsRequired = true)]
        public string EnglishName { get; set; }

        /// <summary>
        /// Точное расположение
        /// </summary>
        [DataMember(Name = "location-precise", IsRequired = true)]
        public string LocationPrecise { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.6.3. Метод для создания группы прав пользователей
    /// </summary>
    [DataContract]
    internal class CreateRightsGroupResponse
    {
        /// <summary>
        /// Уникальный идентификатор группы прав пользователей
        /// </summary>
        [DataMember(Name = "group_id", IsRequired = false)]
        public string GroupID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;

    /// <summary>
    /// Custom <see cref="System.DateTime"/> wrapper class to work around serialization issues.
    /// Some API methods assume that date+time fields look like this: "2018-12-12T00:00:00Z".
    /// While some others assume that date+time fields look like this: "2018-12-12 00:00:00"
    /// </summary>
    public class CustomDate
    {
        /// <summary>
        /// Real Date value.
        /// </summary>
        public DateTime? DateTime { get; set; }

        private const string Format = "yyyy\\-MM\\-dd";

        /// <inheritdoc/>
        public override string ToString() => // 2020-04-24
            DateTime.HasValue ? DateTime.Value.ToString(Format) : null;

        /// <summary>
        /// Parses the given string.
        /// </summary>
        /// <param name="s">String to parse.</param>
        /// <returns><see cref="CustomDate"/> instance.</returns>
        public static CustomDate Parse(string s)
        {
            if (string.IsNullOrWhiteSpace(s) || "null".Equals(s, StringComparison.OrdinalIgnoreCase))
            {
                return new CustomDate();
            }

            return new CustomDate
            {
                DateTime = System.DateTime.ParseExact(s.TrimEnd('z', 'Z'), Format, null).Date
            };
        }

        /// <summary>
        /// Implicit conversion to the <see cref="DateTime"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDate"/> instance.</param>
        public static implicit operator DateTime(CustomDate cd) =>
            cd.DateTime ?? default(DateTime);

        /// <summary>
        /// Implicit conversion to the <see cref="Nullable{DateTime}"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDate"/> instance.</param>
        public static implicit operator DateTime?(CustomDate cd) => cd.DateTime;

        /// <summary>
        /// Implicit conversion to the <see cref="string"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDate"/> instance.</param>
        public static implicit operator string(CustomDate cd) =>
            cd == null ? null : cd.ToString();

        /// <summary>
        /// Implicit conversion from the <see cref="Nullable{DateTime}"/> type.
        /// </summary>
        /// <param name="dt"><see cref="CustomDate"/> instance.</param>
        public static implicit operator CustomDate(DateTime? dt) =>
            new CustomDate { DateTime = dt };

        /// <summary>
        /// Implicit conversion from the <see cref="DateTime"/> type.
        /// </summary>
        /// <param name="dt"><see cref="CustomDate"/> instance.</param>
        public static implicit operator CustomDate(DateTime dt) =>
            new CustomDate { DateTime = dt };
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;

    /// <summary>
    /// Custom <see cref="System.DateTime"/> wrapper class to work around serialization issues.
    /// Some API methods assume that date+time fields look like this: "2018-12-12T00:00:00Z".
    /// While some others assume that date+time fields look like this: "2018-12-12 00:00:00"
    /// </summary>
    public class CustomDateTime
    {
        /// <summary>
        /// Real DateTime value.
        /// </summary>
        public DateTime? DateTime { get; set; }

        /// <inheritdoc/>
        public override string ToString() => // 2020-04-24T21:01:40Z
            DateTime.HasValue ? DateTime.Value.ToString("s") + "Z" : null;

        /// <summary>
        /// Parses the given string.
        /// </summary>
        /// <param name="s">String to parse.</param>
        /// <returns><see cref="CustomDateTime"/> instance.</returns>
        public static CustomDateTime Parse(string s)
        {
            if (string.IsNullOrWhiteSpace(s) || "null".Equals(s, StringComparison.OrdinalIgnoreCase))
            {
                return new CustomDateTime();
            }

            return new CustomDateTime
            {
                DateTime = System.DateTime.ParseExact(s.TrimEnd('z', 'Z'), "s", null)
            };
        }

        /// <summary>
        /// Implicit conversion to the <see cref="DateTime"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDateTime"/> instance.</param>
        public static implicit operator DateTime(CustomDateTime cd) =>
            cd.DateTime ?? default(DateTime);

        /// <summary>
        /// Implicit conversion to the <see cref="Nullable{DateTime}"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDateTime"/> instance.</param>
        public static implicit operator DateTime?(CustomDateTime cd) => cd.DateTime;

        /// <summary>
        /// Implicit conversion to the <see cref="string"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDateTime"/> instance.</param>
        public static implicit operator string(CustomDateTime cd) =>
            cd == null ? null : cd.ToString();

        /// <summary>
        /// Implicit conversion from the <see cref="Nullable{DateTime}"/> type.
        /// </summary>
        /// <param name="dt"><see cref="CustomDateTime"/> instance.</param>
        public static implicit operator CustomDateTime(DateTime? dt) =>
            new CustomDateTime { DateTime = dt };

        /// <summary>
        /// Implicit conversion from the <see cref="DateTime"/> type.
        /// </summary>
        /// <param name="dt"><see cref="CustomDateTime"/> instance.</param>
        public static implicit operator CustomDateTime(DateTime dt) =>
            new CustomDateTime { DateTime = dt };
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;

    /// <summary>
    /// Custom <see cref="System.DateTime"/> wrapper class to work around serialization issues.
    /// Some API methods assume that date+time fields look like this: "2018-12-12T00:00:00Z".
    /// While some others assume that date+time fields look like this: "2018-12-12 00:00:00"
    /// </summary>
    public class CustomDateTimeSpace
    {
        /// <summary>
        /// Real DateTime value.
        /// </summary>
        public DateTime? DateTime { get; set; }

        /// <inheritdoc/>
        public override string ToString() => // 2020-04-24 21:01:40
            DateTime.HasValue ? DateTime.Value.ToString("s").Replace("T", " ") : null;

        /// <summary>
        /// Parses the given string.
        /// </summary>
        /// <param name="s">String to parse.</param>
        /// <returns><see cref="CustomDateTimeSpace"/> instance.</returns>
        public static CustomDateTimeSpace Parse(string s)
        {
            if (string.IsNullOrWhiteSpace(s) || "null".Equals(s, StringComparison.OrdinalIgnoreCase))
            {
                return new CustomDateTimeSpace();
            }

            return new CustomDateTimeSpace
            {
                DateTime = System.DateTime.ParseExact(s.Replace(" ", "T").TrimEnd('z', 'Z'), "s", null)
            };
        }

        /// <summary>
        /// Implicit conversion to the <see cref="DateTime"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDateTimeSpace"/> instance.</param>
        public static implicit operator DateTime(CustomDateTimeSpace cd) =>
            cd.DateTime ?? default(DateTime);

        /// <summary>
        /// Implicit conversion to the <see cref="Nullable{DateTime}"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDateTimeSpace"/> instance.</param>
        public static implicit operator DateTime?(CustomDateTimeSpace cd) =>
            cd.DateTime;

        /// <summary>
        /// Implicit conversion to the <see cref="string"/> type.
        /// </summary>
        /// <param name="cd"><see cref="CustomDateTimeSpace"/> instance.</param>
        public static implicit operator string(CustomDateTimeSpace cd) =>
            cd == null ? null : cd.ToString();

        /// <summary>
        /// Implicit conversion from the <see cref="Nullable{DateTime}"/> type.
        /// </summary>
        /// <param name="dt"><see cref="CustomDateTimeSpace"/> instance.</param>
        public static implicit operator CustomDateTimeSpace(DateTime? dt) =>
            new CustomDateTimeSpace { DateTime = dt };

        /// <summary>
        /// Implicit conversion from the <see cref="DateTime"/> type.
        /// </summary>
        /// <param name="dt"><see cref="CustomDateTimeSpace"/> instance.</param>
        public static implicit operator CustomDateTimeSpace(DateTime dt) =>
            new CustomDateTimeSpace { DateTime = dt };
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.11.1. Фильтрация по реестру мест таможенного контроля
    /// </summary>
    [DataContract]
    public class CustomsPointsFilter
    {
        /// <summary>
        /// Уникальный идентификатор места нахождения товара в ЗТК
        /// </summary>
        [DataMember(Name = "id", IsRequired = false)]
        public string ID { get; set; }

        /// <summary>
        /// ИНН владельца СВХ/ТС или УЭО
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// Номер свидетельства о включении в реестр ФТС России
        /// </summary>
        [DataMember(Name = "regNum", IsRequired = false)]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Тип склада
        /// </summary>
        [DataMember(Name = "warehouseType", IsRequired = false)]
        public string WarehouseType { get; set; }

        /// <summary>
        /// Код таможенного органа
        /// </summary>
        [DataMember(Name = "customCode", IsRequired = false)]
        public string CustomsCode { get; set; }

        /// <summary>
        /// Наличие лицензии на фармацевтическую деятельность.
        /// </summary>
        [DataMember(Name = "hasPharmLicense", IsRequired = false)]
        public bool? HasPharmLicense { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.11.1. Фильтрация по реестру мест таможенного контроля
    /// Формат объекта CustomPointsInfoEntry
    /// </summary>
    [DataContract]
    public class CustomsPointsInfoEntry
    {
        /// <summary>
        /// Уникальный идентификатор места нахождения товара в ЗТК
        /// </summary>
        [DataMember(Name = "id", IsRequired = true)]
        public string ID { get; set; }

        /// <summary>
        /// ИНН владельца СВХ/ТС или УЭО        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// Наименовани владельца СВХ/ТС или УЭО        /// </summary>
        [DataMember(Name = "orgName", IsRequired = false)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Номер свидетельства о включении в реестр ФТС России        /// </summary>
        [DataMember(Name = "regNum", IsRequired = false)]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Тип склада        /// </summary>
        [DataMember(Name = "warehouseAddress", IsRequired = false)]
        public string WarehouseAddress { get; set; }

        /// <summary>
        /// Тип склада        /// </summary>
        [DataMember(Name = "warehouseType", IsRequired = false)]
        public string WarehouseType { get; set; }

        /// <summary>
        /// Код таможенного органа
        /// </summary>
        [DataMember(Name = "customCode", IsRequired = false)]
        public string CustomsCode { get; set; }

        /// <summary>
        /// Наименование таможенного органа
        /// </summary>
        [DataMember(Name = "customName", IsRequired = false)]
        public string CustomsName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.38. Формат объекта DeviceContractInfoEntry
    /// Таблица 34. Формат объекта DeviceContractInfoEntry    /// </summary>
    [DataContract]
    public class DeviceContractInfoEntry
    {
        /// <summary>
        /// Номер договора
        /// </summary>
        [DataMember(Name = "doc_num", IsRequired = false)]
        public string DocumentNumber { get; set; }

        /// <summary>
        /// Дата договора
        /// </summary>
        [DataMember(Name = "doc_date", IsRequired = false)]
        public DateTime? DocumentDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.20. Формат объекта DocFilter
    /// Содержит информацию для фильтрации списка документов.
    /// </summary>
    [DataContract]
    public class DocFilter
    {
        /// <summary>
        /// Дата начала периода фильтрации
        /// </summary>
        [DataMember(Name = "start_date", IsRequired = false)]
        public CustomDateTimeSpace StartDate { get; set; }

        /// <summary>
        /// Дата окончания периода фильтрации
        /// </summary>
        [DataMember(Name = "end_date", IsRequired = false)]
        public CustomDateTimeSpace EndDate { get; set; }

        /// <summary>
        /// Дата обработки документа: начало периода
        /// </summary>
        [DataMember(Name = "processed_date_from", IsRequired = false)]
        public CustomDateTimeSpace ProcessedDateFrom { get; set; }

        /// <summary>
        /// Дата обработки документа: окончание периода
        /// </summary>
        [DataMember(Name = "processed_date_to", IsRequired = false)]
        public CustomDateTimeSpace ProcessedDateTo { get; set; }

        /// <summary>
        /// Уникальный идентификатор документа
        /// </summary>
        [DataMember(Name = "document_id", IsRequired = false)]
        public string DocumentID { get; set; }

        /// <summary>
        /// Уникальный идентификатор запроса
        /// </summary>
        [DataMember(Name = "request_id", IsRequired = false)]
        public string RequestID { get; set; }

        /// <summary>
        /// Уникальный идентификатор отправителя.
        /// Идентификатор места осуществления деятельности, места ответственного
        /// хранения или идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sender_id", IsRequired = false)]
        public string SenderID { get; set; }

        /// <summary>
        /// Уникальный идентификатор получателя.
        /// Идентификатор места осуществления деятельности, места ответственного
        /// хранения или идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// Применимо для входящих документов.
        /// </summary>
        [DataMember(Name = "receiver_id", IsRequired = false)]
        public string ReceiverID { get; set; }

        /// <summary>
        /// Тип документа. Соответствует номеру схемы XSD.
        /// </summary>
        [DataMember(Name = "doc_type", IsRequired = false)]
        public int? DocType { get; set; } // тут передается action_id: 311, 601, etc

        /// <summary>
        /// Статус документа. См. <see cref="DocStatusEnum"/>.
        /// </summary>
        [DataMember(Name = "doc_status", IsRequired = false)]
        public string DocStatus { get; set; }

        /// <summary>
        /// Тип загрузки в систему:
        /// 0 — УСО
        /// 1 — ЛК (личный кабинет)
        /// 2 — API
        /// 3 — ОФД (Оператор фискальных данных)
        /// 4 — СКЗКМ/ИС МП
        /// </summary>
        [DataMember(Name = "file_uploadtype", IsRequired = false)]
        public int? FileUploadType { get; set; } // 1 УСО, 2 ЛК, 3 API, 4 ОФД, 5 СКЗКМ

        /// <summary>
        /// Идентификатор отчета СУЗ.
        /// Для документов, полученных от регистраторов событий
        /// </summary>
        [DataMember(Name = "skzkm_report_id", IsRequired = false)]
        public string SkzkmReportID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.12. Список статусов документа (DocStatusEnum)
    /// </summary>
    public class DocStatusEnum
    {
        /// <summary>
        /// Документ загружается
        /// </summary>
        public const string UPLOADING_DOCUMENT = "UPLOADING_DOCUMENT";

        /// <summary>
        /// Документ принят и обрабатывается трансформатором
        /// </summary>
        public const string PROCESSING_DOCUMENT = "PROCESSING_DOCUMENT";

        /// <summary>
        /// Документ обработан трансформатором и принят на обработку системой
        /// </summary>
        public const string CORE_PROCESSING_DOCUMENT = "CORE_PROCESSING_DOCUMENT";

        /// <summary>
        /// Документ обработан системой и трансформатор подготавливает ответ
        /// </summary>
        public const string CORE_PROCESSED_DOCUMENT = "CORE_PROCESSED_DOCUMENT";

        /// <summary>
        /// Документ обработан трансформатором и готов для загрузки
        /// </summary>
        public const string PROCESSED_DOCUMENT = "PROCESSED_DOCUMENT";

        /// <summary>
        /// Произошла ошибка во время обработки документа
        /// </summary>
        public const string FAILED = "FAILED";

        /// <summary>
        /// Произошла ошибка во время обработки документа.
        /// Квитанция для документа с информацией о причине сбоя 
        /// сформирована и может быть получена по request_id
        /// </summary>
        public const string FAILED_RESULT_READY = "FAILED_RESULT_READY";    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.17. Формат объекта Document
    /// Таблица 13. Формат объекта Document
    /// 5.9. Получение метаданных документа
    /// </summary>
    [DataContract]
    public class DocumentMetadata
    {
        /// <summary>
        /// Уникальный идентификатор запроса
        /// </summary>
        [DataMember(Name = "request_id")]
        public string RequestID { get; set; } // "996f487c-d902-4dbd-b99f-76aef2d904dc",

        /// <summary>
        /// Уникальный идентификатор документа
        /// </summary>
        [DataMember(Name = "document_id")]
        public string DocumentID { get; set; } // "6e491238-d4a9-495b-8d37-45181916c846",

        /// <summary>
        /// Дата получения документа
        /// </summary>
        [DataMember(Name = "date")]
        public DateTime Date { get; set; } // "2017-11-23 05:48:15",

        /// <summary>
        /// Дата обработки документа
        /// </summary>
        [DataMember(Name = "processed_date")]
        public DateTime ProcessedDate { get; set; } // "2017-11-23 05:48:15",

        /// <summary>
        /// Отправитель документа
        /// </summary>
        [DataMember(Name = "sender")]
        public string SenderID { get; set; } // "935ba7bc-b022-11e7-abc4-cec278b6b50a",

        /// <summary>
        /// Получатель документа
        /// </summary>
        [DataMember(Name = "receiver")]
        public string ReceiverID { get; set; } // "935ba7bc-b022-11e7-abc4-cec278b6b50a",

        /// <summary>
        /// Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sys_id")]
        public string SystemSubjectID { get; set; } // "0c290e4a-aabb-40ae-8ef2-ce462561ce7f",

        /// <summary>
        /// Тип документа. Соответствует номеру схемы XSD
        /// </summary>
        [DataMember(Name = "doc_type")]
        public int DocType { get; set; } // 311,

        /// <summary>
        /// Статус документа. См. <see cref="DocStatusEnum"/>.
        /// </summary>
        [DataMember(Name = "doc_status")]
        public string DocStatus { get; set; } // "PROCESSED_DOCUMENT",

        /// <summary>
        /// Версия документа
        /// </summary>
        [DataMember(Name = "version")]
        public string Version { get; set; } // API version: "1.28"
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 5.14. Прослеживание документов по отчёту из СУЗ
    /// </summary>
    [DataContract]
    public class DocumentSkzkmMetadata
    {
        /// <summary>
        /// Уникальный идентификатор запроса
        /// </summary>
        [DataMember(Name = "request_id")]
        public string RequestID { get; set; } // "996f487c-d902-4dbd-b99f-76aef2d904dc",

        /// <summary>
        /// Уникальный идентификатор документа
        /// </summary>
        [DataMember(Name = "document_id")]
        public string DocumentID { get; set; } // "6e491238-d4a9-495b-8d37-45181916c846",

        /// <summary>
        /// Дата получения документа
        /// </summary>
        [DataMember(Name = "date")]
        public DateTime Date { get; set; } // "2017-11-23 05:48:15",

        /// <summary>
        /// Тип документа. Соответствует номеру схемы XSD
        /// </summary>
        [DataMember(Name = "doc_type")]
        public int DocType { get; set; } // 0,

        /// <summary>
        /// Статус документа.
        /// </summary>
        [DataMember(Name = "processing_document_status")]
        public string ProcessingDocStatus { get; set; } // "PROCESSING",

        /// <summary>
        /// Дата обработки документа
        /// </summary>
        [DataMember(Name = "processed_date")]
        public DateTime ProcessedDate { get; set; } // "2017-11-23 05:48:15",

        /// <summary>
        /// Количество КИЗ
        /// </summary>
        [DataMember(Name = "sgtin_count")]
        public int SgtinCount { get; set; } // 10
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список документов:
    /// 5.7. Исходящих документов.
    /// 5.8. Входящих документов.
    /// 5.11. Документов по идентификатору запроса.
    /// </summary>
    /// <typeparam name="T">Тип поля Documents</typeparam>
    [DataContract]
    public class DocumentsResponse<T>
    {
        /// <summary>
        /// Список документов
        /// </summary>
        [DataMember(Name = "documents")]
        public T[] Documents { get; set; }

        /// <summary>
        /// Общее количество документов
        /// </summary>
        [DataMember(Name = "total")]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    [DataContract]
    public class EgripRegistryResponse
    {
        [DataMember(Name = "id")]
        public string ID { get; set; }

        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        [DataMember(Name = "FIRST_NAME")]
        public string FirstName { get; set; }

        [DataMember(Name = "MIDDLE_NAME")]
        public string MiddleName { get; set; }

        [DataMember(Name = "LAST_NAME")]
        public string LastName { get; set; }

        [DataMember(Name = "ORG_NAME")]
        public string OrgName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    [DataContract]
    public class EgrulRegistryResponse
    {
        [DataMember(Name = "id")]
        public string ID { get; set; }

        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        [DataMember(Name = "OGRN")]
        public string Ogrn { get; set; }

        [DataMember(Name = "KPP")]
        public string Kpp { get; set; }

        [DataMember(Name = "FIRST_NAME")]
        public string FirstName { get; set; }

        [DataMember(Name = "MIDDLE_NAME")]
        public string MiddleName { get; set; }

        [DataMember(Name = "LAST_NAME")]
        public string LastName { get; set; }

        [DataMember(Name = "ORG_NAME")]
        public string OrgName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.10.1. Фильтрация по реестру регистраторов эмиссии
    /// </summary>
    [DataContract]
    public class EmissionDeviceFilter
    {
        /// <summary>
        /// Уникальный идентификатор устройства
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = false)]
        public string DeviceID { get; set; }

        /// <summary>
        /// Дата предоставления, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "provision_start_date", IsRequired = false)]
        public CustomDate ProvisionStartDate { get; set; }

        /// <summary>
        /// Дата предоставления, окончание периода фильтрации
        /// </summary>
        [DataMember(Name = "provision_end_date", IsRequired = false)]
        public CustomDate ProvisionEndDate { get; set; }

        /// <summary>
        /// Тип размещения
        /// 0 — по месту использования
        /// 1 — ЦОД оператора
        /// 2 — по адресу МД
        /// </summary>
        [DataMember(Name = "placement_type", IsRequired = false)]
        public int? PlacementType { get; set; }

        /// <summary>
        /// Статус
        /// 0 — активный
        /// 1 — неактивный
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public int? Status { get; set; }

        /// <summary>
        /// Производитель устройства
        /// </summary>
        [DataMember(Name = "device_vendor", IsRequired = false)]
        public string DeviceVendor { get; set; }

        /// <summary>
        /// Модель устройства
        /// </summary>
        [DataMember(Name = "device_model", IsRequired = false)]
        public string DeviceModel { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.10.1. Фильтрация по реестру регистраторов эмиссии
    /// </summary>
    [DataContract]
    public class EmissionDeviceInfoEntry
    {
        /// <summary>
        /// Уникальный идентификатор устройства
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = true)]
        public string DeviceID { get; set; }

        /// <summary>
        /// Серийный (индивидуальный) номер устройства
        /// </summary>
        [DataMember(Name = "serial_number", IsRequired = true)]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Наименование (модель) устройства
        /// </summary>
        [DataMember(Name = "device_name", IsRequired = true)]
        public string DeviceName { get; set; }

        /// <summary>
        /// Тип размещения
        /// 0 — по месту использования
        /// 1 — ЦОД оператора
        /// 2 — по адресу МД
        /// </summary>
        [DataMember(Name = "placement_type", IsRequired = true)]
        public int PlacementType { get; set; }

        /// <summary>
        /// Адрес установки (код ФИАС)
        /// </summary>
        /// <remarks>
        /// Отсуствует в случае размещения в ЦОД оператора
        /// </remarks>
        [DataMember(Name = "houseguid", IsRequired = false)]
        public string HouseGuid { get; set; }

        /// <summary>
        /// Текстовое представление адреса установки
        /// </summary>
        /// <remarks>
        /// Отсуствует в случае размещения в ЦОД оператора
        /// </remarks>
        [DataMember(Name = "device_address", IsRequired = false)]
        public string DeviceAddress { get; set; }

        /// <summary>
        /// Тип использования
        /// 0 — основной
        /// 1 — резерв
        /// </summary>
        [DataMember(Name = "usage_type", IsRequired = true)]
        public int UsageType { get; set; }

        /// <summary>
        /// Дата предоставления
        /// </summary>
        [DataMember(Name = "provision_date", IsRequired = true)]
        public DateTime ProvisionDate { get; set; }

        /// <summary>
        /// Информация о договоре
        /// </summary>
        /// <remarks>
        /// Отсуствует в случае размещения в ЦОД оператора
        /// </remarks>
        [DataMember(Name = "contract_info", IsRequired = false)]
        public DeviceContractInfoEntry ContractInfo { get; set; }

        /// <summary>
        /// Статус
        /// 0 — активный
        /// 1 — неактивный
        /// </summary>
        [DataMember(Name = "status", IsRequired = true)]
        public int Status { get; set; }

        /// <summary>
        /// Производитель устройства
        /// </summary>
        [DataMember(Name = "device_vendor", IsRequired = true)]
        public string DeviceVendor { get; set; }

        /// <summary>
        /// Модель устройства
        /// </summary>
        [DataMember(Name = "device_model", IsRequired = true)]
        public string DeviceModel { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Пустой класс ответа.
    /// </summary>
    [DataContract]
    public class EmptyResponse
    {
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список элементов и список ошибок.
    /// 8.3.2. Список КИЗ и список ошибок поиска.
    /// 8.3.3. Список КИЗ из общедоступного реестра КИЗ и список не найденных КИЗ.
    /// </summary>
    /// <typeparam name="T">Тип элемента поля Entries</typeparam>
    /// <typeparam name="F">Тип элемента поля FailedEntries</typeparam>
    [DataContract]
    public class EntriesFailedResponse<T, F> : EntriesResponse<T>
    {
        /// <summary>
        /// Список ошибочных записей
        /// </summary>
        [DataMember(Name = "failed_entries")]
        public F[] FailedEntries { get; set; }

        /// <summary>
        /// Общее количество ошибочных записей
        /// </summary>
        [DataMember(Name = "failed")]
        public int Failed { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список записей:
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// </summary>
    /// <typeparam name="T">Тип поля Entries</typeparam>
    [DataContract]
    public class EntriesFilteredResponse<T>
    {
        /// <summary>
        /// Записи из реестра
        /// </summary>
        [DataMember(Name = "filtered_records")]
        public T[] Entries { get; set; }

        /// <summary>
        /// Общее количество записей по запросу
        /// </summary>
        [DataMember(Name = "filtered_records_count")]
        public int Total { get; set; }

        /// <summary>
        /// Код ошибки? Недокументированное поле
        /// </summary>
        [DataMember(Name = "code")]
        internal int Code { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список записей:
    /// 8.1.2. Мест осуществления деятельности.
    /// 8.2.2. Список мест ответственного хранения.
    /// 8.2.5. Метод получения информации об адресах искомого участника.
    /// 8.3.1. Список найденных КИЗ.
    /// 8.3.5. Список КИЗ со статусом 'Оборот приостановлен'.
    /// 8.3.6. Результат поиска по реестру КИЗ записей, ожидающих
    /// вывода из оборота по чеку от контрольно-кассовой техники (ККТ).
    /// </summary>
    /// <typeparam name="T">Тип поля Entries</typeparam>
    [DataContract]
    public class EntriesResponse<T>
    {
        /// <summary>
        /// Список записей
        /// </summary>
        [DataMember(Name = "entries", IsRequired = true)]
        public T[] Entries { get; set; }

        /// <summary>
        /// Общее количество записей
        /// </summary>
        [DataMember(Name = "total", IsRequired = true)]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// Структура, которая содержит поля, встречающиеся в сообщениях об ошибках.
    /// </summary>
    [DataContract]
    public class ErrorResponse
    {
        // Sometimes error response has this structure: { timestamp, status, error, message, path }

        /// <summary>
        /// Время ошибки
        /// </summary>
        [DataMember(Name = "timestamp")] // "2020-04-13T12:51:22.873+0000",
        public DateTime TimeStamp { get; set; }

        /// <summary>
        /// HTTP-статус ошибки, числовой код
        /// </summary>
        [DataMember(Name = "status")] // 404,
        public int StatusCode { get; set; }

        /// <summary>
        /// HTTP-статус ошибки, текстовое представление
        /// </summary>
        [DataMember(Name = "error")] // "Not Found",
        public string Error { get; set; }

        /// <summary>
        /// Сообщение об ошибке, текстовое представление
        /// </summary>
        [DataMember(Name = "message")] // "Not Found",
        public string Message{ get; set; }

        /// <summary>
        /// Запрошенный путь
        /// </summary>
        [DataMember(Name = "path")] // "/api/v1/reestr/shtuchek/dryuchek"
        public string Path { get; set; }

        // And sometimes it's like { error_description: "hey" }

        /// <summary>
        /// Сообщение об ошибке, текстовое представление
        /// </summary>
        [DataMember(Name = "error_description")] // "Ошибка такая-то с подробностями",
        public string Description { get; set; }

        // And sometimes it's like { success: false, violations: ["one", "two", "three"] }

        [DataMember(Name = "success")]
        public bool Success { get; set; }

        [DataMember(Name = "violations")]
        public string[] Violations { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.10.1. Фильтрация по реестру ЕСКЛП (Единый справочник-каталог лекарственных препаратов)
    /// Структура данных EsklpFilter, немного похоже на <see cref="MedProductsFilter"/>.
    /// </summary>
    [DataContract]
    public class EsklpFilter
    {
        /// <summary>
        /// Дата гос. регистрации, начальная дата
        /// </summary>
        [DataMember(Name = "REG_DATE", IsRequired = false)]
        public CustomDateTime RegistrationDateFrom { get; set; }

        /// <summary>
        /// Дата гос. регистрации, конечная дата
        /// </summary>
        [DataMember(Name = "REG_END_DATE", IsRequired = false)]
        public CustomDateTime RegistrationDateTo { get; set; }

        /// <summary>
        /// Номер регистрационного удостоверения
        /// </summary>
        /// <remarks>
        /// Частичное вхождение, без учета регистра
        /// </remarks>
        [DataMember(Name = "reg_id", IsRequired = false)]
        public string RegistrationID { get; set; }

        /// <summary>
        /// Наименование держателя регистрационного удостоверения
        /// </summary>
        /// <remarks>
        /// Частичное вхождение, без учета регистра
        /// </remarks>
        [DataMember(Name = "REG_HOLDER", IsRequired = false)]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Код налогоплательщика держателя держателя регистрационного удостоверения для резидентов РФ
        /// </summary>
        /// <remarks>
        /// Частичное вхождение, без учета регистра
        /// </remarks>
        [DataMember(Name = "REG_HOLDER_CODE", IsRequired = false)]
        public string RegistrationHolderCode { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        /// <remarks>
        /// Частичное вхождение, без учета регистра
        /// </remarks>
        [DataMember(Name = "PROD_SELL_NAME", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        /// <remarks>
        /// Частичное вхождение, без учета регистра
        /// </remarks>
        [DataMember(Name = "PROD_NAME", IsRequired = false)]
        public string ProductName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.10.1. Фильтрация по реестру ЕСКЛП (Единый справочник-каталог лекарственных препаратов)
    /// Структура данных EsklpInfo, много пересечений с <see cref="MedProduct"/> и <see cref="GtinInfo"/>.
    /// </summary>
    [DataContract]
    public class EsklpInfo
    {
        /// <summary>
        /// Уникальный идентификатор
        /// </summary>
        [DataMember(Name = "id", IsRequired = true)]
        public string ID { get; set; }

        /// <summary>
        /// Номер регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_id", IsRequired = true)]
        public string RegistrationID { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "PROD_NAME", IsRequired = true)]
        public string ProductName { get; set; }

        /// <summary>
        /// Какой-то код продукта?
        /// Например: "1379"
        /// </summary>
        /// <remarks>
        /// Ошибка в документации. Там сказано, что это международное непатентованное наименование
        /// </remarks>
        [DataMember(Name = "PROD_ID", IsRequired = true)]
        public string ProductID { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "PROD_SELL_NAME", IsRequired = true)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Страна регистрации держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "REG_COUNTRY", IsRequired = true)]
        public string RegistrationCountry { get; set; }

        /// <summary>
        /// Дата гос. регистрации
        /// </summary>
        [DataMember(Name = "REG_DATE", IsRequired = true)]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Наименование держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "REG_HOLDER", IsRequired = true)]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Код налогоплательщика держателя держателя 
        /// регистрационного удостоверения для резидентов РФ
        /// </summary>
        [DataMember(Name = "REG_HOLDER_CODE", IsRequired = false)]
        public string RegistrationHolderCode { get; set; }

        /// <summary>
        /// Код налогоплательщика держателя держателя 
        /// регистрационного удостоверения в стране регистрации или его аналог
        /// </summary>
        [DataMember(Name = "REG_HOLDER_CODE_F", IsRequired = false)]
        public string RegistrationHolderForeignCode { get; set; }

        /// <summary>
        /// Наименование производителя стадии выпускающего контроля
        /// </summary>
        [DataMember(Name = "PROD_PACK_1", IsRequired = true)]
        public string ProductPack1ProducerName { get; set; }

        /// <summary>
        /// Первичная упаковка
        /// </summary>
        [DataMember(Name = "PROD_PACK_1_ID", IsRequired = true)]
        public string ProductPack1ID { get; set; }

        /// <summary>
        /// Первичная упаковка (строковое представление)
        /// </summary>
        [DataMember(Name = "PROD_PACK_1_NAME", IsRequired = true)]
        public string ProductPack1Name { get; set; }

        /// <summary>
        /// Масса/объем в первичной упаковке
        /// </summary>
        [DataMember(Name = "PROD_PACK_1_SIZE")]
        public string ProductPack1Size { get; set; }

        /// <summary>
        /// Количество массы/объема в первичной упаковке
        /// </summary>
        [DataMember(Name = "PROD_PACK_1_ED")]
        public string ProductPack1Amount { get; set; }

        /// <summary>
        /// Количество (мера, ед.измерения) массы/объема в первичной упаковке (строковое представление)
        /// </summary>
        [DataMember(Name = "PROD_PACK_1_ED_NAME")]
        public string ProductPack1AmountName { get; set; }

        /// <summary>
        /// Вторичная (потребительская) упаковка
        /// </summary>
        [DataMember(Name = "PROD_PACK_2_ID", IsRequired = true)]
        public string ProductPack2ID { get; set; }

        /// <summary>
        /// Вторичная (потребительская) упаковка (строковое представление)
        /// </summary>
        [DataMember(Name = "PROD_PACK_2_NAME", IsRequired = true)]
        public string ProductPack2Name { get; set; }

        /// <summary>
        /// Количество первичной упаковки в потребительской упаковке
        /// </summary>
        [DataMember(Name = "PROD_PACK_1_2")]
        public string ProductPack1InPack2 { get; set; }

        /// <summary>
        /// Код лекарственной формы
        /// </summary>
        [DataMember(Name = "PROD_D", IsRequired = false)]
        public string ProductFormID { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "PROD_D_NAME", IsRequired = false)]
        public string ProductDosageName { get; set; }

        /// <summary>
        /// Лекарственная форма (строковое представление)
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "PROD_FORM_NAME")]
        public string ProductFormName { get; set; }

        /// <summary>
        /// Код ТНВЭД ЕАЭС
        /// </summary>
        [DataMember(Name = "TN_VED")]
        public string Tnved { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "GNVLP")]
        public bool Gnvlp { get; set; }

        /// <summary>
        /// Предельная зарегистрированная цена (для ЖНВЛП) (руб)
        /// </summary>
        [DataMember(Name = "MAX_GNVLP", IsRequired = false)]
        public string MaxGnvlpPrice { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "DRUG_CODE", IsRequired = false)]
        public string DrugCode { get; set; }

        /// <summary>
        /// Версия внутреннего уникального идентификатора лекарственного препарата в реестре ЕСКЛП
        /// 1 — устаревшие,
        /// 2 — актуальные данные
        /// </summary>
        [DataMember(Name = "DRUG_CODE_VERSION", IsRequired = false)]
        public int? DrugCodeVersion { get; set; }

        /// <summary>
        /// Комплектность
        /// </summary>
        [DataMember(Name = "COMPLETENESS", IsRequired = false)]
        public string Сompleteness { get; set; }

        /// <summary>
        /// Производитель готовой ЛФ
        /// </summary>
        [DataMember(Name = "GLF_NAME", IsRequired = false)]
        public string FormProducerName { get; set; }

        /// <summary>
        /// Страна регистрации производителя готовой ЛФ
        /// </summary>
        [DataMember(Name = "GLF_COUNTRY", IsRequired = false)]
        public string FormProducerCountry { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.5.1. Получение объекта ФИАС по идентификатору адресного объекта
    /// Формат объекта FiasAddressObject
    /// </summary>
    [DataContract]
    public class FiasAddressObject
    {
        [DataMember(Name = "REGIONCODE")]
        public string RegionCode { get; set; } // "01"

        [DataMember(Name = "IFNSUL")]
        public string IfnsUl { get; set; } // "0101",

        [DataMember(Name = "IFNSFL")]
        public string IfnsFl { get; set; } // "0101",

        [DataMember(Name = "CURRSTATUS")]
        public string CurrStatus { get; set; } // "0",

        [DataMember(Name = "CENTSTATUS")]
        public string CentStatus { get; set; } // "0",

        [DataMember(Name = "OFFNAME")]
        public string OffName { get; set; } // "Широкая",

        [DataMember(Name = "SHORTNAME")]
        public string ShortName { get; set; } // "ул",

        [DataMember(Name = "_id")]
        public string ID { get; set; } // "52ae9761-4b20-4334-9163-949a39485914",

        [DataMember(Name = "AOLEVEL")]
        public string AoLevel { get; set; } // "7",

        [DataMember(Name = "AOGUID")]
        public string AoGuid { get; set; } // "353b7aed-0f1b-4f44-8ce3-245083e17526",

        [DataMember(Name = "AOID")]
        public string AoID { get; set; } // null

        [DataMember(Name = "EXTRCODE")]
        public string ExtrCode { get; set; } // "0000",

        [DataMember(Name = "AREACODE")]
        public string AreaCode { get; set; } // "003",

        [DataMember(Name = "PLACECODE")]
        public string PlaceCode { get; set; } // "024",

        [DataMember(Name = "POSTALCODE")]
        public string PostalCode { get; set; } // "385336",

        [DataMember(Name = "CITYCODE")]
        public string CityCode { get; set; } // "000",

        [DataMember(Name = "AUTOCODE")]
        public string AutoCode { get; set; } // "0",

        [DataMember(Name = "OKATO")]
        public string Okato { get; set; } // "79218000024",

        [DataMember(Name = "OKTMO")]
        public string Oktmo { get; set; } // "79618420111",

        [DataMember(Name = "PREVID")]
        public string PrevID { get; set; } // "9890d854-0056-49cf-a1f2-4410e464ba9e",

        [DataMember(Name = "NEXTID")]
        public string NextID { get; set; } // null,

        [DataMember(Name = "PARENTGUID")]
        public string ParentGuid { get; set; } // "03614edb-f287-4b59-a3b3-056e160d1035",

        [DataMember(Name = "STARTDATE")]
        public DateTime StartDate { get; set; } // "2015-02-02",

        [DataMember(Name = "ENDDATE")]
        public DateTime EndDate { get; set; } // "2079-06-06",

        [DataMember(Name = "UPDATEDATE")]
        public DateTime UpdateDate { get; set; } // "2015-02-03",

        [DataMember(Name = "OPERSTATUS")]
        public string OperStatus { get; set; } // "21",

        [DataMember(Name = "ACTSTATUS")]
        public string ActStatus { get; set; } // "1",

        [DataMember(Name = "LIVESTATUS")]
        public string LiveStatus { get; set; } // "1",

        [DataMember(Name = "SEXTCODE")]
        public string SextCode { get; set; } // "000",

        [DataMember(Name = "CTARCODE")]
        public string CtarCode { get; set; } // "000",

        [DataMember(Name = "PLANCODE")]
        public string PlanCode { get; set; } // "0000",

        [DataMember(Name = "PLAINCODE")]
        public string PlainCode { get; set; } // "010030000240001",

        [DataMember(Name = "STREETCODE")]
        public string StreetCode { get; set; } // "0001",

        [DataMember(Name = "CODE")]
        public string StreeCode { get; set; } // "01003000024000100",

        [DataMember(Name = "FORMALNAME")]
        public string FormalName { get; set; } // "Широкая",
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.5.2. Получение объекта ФИАС по идентификатору дома
    /// Формат объекта FiasHouseObject
    /// </summary>
    [DataContract]
    public class FiasHouseObject
    {
        [DataMember(Name = "IFNSUL", IsRequired = true)]
        public string IfnsUl { get; set; } // "6225",

        [DataMember(Name = "IFNSFL", IsRequired = true)]
        public string IfnsFl { get; set; } // "6225",

        [DataMember(Name = "TERRIFNSFL", IsRequired = true)]
        public string TerrIfnsFl { get; set; } // "6212",

        [DataMember(Name = "TERRIFNSUL", IsRequired = true)]
        public string TerrIfnsUl { get; set; } // "6212",

        [DataMember(Name = "STATSTATUS", IsRequired = true)]
        public string StatStatus { get; set; } // "0",

        [DataMember(Name = "ESTSTATUS", IsRequired = true)]
        public string EstStatus { get; set; } // "2",

        [DataMember(Name = "STRSTATUS", IsRequired = true)]
        public string StrStatus { get; set; } // "0",

        [DataMember(Name = "STARTDATE", IsRequired = false)]
        public DateTime StartDate { get; set; } // "1900-01-01",

        [DataMember(Name = "ENDDATE", IsRequired = false)]
        public DateTime EndDate { get; set; } // "2014-01-04",

        [DataMember(Name = "UPDATEDATE", IsRequired = false)]
        public DateTime UpdateDate { get; set; } // "2012-03-15"",

        [DataMember(Name = "OKATO", IsRequired = true)]
        public string Okato { get; set; } // "61226824016",

        [DataMember(Name = "OKTMO", IsRequired = true)]
        public string Oktmo { get; set; } // "61626424116",

        [DataMember(Name = "_id", IsRequired = true)]
        public string ID { get; set; } // "ba1c2f28-a455-47e2-95e5-000003a0023d",

        [DataMember(Name = "COUNTER", IsRequired = true)]
        public string Counter { get; set; } // "2",

        [DataMember(Name = "AOGUID", IsRequired = true)]
        public string AoGuid { get; set; } // "fce962f2-dff8-4eea-8413-5c94e0e69dec",

        [DataMember(Name = "DIVTYPE", IsRequired = false)]
        public string DivType { get; set; } // "0",

        [DataMember(Name = "POSTALCODE", IsRequired = true)]
        public string PostalCode { get; set; } // "391483",

        [DataMember(Name = "HOUSEGUID", IsRequired = true)]
        public string HouseGuid { get; set; } // "ba1c2f28-a455-47e2-95e5-000003a0023d",

        [DataMember(Name = "HOUSENUM", IsRequired = false)]
        public string HouseNum { get; set; } // "2",

        [DataMember(Name = "HOUSEID", IsRequired = false)]
        public string HouseID { get; set; } // null
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.29. Формат объекта ForeignAddress
    /// Таблица 25. Формат объекта ForeignAddress
    /// 8.6.1. Метод для регистрации иностранного контрагента
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// </summary>
    [DataContract]
    public class ForeignAddress
    {
        /// <summary>
        /// Город
        /// </summary>
        [DataMember(Name = "city")]
        public string City { get; set; }

        /// <summary>
        /// Код страны
        /// </summary>
        [DataMember(Name = "country_code")]
        public string CountryCode { get; set; }

        /// <summary>
        /// Почтовый индекс
        /// </summary>
        [DataMember(Name = "postal_code")]
        public string PostalCode { get; set; }

        /// <summary>
        /// Регион
        /// </summary>
        [DataMember(Name = "region")]
        public string Region { get; set; }

        /// <summary>
        /// Населённый пункт
        /// </summary>
        [DataMember(Name = "locality")]
        public string Locality { get; set; }

        /// <summary>
        /// Улица
        /// </summary>
        [DataMember(Name = "street")]
        public string Street { get; set; }

        /// <summary>
        /// Дом
        /// </summary>
        [DataMember(Name = "house")]
        public string House { get; set; }

        /// <summary>
        /// Корпус
        /// </summary>
        [DataMember(Name = "corpus")]
        public string Corpus { get; set; }

        /// <summary>
        /// Литера
        /// </summary>
        [DataMember(Name = "litera")]
        public string Litera { get; set; }

        /// <summary>
        /// № помещения (квартиры)        /// </summary>
        [DataMember(Name = "room")]
        public string Room { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта ForeignCounterparty
    /// </summary>
    /// <remarks>
    /// Похож на <see cref="ForeignCounterpartyEntry"/>, но увы, не идентичен.
    /// </remarks>
    [DataContract]
    public class ForeignCounterparty
    {
        /// <summary>
        /// Уникальный идентификатор
        /// </summary>
        [DataMember(Name = "id")]
        public string ID { get; set; }

        /// <summary>
        /// Идентификатор контрагента как субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "system_subj_id")]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// ITIN организации контрагента
        /// </summary>
        [DataMember(Name = "counterparty_itin")]
        public string Itin { get; set; }

        /// <summary>
        /// Наименование субъекта обращения
        /// </summary>
        [DataMember(Name = "counterparty_name")]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Адрес субъекта обращения
        /// </summary>
        [DataMember(Name = "counterparty_address")]
        public ForeignAddress Address { get; set; }

        /// <summary>
        /// Дата регистрации
        /// </summary>
        [DataMember(Name = "op_date")]
        public OperationDate OperationDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.6.2. Метод для просмотра заявок на регистрацию иностранных контрагентов
    /// Формат объекта ForeignCounterpartyEntry
    /// </summary>
    [DataContract]
    public class ForeignCounterpartyEntry
    {
        /// <summary>
        /// Код страны
        /// </summary>
        [DataMember(Name = "country_code")]
        public string CountryCode { get; set; }

        /// <summary>
        /// Идентификатор контрагента как субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "system_subj_id", IsRequired = false)]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// Время подачи заявки
        /// </summary>
        [DataMember(Name = "op_date")]
        public DateTime OperationDate { get; set; }

        /// <summary>
        /// Описание результата операции
        /// </summary>
        [DataMember(Name = "detailed_code", IsRequired = false)]
        public int? DetailedCode { get; set; }

        /// <summary>
        /// Результат операции
        /// </summary>
        [DataMember(Name = "code")]
        public int Code { get; set; }

        /// <summary>
        /// ИНН/ITIN организации контрагента
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// Название организации
        /// </summary>
        [DataMember(Name = "org_name")]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Время выполнения заявки
        /// </summary>
        [DataMember(Name = "op_exec_date")]
        public DateTime? OperationExecutionDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.6.2. Метод для просмотра заявок на регистрацию иностранных контрагентов
    /// Структура данных ForeignCounterpartyFilter
    /// </summary>
    [DataContract]
    public class ForeignCounterpartyFilter
    {
        /// <summary>
        /// Дата регистрации, начало периода
        /// </summary>
        [DataMember(Name = "reg_date_from", IsRequired = false)]
        public DateTime? RegistrationDateFrom { get; set; }

        /// <summary>
        /// Дата регистрации, окончание периода
        /// </summary>
        [DataMember(Name = "reg_date_to", IsRequired = false)]
        public DateTime? RegistrationDateTo { get; set; }

        /// <summary>
        /// ИНН/ITIN
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// Название организации
        /// </summary>
        [DataMember(Name = "org_name", IsRequired = false)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Страна регистрации
        /// </summary>
        [DataMember(Name = "country_code", IsRequired = false)]
        public string CountryCode { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.1.11. Метод для получения информации об УС
    /// </summary>
    [DataContract]
    internal class GetAccountSystemResponse
    {
        /// <summary>
        /// Учетная система
        /// </summary>
        [DataMember(Name = "account_system", IsRequired = true)]
        public AccountSystem AccountSystem { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.1.3. Получение информации о конкретном месте осуществления деятельности
    /// </summary>
    [DataContract]
    public class GetBranchResponse
    {
        /// <summary>
        /// Уникальный идентификатор места осуществления деятельности
        /// </summary>
        [DataMember(Name = "branch_id", IsRequired = false)]
        public string BranchID { get; set; }

        /// <summary>
        /// Адрес места осуществления деятельности
        /// </summary>
        [DataMember(Name = "address", IsRequired = false)]
        public Address Address { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 5.10. Получение документа по идентификатору
    /// </summary>
    [DataContract]
    public class GetDocumentResponse
    {
        [DataMember(Name = "link")]
        public string Link { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.6.4. Метод для получения информации о группе прав пользователей
    /// </summary>
    [DataContract]
    internal class GetGroupResponse
    {
        /// <summary>
        /// Объект типа <see cref="Group"/>
        /// </summary>
        [DataMember(Name = "group", IsRequired = true)]
        public Group Group { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.6.5. Метод для получения информации о пользователях группы
    /// </summary>
    [DataContract]
    internal class GetGroupUsersResponse
    {
        /// <summary>
        /// Объекты типа <see cref="User"/>
        /// </summary>
        [DataMember(Name = "users", IsRequired = true)]
        public User[] Users { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 5.5. Получение информации об ограничении размера небольших документов
    /// </summary>
    [DataContract]
    internal class GetLargeDocumentSizeResponse
    {
        [DataMember(Name = "doc_size")]
        public int DocSize { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.6.1. Метод для получения информации о существующих правах
    /// </summary>
    [DataContract]
    internal class GetRightsResponse<T>
    {
        /// <summary>
        /// Права и описание
        /// </summary>
        [DataMember(Name = "rights", IsRequired = true)]
        public T[] Rights { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.5. Подробности о КИЗ (SGTIN) и ЛП (GTIN)
    /// </summary>
    [DataContract]
    public class GetSgtinResponse
    {
        [DataMember(Name = "sgtin_info")]
        public SgtinExtended SgtinInfo { get; set; }

        [DataMember(Name = "gtin_info")]
        public GtinInfo GtinInfo { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.2. Список КИЗ, вложенных в третичную упаковку
    /// </summary>
    [DataContract]
    public class GetSsccSgtinsResponse : EntriesResponse<Sgtin>
    {
        /// <summary>
        /// Код ошибки: 2 — не найден, 4 — доступ запрещен
        /// </summary>
        /// <remarks>
        /// Присутствует только при ошибке
        /// 2 — Запрашиваемые данные не найдены
        /// 4 — Запрашиваемые данные доступны только текущему владельцу или контрагенту по операции
        /// </remarks>
        [DataMember(Name = "error_code", IsRequired = false)]
        public int? ErrorCode { get; set; }

        /// <summary>
        /// Текстовое описание ошибки
        /// </summary>
        /// <remarks>
        /// Присутствует только при ошибке
        /// </remarks>
        [DataMember(Name = "error_desc", IsRequired = false)]
        public string ErrorDescription { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.1.4. Метод для получения информации о пользователе
    /// </summary>
    [DataContract]
    internal class GetUserResponse
    {
        /// <summary>
        /// Свойства пользователя
        /// </summary>
        [DataMember(Name = "user", IsRequired = true)]
        public GroupedUser User { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.1.3. Получение информации о конкретном месте ответственного хранения
    /// </summary>
    [DataContract]
    public class GetWarehouseResponse
    {
        /// <summary>
        /// Уникальный идентификатор места ответственного хранения
        /// </summary>
        [DataMember(Name = "warehouse_id", IsRequired = false)]
        public string WarehouseID { get; set; }

        /// <summary>
        /// Адрес места ответственного хранения
        /// </summary>
        [DataMember(Name = "address", IsRequired = false)]
        public Address Address { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.21. Формат объекта Group
    /// Таблица 17. Формат объекта Group    /// 6.6.4. Метод для получения информации о группе прав пользователей
    /// </summary>
    [DataContract]
    public class Group
    {
        /// <summary>
        /// Уникальный идентификатор группы прав пользователей
        /// </summary>
        [DataMember(Name = "group_id")]
        public string GroupID { get; set; }

        /// <summary>
        /// Название группы прав пользователей
        /// </summary>
        [DataMember(Name = "group_name")]
        public string GroupName { get; set; }

        /// <summary>
        /// Список прав, см. <see cref="RightsEnum"/>
        /// </summary>
        [DataMember(Name = "rights")]
        public string[] Rights { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.24. Формат объекта GroupedUser
    /// Таблица 20. Формат объекта GroupedUser
    /// 6.1.4. Метод для получения информации о пользователе
    /// </summary>
    [DataContract]
    public class GroupedUser : UserBase
    {
        /// <summary>
        /// Уникальный идентификатор пользователя
        /// </summary>
        [DataMember(Name = "user_id", IsRequired = true)]
        public string UserID { get; set; }

        /// <summary>
        /// Группы прав, в которых состоит пользователь (строковые имена, а не коды)
        /// </summary>
        [DataMember(Name = "groups", IsRequired = true)]
        public string[] GroupNames { get; set; }

        /// <summary>
        /// Признак администратора участника
        /// </summary>
        [DataMember(Name = "is_admin", IsRequired = true)]
        public bool IsAdmin { get; set; }

        /// <summary>
        /// Логин пользователя
        /// </summary>
        /// <remarks>
        /// Поле не описано в документации.
        /// </remarks>
        [DataMember(Name = "login", IsRequired = false)]
        public string Login { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.6.11. Метод для поиска списка групп прав пользователей по фильтру
    /// </summary>
    [DataContract]
    public class GroupFilter
    {
        /// <summary>
        /// Название группы прав пользователей
        /// </summary>
        [DataMember(Name = "group_name", IsRequired = false)]
        public string GroupName { get; set; }

        /// <summary>
        /// Уникальный идентификатор пользователя
        /// </summary>
        [DataMember(Name = "user_id", IsRequired = false)]
        public string UserID { get; set; }

        /// <summary>
        /// Список прав пользователей, см. <see cref="RightsEnum"/>
        /// </summary>
        [DataMember(Name = "rights", IsRequired = false)]
        public string[] Rights { get; set; }

        /// <summary>
        /// Тип группы прав
        /// </summary>
        [DataMember(Name = "type", IsRequired = false)]
        public int Type { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список записей:
    /// 6.6.11. Метод для поиска списка групп прав пользователей по фильтру
    /// </summary>
    /// <typeparam name="T">Тип поля Groups</typeparam>
    [DataContract]
    public class GroupsResponse<T>
    {
        /// <summary>
        /// Список элементов
        /// </summary>
        [DataMember(Name = "groups", IsRequired = true)]
        public T[] Groups { get; set; }

        /// <summary>
        /// Общее число элементов
        /// </summary>
        [DataMember(Name = "total", IsRequired = true)]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.13. Список типов групп прав (GroupTypeEnum)
    /// Таблица 9. Список типов групп прав
    /// </summary>
    public class GroupTypeEnum
    {
        /// <summary>
        /// Пользовательская группа прав.
        /// Создаётся пользователем. Только над группами прав 
        /// с этим типом разрешены операции модификации 
        /// (удаление, редактирование, добавление/удаление
        /// пользователей).
        /// </summary>
        public const int USER_GROUP = 0;

        /// <summary>
        /// Системная группа прав.
        /// Создается автоматически при регистрации участника.
        /// В нее входят пользователи, состоящие в реестрах
        /// ЕГРИП/ЕГРЮЛ/РАФП(администраторы).
        /// </summary>
        public const int SYS_GROUP = 1;

        /// <summary>
        /// Группа прав "Производитель".
        /// Создается автоматически у представительства,
        /// иностранного участника или участника при наличии
        /// производственной лицензии.Позволяет работать с
        /// заявлениями и анкетами на устройства регистрации
        /// эмиссии, а также с реестрами биллинга.
        /// </summary>
        public const int PROD_GROUP = 2;

        /// <summary>
        /// Группа прав "Медицинская деятельность".
        /// Создается автоматически у участника при наличии
        /// медицинской лицензии.Позволяет работать с
        /// заявлениями и анкетами на устройства регистрации
        /// выбытия.        /// </summary>
        public const int MED_GROUP = 3;

        /// <summary>
        /// Группа прав "Заказчик КМ".
        /// Создается по заявке. Позволяет работать с
        /// заявлениям на коды маркировки.        /// </summary>
        public const int LABEL_GROUP = 4;

        /// <summary>
        /// Группа прав "Фармацевтическая организация".
        /// Создается автоматически у участника при наличии
        /// фармацевтической лицензии.Позволяет работать с
        /// заявлениями и анкетами на устройства регистрации
        /// выбытия.        /// </summary>
        public const int PHARM_GROUP = 5;

        /// <summary>
        /// Группа прав "Держатель регистрационного удостоверения".
        /// Создается по заявке. Позволяет работать с
        /// заявлениями и анкетами на устройства регистрации
        /// эмиссии, а также с реестрами биллинга.
        /// </summary>
        public const int REG_GROUP = 6;
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.5. Подробности о ЛП (GTIN)
    /// </summary>
    [DataContract]
    public class GtinInfo
    {
        /// <summary>
        /// Уникальный идентификатор
        /// </summary>
        [DataMember(Name = "id")]
        public string ID { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// Номер рег. удостоверения
        /// </summary>
        [DataMember(Name = "reg_number")]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Дата гос. регистрации
        /// </summary>
        [DataMember(Name = "reg_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Дата окончания рег. удостоверения
        /// </summary>
        [DataMember(Name = "reg_end_date", IsRequired = false)]
        public DateTime? RegistrationEndDate { get; set; }

        /// <summary>
        /// Лекарственная форма
        /// </summary>
        [DataMember(Name = "type_form")]
        public string TypeForm { get; set; }

        /// <summary>
        /// Количество массы/объема в первичной упаковке
        /// </summary>
        [DataMember(Name = "prod_pack_1_ed")]
        public string ProductPack1Amount { get; set; }

        /// <summary>
        /// Количество (мера, ед.измерения) массы/объема в первичной упаковке (строковое представление)
        /// </summary>
        [DataMember(Name = "prod_pack1_ed_name")]
        public string ProductPack1AmountName { get; set; }

        /// <summary>
        /// Адрес упаковщика
        /// </summary>
        [DataMember(Name = "packer_address")]
        public string PackerAddress { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование.
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "prod_sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Содержимое лекарственного препарата
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_content", IsRequired = false)]
        public string ProductContent { get; set; }

        /// <summary>
        /// Наименование товара на этикетке
        /// Например: лиофилизат для приготовления концентрата для приготовления раствора для инфузий "гертикад®" 150 мг, 440 мг
        /// </summary>
        [DataMember(Name = "prod_desc", IsRequired = false)]
        public string ProductDescription { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_name")]
        public string ProductDosageName { get; set; }

        /// <summary>
        /// Первичная упаковка (строковое представление)
        /// </summary>
        [DataMember(Name = "prod_pack_1_name")]
        public string ProductPack1Name { get; set; }

        /// <summary>
        /// Вторичная (потребительская) упаковка (строковое представление)
        /// </summary>
        [DataMember(Name = "prod_pack_2_name")]
        public string ProductPack2Name { get; set; }

        /// <summary>
        /// Количество первичной упаковки в потребительской упаковке
        /// </summary>
        [DataMember(Name = "prod_pack_1_2")]
        public string ProductPack1InPack2 { get; set; }

        /// <summary>
        /// Код ТНВЭД ЕАЭС
        /// </summary>
        [DataMember(Name = "tn_ved")]
        public string Tnved { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp")]
        public bool Gnvlp { get; set; }

        /// <summary>
        /// Предельная зарегистрированная цена (для ЖНВЛП) (руб)
        /// </summary>
        [DataMember(Name = "max_gnvlp", IsRequired = false)]
        public string MaxGnvlpPrice { get; set; }

        /// <summary>
        /// Дата регистрации предельной цены
        /// </summary>
        [DataMember(Name = "max_gnvlp_reg_date", IsRequired = false)]
        public DateTime? MaxGnvlpPriceRegistrationDate { get; set; }

        /// <summary>
        /// Наименование держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_holder")]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Страна регистрации держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_country")]
        public string RegistrationHolderCountry { get; set; }

        /// <summary>
        /// Статус лекарственного препарата
        /// </summary>
        [DataMember(Name = "prod_status")]
        public string ProductStatus { get; set; }

        /// <summary>
        /// Признак регистрации в Минздраве
        /// </summary>
        [DataMember(Name = "min_zdrav")]
        public bool MinZdrav { get; set; }

        /// <summary>
        /// Признак регистрации в ГС1
        /// </summary>
        [DataMember(Name = "gs1")]
        public bool Gs1 { get; set; }

        /// <summary>
        /// Предельная зарегистрированная цена
        /// </summary>
        [DataMember(Name = "cost_limit", IsRequired = false)]
        public string CostLimit { get; set; }

        /// <summary>
        /// ИНН держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_inn")]
        public string RegistrationHolderInn { get; set; }

        /// <summary>
        /// Комплектность
        /// </summary>
        [DataMember(Name = "completeness", IsRequired = false)]
        public string Сompleteness { get; set; }

        /// <summary>
        /// Лекарственная форма
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_name", IsRequired = false)]
        public string ProductFormName { get; set; }

        /// <summary>
        /// Производитель готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_name", IsRequired = false)]
        public string FormProducerName { get; set; }

        /// <summary>
        /// Страна регистрации производителя готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_country", IsRequired = false)]
        public string FormProducerCountry { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "drug_code", IsRequired = false)]
        public string DrugCode { get; set; }

        /// <summary>
        /// Версия внутреннего уникального идентификатора лекарственного препарата в реестре ЕСКЛП
        /// 1 — устаревшие, 2 — актуальные данные
        /// </summary>
        [DataMember(Name = "drug_code_version", IsRequired = false)]
        public int? DrugCodeVersion { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.3. Информация о приостановке оборота ЛП
    /// </summary>
    [DataContract]
    public class HierarchyPausedCirculationDecision
    {
        /// <summary>
        /// Идентификатор решения
        /// </summary>
        [DataMember(Name = "id", IsRequired = true)]
        public string HaltID { get; set; }

        /// <summary>
        /// Номер решения
        /// </summary>
        [DataMember(Name = "number", IsRequired = true)]
        public string HaltDocNumber { get; set; }

        /// <summary>
        /// Дата решения
        /// </summary>
        [DataMember(Name = "date", IsRequired = true)]
        public DateTime HaltDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.3. Информация о полной иерархии вложенности третичной упаковки
    /// </summary>
    [DataContract]
    public class HierarchySgtinInfo
    {
        /// <summary>
        /// Идентификационный код SGTIN
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string Sgtin { get; set; }

        /// <summary>
        /// Идентификационный код третичной упаковки
        /// </summary>
        [DataMember(Name = "sscc")]
        public string Sscc { get; set; }

        /// <summary>
        /// Идентификационный код товара в GS1
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// Статус SGTIN
        /// </summary>
        [DataMember(Name = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "series_number")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Срок годности препарата
        /// </summary>
        [DataMember(Name = "expiration_date", IsRequired = false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Решение о приостановке оборота, если есть
        /// </summary>
        [DataMember(Name = "pause_decision_info", IsRequired = false)]
        public HierarchyPausedCirculationDecision PausedDecision { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.3. Информация о полной иерархии вложенности третичной упаковки
    /// </summary>
    [DataContract]
    public class HierarchySsccInfo
    {
        /// <summary>
        /// Идентификационный код третичной упаковки
        /// </summary>
        [DataMember(Name = "sscc")]
        public string Sscc { get; set; }

        /// <summary>
        /// Дата и время совершения операции упаковки
        /// </summary>
        [DataMember(Name = "packing_date")]
        public DateTime PackingDate { get; set; }

        /// <summary>
        /// Список вложенных упаковок
        /// </summary>
        [IgnoreDataMember]
        public HierarchySsccInfo[] ChildSsccs { get; set; }

        /// <summary>
        /// Список вложенных препаратов
        /// </summary>
        [IgnoreDataMember]
        public HierarchySgtinInfo[] ChildSgtins { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Linq;
    using System.Runtime.Serialization;
    using MdlpApiClient.Toolbox;

    /// <summary>
    /// 8.4.3. Информация о полной иерархии вложенности третичной упаковки
    /// </summary>
    /// <remarks>
    /// Вспомогательный класс для решения проблемы десериализации 
    /// разнородных элементов в массиве "childs"
    /// </remarks>
    [DataContract]
    internal class HierarchySsccInfoInternal : HierarchySsccInfo
    {
        /// <summary>
        /// Converts items to real <see cref="HierarchySsccInfo"/>.
        /// </summary>
        /// <param name="item">Item to convert</param>
        public static HierarchySsccInfo Convert(HierarchySsccInfoInternal item)
        {
            var children = item.Children.EmptyIfNull();
            var ssccs = children.Where(c => !c.IsSgtinInfo);
            var sgtins = children.Where(c => c.IsSgtinInfo);
            return new HierarchySsccInfo
            {
                Sscc = item.Sscc,
                ChildSsccs = ssccs.Select(s => Convert(s)).ToArray(),
                ChildSgtins = sgtins.Select(c => c.GetSgtinInfo()).ToArray(),
            };
        }

        /// <summary>
        /// Checks if the current instance represents <see cref="HierarchySgtinInfo"/>.
        /// </summary>
        [IgnoreDataMember]
        private bool IsSgtinInfo
        {
            get { return Sgtin != null; }
        }

        /// <summary>
        /// Converts to <see cref="HierarchySgtinInfo"/>.
        /// </summary>
        private HierarchySgtinInfo GetSgtinInfo()
        {
            return new HierarchySgtinInfo
            {
                Sgtin = Sgtin,
                Sscc = Sscc,
                Gtin = Gtin,
                Status = Status,
                BatchNumber = BatchNumber,
                ExpirationDate = ExpirationDate,
                PausedDecision = PausedDecision,
            };
        }

        /// <summary>
        /// Идентификационный код SGTIN
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string Sgtin { get; set; }

        /// <summary>
        /// Идентификационный код товара в GS1
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// Статус SGTIN
        /// </summary>
        [DataMember(Name = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "series_number")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Срок годности препарата
        /// </summary>
        [DataMember(Name = "expiration_date", IsRequired = false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Решение о приостановке оборота, если есть
        /// </summary>
        [DataMember(Name = "pause_decision_info", IsRequired = false)]
        public HierarchyPausedCirculationDecision PausedDecision { get; set; }

        /// <summary>
        /// Дочерние элементы, сваленные в кучу
        /// </summary>
        [DataMember(Name = "childs", IsRequired = false)]
        public HierarchySsccInfoInternal[] Children { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.19. Формат объекта IncomeDocument
    /// Таблица 13. Формат объекта IncomeDocument
    /// Объект IncomeDocument наследует все поля объекта Document и добавляет следующие:
    /// </summary>
    [DataContract]
    public class IncomeDocument : DocumentMetadata
    {
        /// <summary>
        /// Идентификатор отправителя документа в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sender_sys_id")]
        public string SenderSystemID { get; set; } // "e2cb20c1-1d5b-4ab6-b8dd-9297bec23f63" (optional)
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список элементов:
    /// 5.14. Документов по отчёту из СУЗ.
    /// </summary>
    /// <typeparam name="T">Тип поля Items</typeparam>
    [DataContract]
    public class ItemsResponse<T>
    {
        /// <summary>
        /// Список элементов
        /// </summary>
        [DataMember(Name = "items")]
        public T[] Items { get; set; }

        /// <summary>
        /// Общее число элементов
        /// </summary>
        [DataMember(Name = "total")]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.6. Метод для поиска по реестру КИЗ записей, ожидающих
    /// вывода из оборота по чеку от контрольно-кассовой техники (ККТ).
    /// Статус последней проверки.
    /// </summary>
    [DataContract]
    public class LastCheckStatus
    {
        /// <summary>
        /// Время последней проверки
        /// </summary>
        [DataMember(Name = "date")]
        public DateTime Date { get; set; }

        /// <summary>
        /// Список нарушений при попытке обработки чека
        /// 1 — нарушение лицензионных требований
        /// 2 — повторный вывод из оборота
        /// 3 — отсутствуют сведения о вводе в оборот
        /// 4 — не подлежит розничной реализации
        /// 5 — нарушение формата чека
        /// 6 — нарушение порядка предоставления сведений
        /// 7 — нарушение правовладения
        /// 8 — истек срок годности
        /// 9 — отсутствие информации о рецепте
        /// </summary>
        [DataMember(Name = "violation_reasons")]
        public int[] ViolationReasons { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.41. Формат объекта LicenseApiFilter
    /// Таблица 37. Формат объекта LicenseApiFilter
    /// 7.6.2. Метод фильтрации лицензий на производство
    /// </summary>
    [DataContract]
    public class LicenseApiFilter
    {
        /// <summary>
        /// Номер лицензии
        /// </summary>
        [DataMember(Name = "l_num", IsRequired = false)]
        public string LicenseNumber { get; set; }

        /// <summary>
        /// Статус лицензии
        /// </summary>
        [DataMember(Name = "l_status", IsRequired = false)]
        public string LicenseStatus { get; set; }

        /// <summary>
        /// Дата начала действия лицензии: начало периода фильтрации
        /// </summary>
        [DataMember(Name = "start_date_from", IsRequired = false)]
        public DateTime? StartDateFrom { get; set; }

        /// <summary>
        /// Дата начала действия лицензии: окончание периода фильтрации
        /// </summary>
        [DataMember(Name = "start_date_to", IsRequired = false)]
        public DateTime? StartDateTo { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.40. Формат объекта LicenseEntry
    /// Таблица 36. Формат объекта LicenseEntry
    /// 7.6.1. Получение информации о лицензиях на производство
    /// 7.6.2. Получение информации о лицензиях на производство по фильтру
    /// </summary>
    [DataContract]
    public class LicenseEntry
    {
        /// <summary>
        /// Идентификатор записи в реестре
        /// </summary>
        [DataMember(Name = "id", IsRequired = true)]
        public string ID { get; set; } // "59f6fa41762afe8ac12021c9",

        /// <summary>
        /// ИНН юридического лица
        /// </summary>
        [DataMember(Name = "inn", IsRequired = true)]
        public string Inn { get; set; } // "4025175206",

        /// <summary>
        /// Название организации, которой выдана лицензия
        /// </summary>
        [DataMember(Name = "org_name", IsRequired = true)]
        public string OrganizationName { get; set; } // "ООО \"Медицина\"",

        /// <summary>
        /// Номер лицензии
        /// </summary>
        [DataMember(Name = "l_num", IsRequired = true)]
        public string LicenseNumber { get; set; } // "00233-ЛС",

        /// <summary>
        /// Статус лицензии
        /// </summary>
        [DataMember(Name = "l_status", IsRequired = true)]
        public string LicenseStatus { get; set; } // "действует",

        /// <summary>
        /// Дата начала действия лицензии
        /// </summary>
        [DataMember(Name = "start_date", IsRequired = true)]
        public DateTime StartDate { get; set; } // "2016-09-13T00:00:00.000Z"

        /// <summary>
        /// Дата окончания действия лицензии
        /// </summary>
        [DataMember(Name = "end_date", IsRequired = false)]
        public DateTime? EndDate { get; set; } // "2016-09-13T00:00:00.000Z"

        /// <summary>
        /// Адрес действия лицензии
        /// </summary>
        [DataMember(Name = "address", IsRequired = true)]
        public AddressFias Address { get; set; } // aoguid, houseguid

        /// <summary>
        /// Перечень работ/услуг согласно лицензии
        /// </summary>
        [DataMember(Name = "work_list", IsRequired = true)]
        public string[] WorkList { get; set; } // ["производство и хранение ЛП"]

        /// <summary>
        /// Признак невалидности кода ФИАС
        /// </summary>
        [DataMember(Name = "invalid_fias_code")]
        public bool InvalidFiasCode { get; set; } // false

        /// <summary>
        /// Адрес СМЭВ (адрес в текстовом виде)
        /// </summary>
        [DataMember(Name = "objects", IsRequired = false)]
        public string AddressDescription { get; set; } // "г Москва, ул Щипок, д. 9/26 стр. 3"
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.5.1. Информация из реестра производимых организацией ЛП
    /// 8.5.2. Детальная информации о производимом организацией ЛП
    /// </summary>
    /// <remarks>
    /// Частично пересекается со структурой <see cref="GtinInfo"/>, но не совпадает с ней.
    /// </remarks>
    [DataContract]
    public class MedProduct
    {
        /// <summary>
        /// Уникальный идентификатор
        /// </summary>
        [DataMember(Name = "id", IsRequired = false)]
        public string ID { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// Номер рег. удостоверения
        /// </summary>
        [DataMember(Name = "reg_number")]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Дата гос. регистрации
        /// </summary>
        [DataMember(Name = "reg_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Дата окончания рег. удостоверения
        /// </summary>
        [DataMember(Name = "reg_end_date")]
        public DateTime RegistrationEndDate { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "prod_sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Лекарственная форма
        /// </summary>
        [DataMember(Name = "type_form")]
        public string TypeForm { get; set; }

        /// <summary>
        /// Первичная упаковка (строковое представление)
        /// </summary>
        [DataMember(Name = "prod_pack_1_name")]
        public string ProductPack1Name { get; set; }

        /// <summary>
        /// Количество массы/объема в первичной упаковке
        /// </summary>
        [DataMember(Name = "prod_pack_1_ed")]
        public string ProductPack1Amount { get; set; }

        /// <summary>
        /// Количество (мера, ед.измерения) массы/объема в первичной упаковке
        /// </summary>
        [DataMember(Name = "prod_pack1_ed_name")]
        public string ProductPack1AmountName { get; set; }

        /// <summary>
        /// Признак регистрации в Минздраве
        /// </summary>
        [DataMember(Name = "min_zdrav")]
        public bool MinZdrav { get; set; }

        /// <summary>
        /// Признак регистрации в ГС1
        /// </summary>
        [DataMember(Name = "gs1")]
        public bool Gs1 { get; set; }

        /// <summary>
        /// Предельная зарегистрированная цена
        /// </summary>
        [DataMember(Name = "cost_limit", IsRequired = false)]
        public string CostLimit { get; set; }

        /// <summary>
        /// ИНН держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_inn")]
        public string RegistrationHolderInn { get; set; }

        /// <summary>
        /// Лекарственная форма, стандартизованное значение.
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_name", IsRequired = false)]
        public string ProductFormName { get; set; }

        /// <summary>
        /// Производитель готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_name", IsRequired = false)]
        public string FormProducerName { get; set; }

        /// <summary>
        /// Страна регистрации производителя готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_country", IsRequired = false)]
        public string FormProducerCountry { get; set; }

        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug")]
        public bool VznDrug { get; set; }

        /// <summary>
        /// Наименование товара на этикетке
        /// Например: лиофилизат для приготовления концентрата для приготовления раствора для инфузий "гертикад®" 150 мг, 440 мг
        /// </summary>
        [DataMember(Name = "prod_desc", IsRequired = false)]
        public string ProductDescription { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp")]
        public bool Gnvlp { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "drug_code", IsRequired = false)]
        public string DrugCode { get; set; }

        /// <summary>
        /// Версия внутреннего уникального идентификатора лекарственного препарата в реестре ЕСКЛП
        /// 1 — устаревшие, 2 — актуальные данные
        /// </summary>
        [DataMember(Name = "drug_code_version", IsRequired = false)]
        public int? DrugCodeVersion { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата, стандартизованное значение (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_name")]
        public string ProductDosageName { get; set; }

        /// <summary>
        /// Наименование держателя регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_holder")]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование, стандартизованное значение.
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование, нормализованное значение.
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_norm_name", IsRequired = false)]
        public string ProductNormalizedName { get; set; }

        /// <summary>
        /// Лекарственная форма, нормализованное значение (строковое представление).
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_norm_name", IsRequired = false)]
        public string ProductFormNormalizedName { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата, нормализованное значение (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_norm_name")]
        public string ProductDosageNormalizedName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.5.3. Публичная информация о производимых ЛП
    /// 8.5.4. Публичная информация о производимом ЛП
    /// </summary>
    /// <remarks>
    /// Содержит подмножество полей структур <see cref="GtinInfo"/> и <see cref="MedProduct"/>.
    /// </remarks>
    [DataContract]
    public class MedProductPublic
    {
        /// <summary>
        /// Номер рег. удостоверения
        /// </summary>
        [DataMember(Name = "reg_number")]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Дата гос. регистрации
        /// </summary>
        [DataMember(Name = "reg_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "prod_sell_name")]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "drug_code")]
        public string DrugCode { get; set; }

        /// <summary>
        /// Версия внутреннего уникального идентификатора лекарственного препарата в реестре ЕСКЛП
        /// 1 — устаревшие, 2 — актуальные данные
        /// </summary>
        [DataMember(Name = "drug_code_version", IsRequired = false)]
        public int? DrugCodeVersion { get; set; }

        /// <summary>
        /// Лекарственная форма
        /// </summary>
        [DataMember(Name = "type_form")]
        public string TypeForm { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp")]
        public bool Gnvlp { get; set; }

        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug")]
        public bool VznDrug { get; set; }

        /// <summary>
        /// Наименование товара на этикетке
        /// Например: лиофилизат для приготовления концентрата для приготовления раствора для инфузий "гертикад®" 150 мг, 440 мг
        /// </summary>
        [DataMember(Name = "prod_desc", IsRequired = false)]
        public string ProductDescription { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата, стандартизованное значение (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_name")]
        public string ProductDosageName { get; set; }

        /// <summary>
        /// Предельная зарегистрированная цена
        /// </summary>
        [DataMember(Name = "cost_limit", IsRequired = false)]
        public string CostLimit { get; set; }

        /// <summary>
        /// Лекарственная форма, стандартизованное значение.
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_name")]
        public string ProductFormName { get; set; }

        /// <summary>
        /// Производитель готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_name", IsRequired = false)]
        public string FormProducerName { get; set; }

        /// <summary>
        /// Страна регистрации производителя готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_country", IsRequired = false)]
        public string FormProducerCountry { get; set; }

        /// <summary>
        /// Первичная упаковка (строковое представление)
        /// </summary>
        [DataMember(Name = "prod_pack_1_name")]
        public string ProductPack1Name { get; set; }

        /// <summary>
        /// Количество массы/объема в первичной упаковке
        /// </summary>
        [DataMember(Name = "prod_pack_1_ed")]
        public string ProductPack1Amount { get; set; }

        /// <summary>
        /// Количество (мера, ед.измерения) массы/объема в первичной упаковке
        /// </summary>
        [DataMember(Name = "prod_pack1_ed_name")]
        public string ProductPack1AmountName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование, стандартизованное значение.
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование, нормализованное значение.
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_norm_name", IsRequired = false)]
        public string ProductNormalizedName { get; set; }

        /// <summary>
        /// Лекарственная форма, нормализованное значение (строковое представление).
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_norm_name", IsRequired = false)]
        public string ProductFormNormalizedName { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата, нормализованное значение (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_norm_name")]
        public string ProductDosageNormalizedName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.42. Формат объекта MedProductsFilter
    /// Таблица 38. Формат объекта MedProductsFilter
    /// 8.5.1. Метод для получения информации из реестра производимых организацией ЛП
    /// </summary>
    [DataContract]
    public class MedProductsFilter
    {
        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// Дата гос. регистрации, начальная дата
        /// </summary>
        [DataMember(Name = "reg_date_from", IsRequired = false)]
        public DateTime? RegistrationDateFrom { get; set; }

        /// <summary>
        /// Дата гос. регистрации, конечная дата
        /// </summary>
        [DataMember(Name = "reg_date_to", IsRequired = false)]
        public DateTime? RegistrationDateTo { get; set; }

        /// <summary>
        /// Номер регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_id", IsRequired = false)]
        public string RegistrationID { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "prod_sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "drug_code", IsRequired = false)]
        public string DrugCode { get; set; }

        /// <summary>
        /// Наименование держателя РУ
        /// </summary>
        [DataMember(Name = "reg_holder", IsRequired = false)]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Производитель готовой ЛФ
        /// </summary>
        [DataMember(Name = "glf_name", IsRequired = false)]
        public string FormProducerName { get; set; }

        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug", IsRequired = false)]
        public bool? VznDrug { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp", IsRequired = false)]
        public bool? Gnvlp { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
    /// Формат объекта Member
    /// </summary>
    [DataContract]
    public class Member
    {
        /// <summary>
        /// Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sys_id")]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// ИНН субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// ОГРН
        /// </summary>
        [DataMember(Name = "ogrn")]
        public string Ogrn { get; set; }

        /// <summary>
        /// ОГРНИП
        /// </summary>
        [DataMember(Name = "ogrnip")]
        public string Ogrnip { get; set; }

        /// <summary>
        /// КПП
        /// </summary>
        [DataMember(Name = "kpp")]
        public string Kpp { get; set; }

        /// <summary>
        /// Имя руководителя организации
        /// </summary>
        [DataMember(Name = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// Отчество руководителя организации
        /// </summary>
        [DataMember(Name = "middle_name")]
        public string MiddleName { get; set; }

        /// <summary>
        /// Фамилия руководителя организации
        /// </summary>
        [DataMember(Name = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// Наименование организации
        /// </summary>
        [DataMember(Name = "org_name")]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Признак резидента РФ
        /// </summary>
        [DataMember(Name = "is_resident")]
        public bool IsResident { get; set; }

        /// <summary>
        /// Сведения о задолженности организации
        /// </summary>
        [DataMember(Name = "Debts")]
        public string Debts { get; set; }

        /// <summary>
        /// Код налогового органа
        /// </summary>
        [DataMember(Name = "tax_authority_code", IsRequired = false)]
        public string TaxAuthorityCode { get; set; }

        /// <summary>
        /// Код статуса
        /// </summary>
        [DataMember(Name = "status_code", IsRequired = false)]
        public string StatusCode { get; set; }

        /// <summary>
        /// Наименование статуса
        /// </summary>
        [DataMember(Name = "status_name", IsRequired = false)]
        public string StatusName { get; set; }

        /// <summary>
        /// Коды внесения записи в ЕГРЮЛ
        /// </summary>
        [DataMember(Name = "esklp_codes", IsRequired = false)]
        public string[] EsklpCodes { get; set; }

        /// <summary>
        /// Подробное описание деятельности организации
        /// </summary>
        [DataMember(Name = "activity_description", IsRequired = false)]
        public string ActivityDescription { get; set; }

        /// <summary>
        /// Информация о руководителях организации        /// </summary>
        [DataMember(Name = "chiefs", IsRequired = false)]
        public ChiefInfo[] Chiefs { get; set; }

        /// <summary>
        /// Код языка квитанций
        /// </summary>
        [DataMember(Name = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Код субъекта РФ (код места юридической регистрации участника)        /// </summary>
        [DataMember(Name = "registration_federal_subject_code", IsRequired = false)]
        public string RegistrationFederalSubjectCode { get; set; }

        /// <summary>
        /// Информация о договорах и заявлениях участника
        /// </summary>
        [DataMember(Name = "agreement_info")] // в документации ошибка: там указано agreements_info
        public AgreementsInfo AgreementsInfo { get; set; }

        /// <summary>
        /// Информация о банковских реквизитах участника
        /// </summary>
        [DataMember(Name = "banking_info", IsRequired = false)]
        public BankingInfo BankingInfo { get; set; }

        /// <summary>
        /// Номер контактного телефона
        /// </summary>
        [DataMember(Name = "phone", IsRequired = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Адрес электронной почты
        /// </summary>
        [DataMember(Name = "email", IsRequired = false)]
        public string Email { get; set; }

        /// <summary>
        /// Тип участника:
        /// 1 — резидент РФ
        /// 2 — представительство иностранного держателя регистрационного удостоверения
        /// 3 — иностранный держатель регистрационного удостоверения
        /// 8 — иностранный контрагент
        /// </summary>
        /// <remarks>
        /// См. <see cref="RegEntityTypeEnum"/>
        /// </remarks>
        [DataMember(Name = "entity_type", IsRequired = false)]
        public int? EntityType { get; set; }

        /// <summary>
        /// Признак поставщика высокозатратных нозологий
        /// </summary>
        [DataMember(Name = "vzn_vendor")]
        public bool VznVendor { get; set; }

        /// <summary>
        /// Адрес юридической регистрации участника
        /// </summary>
        [DataMember(Name = "org_address")]
        public string Address { get; set; }

        /// <summary>
        /// Краткое наименование организации        /// </summary>
        [DataMember(Name = "org_short_name")]
        public string OrganizationShortName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.2. Метод для изменения данных организации, в которой зарегистрирован текущий
    /// Для изменения доступна часть полей объекта <see cref="Member"/>.
    /// </summary>
    [DataContract]
    public class MemberOptions
    {
        /// <summary>
        /// Код языка квитанций
        /// </summary>
        /// <remarks>
        /// Ошибка в документации: похоже, это обязательный параметр.
        /// Без указания этого параметра метод 8.9.2 выполняется с ошибкой BadRequest (400).
        /// </remarks>
        [DataMember(Name = "language", IsRequired = true)]
        public string Language { get; set; }

        /// <summary>
        /// Код субъекта РФ (код места юридической регистрации участника)        /// </summary>
        [DataMember(Name = "registration_federal_subject_code", IsRequired = false)]
        public string RegistrationFederalSubjectCode { get; set; }

        /// <summary>
        /// Номер контактного телефона
        /// </summary>
        [DataMember(Name = "phone", IsRequired = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Адрес электронной почты
        /// </summary>
        [DataMember(Name = "email", IsRequired = false)]
        public string Email { get; set; }

        /// <summary>
        /// Информация о банковских реквизитах участника
        /// </summary>
        [DataMember(Name = "banking_info", IsRequired = false)]
        public BankingInfo BankingInfo { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
    /// </summary>
    [DataContract]
    internal class MemberResponse
    {
        /// <summary>
        /// Информация об организации, в которой зарегистрирован текущий пользователь
        /// </summary>
        [DataMember(Name = "member", IsRequired = false)]
        public Member Member { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Информация для регистрации пользователя-нерезидента
    /// </summary>
    [DataContract]
    public class NonResidentUser : UserBase
    {
        /// <summary>
        /// Пароль
        /// </summary>
        [DataMember(Name = "password", IsRequired = true)]
        public string Password { get; set; }

        /// <summary>
        /// Логин пользователя
        /// </summary>
        [DataMember(Name = "email", IsRequired = false)]
        public string Email { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта OperationDate
    /// </summary>
    [DataContract]
    public class OperationDate
    {
        /// <summary>
        /// Дата операции
        /// </summary>
        [DataMember(Name = "$date")]
        public DateTime Date { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.18. Формат объекта OutcomeDocument
    /// Таблица 12. Формат объекта OutcomeDocument
    /// Объект OutcomeDocument наследует все поля объекта Document и добавляет следующие:
    /// </summary>
    [DataContract]
    public class OutcomeDocument : DocumentMetadata
    {
        /// <summary>
        /// Уникальный идентификатор регистратора событий РЭ или РВ.
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = false)]
        public string DeviceID { get; set; } // 1230000011111111 (optional)

        /// <summary>
        /// Уникальный идентификатор системы, сформировавшей сообщение.
        /// </summary>
        [DataMember(Name = "skzkm_origin_msg_id", IsRequired = false)]
        public string SkzkmOriginMessageID { get; set; } // "e2cb20c1-1d5b-4ab6-b8dd-9297bec23f63" (optional)

        /// <summary>
        /// Идентификатор отчета системы управления заказами (СУЗ), Guid.
        /// Для документов, полученных от регистраторов событий.
        /// </summary>
        [DataMember(Name = "skzkm_report_id", IsRequired = false)]
        public string SkzkmReportID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта PartnersFilter
    /// </summary>
    [DataContract]
    public class PartnerFilter
    {
        /// <summary>
        /// Идентификатор доверенного контрагента как субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "system_subj_id", IsRequired = false)]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// Код ОКТМО субъекта Российской Федерации
        /// </summary>
        [DataMember(Name = "federal_subject_code", IsRequired = false)]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// Код округа Российской Федерации
        /// </summary>
        [DataMember(Name = "federal_district_code", IsRequired = false)]
        public string FederalDistrictCode { get; set; }

        /// <summary>
        /// Код страны
        /// </summary>
        [DataMember(Name = "country", IsRequired = false)]
        public string Country { get; set; }

        /// <summary>
        /// Наименование организации
        /// </summary>
        [DataMember(Name = "org_name", IsRequired = false)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// ИНН
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// КПП
        /// </summary>
        [DataMember(Name = "kpp", IsRequired = false)]
        public string Kpp { get; set; }

        /// <summary>
        /// ОГРН
        /// </summary>
        [DataMember(Name = "ogrn", IsRequired = false)]
        public string Ogrn { get; set; }

        /// <summary>
        /// Дата заявки на регистрацию, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "start_date", IsRequired = false)]
        public CustomDateTime StartDate { get; set; }

        /// <summary>
        /// Дата заявки на регистрацию, конец периода фильтрации
        /// </summary>
        [DataMember(Name = "end_date", IsRequired = false)]
        public CustomDateTime EndDate { get; set; }

        /// <summary>
        /// Тип участника, см. <see cref="RegEntityTypeEnum"/>:
        /// 1 — резидент РФ
        /// 2 — представительство иностранного держателя регистрационного удостоверения
        /// 3 — иностранный держатель регистрационного удостоверения
        /// 8 — иностранный контрагент
        /// </summary>
        [DataMember(Name = "reg_entity_type", IsRequired = false)]
        public int RegEntityType { get; set; }

        /// <summary>
        /// Дата фактической регистрации, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "op_exec_date_start", IsRequired = false)]
        public CustomDateTime OperationStartDate { get; set; }

        /// <summary>
        /// Дата фактической регистрации, конец периода фильтрации
        /// </summary>
        [DataMember(Name = "op_exec_date_end", IsRequired = false)]
        public CustomDateTime OperationEndDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.12.1. Фильтрация по реестру решений о приостановке КИЗ
    /// </summary>
    [DataContract]
    public class PausedCirculationDecision
    {
        /// <summary>
        /// Количество SGTIN
        /// </summary>
        [DataMember(Name = "sgtin_count", IsRequired = false)]
        public int SgtinCount { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// ИНН участника
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// Наименование организации
        /// </summary>
        [DataMember(Name = "org_name", IsRequired = false)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Дата решения
        /// </summary>
        [DataMember(Name = "halt_doc_date", IsRequired = false)]
        public DateTime? HaltDocDate { get; set; }

        /// <summary>
        /// Дата вступления в силу
        /// </summary>
        [DataMember(Name = "halt_date", IsRequired = false)]
        public DateTime? HaltDate { get; set; }

        /// <summary>
        /// Дата приостановки/отмены приостановки SGTIN
        /// </summary>
        [DataMember(Name = "op_date", IsRequired = false)]
        public DateTime? OperationDate { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "batch", IsRequired = false)]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Номер решения
        /// </summary>
        [DataMember(Name = "halt_doc_num", IsRequired = false)]
        public string HaltDocNumber { get; set; }

        /// <summary>
        /// Идентификатор решения
        /// </summary>
        [DataMember(Name = "halt_id", IsRequired = true)]
        public string HaltID { get; set; }

        /// <summary>
        /// Тип решения:
        /// 0 — временный вывод из обращения
        /// 1 — отмена временного вывода из обращения
        /// </summary>
        [DataMember(Name = "halt_type", IsRequired = false)]
        public int HaltType { get; set; }

        /// <summary>
        /// Адрес места деятельности (код ФИАС)
        /// </summary>
        [DataMember(Name = "owner_address", IsRequired = false)]
        public string OwnerAddressID { get; set; }

        /// <summary>
        /// Дата РУ
        /// </summary>
        [DataMember(Name = "reg_date", IsRequired = false)]
        public DateTime? RegistrationDate { get; set; }

        /// <summary>
        /// Номер РУ
        /// </summary>
        [DataMember(Name = "reg_num", IsRequired = false)]
        public string RegistrationNumber { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.12.1. Фильтрация по реестру решений о приостановке КИЗ
    /// </summary>
    [DataContract]
    public class PausedCirculationDecisionFilter
    {
        /// <summary>
        /// ИНН участника
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// Тип решения:
        /// 0 — временный вывод из обращения
        /// 1 — отмена временного вывода из обращения
        /// </summary>
        [DataMember(Name = "halt_type", IsRequired = false)]
        public int HaltType { get; set; }

        /// <summary>
        /// Номер решения
        /// </summary>
        [DataMember(Name = "halt_doc_num", IsRequired = false)]
        public string HaltDocNumber { get; set; }

        /// <summary>
        /// Идентификатор решения
        /// </summary>
        [DataMember(Name = "halt_id", IsRequired = false)]
        public string HaltID { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "batch", IsRequired = false)]
        public string BatchNumber { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// Дата решения, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "start_halt_doc_date", IsRequired = false)]
        public CustomDateTime StartHaltDocDate { get; set; }

        /// <summary>
        /// Дата решения, конец периода фильтрации
        /// </summary>
        [DataMember(Name = "end_halt_doc_date", IsRequired = false)]
        public CustomDateTime EndHaltDocDate { get; set; }

        /// <summary>
        /// Дата вступления в силу, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "start_halt_date", IsRequired = false)]
        public CustomDateTime StartHaltDate { get; set; }

        /// <summary>
        /// Дата вступления в силу, конец периода фильтрации
        /// </summary>
        [DataMember(Name = "end_halt_date", IsRequired = false)]
        public CustomDateTime EndHaltDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.12.2. Получение перечня КИЗ по конкретному решению о приостановке
    /// </summary>
    [DataContract]
    public class PausedCirculationSgtin
    {
        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin", IsRequired = true)]
        public string Sgtin { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "batch", IsRequired = false)]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Идентификатор текущего владельца
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "owner_id", IsRequired = false)]
        public string OwnerID { get; set; }

        /// <summary>
        /// Местонахождение — адрес
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "address", IsRequired = false)]
        public string Address { get; set; }

        /// <summary>
        /// Местонахождение — код субъекта РФ
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "federal_subject_code", IsRequired = false)]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// ИНН текущего владельца
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "owner_inn", IsRequired = false)]
        public string OwnerInn { get; set; }

        /// <summary>
        /// Наименование текущего владельца
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "owner_name", IsRequired = false)]
        public string OwnerName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Торговое наименованиe
        /// Например: Гертикад®
        /// </summary>
        /// <remarks>
        /// Поле бывает пусто, полагаться нельзя
        /// </remarks>
        [DataMember(Name = "product_sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.32. Формат объекта PublicSGTIN
    /// 8.3.3. Метод поиска по общедоступному реестру КИЗ по списку значений
    /// </summary>
    [DataContract]
    public class PublicSgtin
    {
        /// <summary>
        /// SGTIN (КИЗ) 
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string Sgtin { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "batch")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Срок годности
        /// </summary>
        [DataMember(Name = "expiration_date", IsRequired = false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Торговое наименованиe
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Лекарственная форма
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_name", IsRequired = false)]
        public string ProductFormName { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_name", IsRequired = false)]
        public string ProductDosageName { get; set; }

        /// <summary>
        /// Дата гос. регистрации
        /// </summary>
        [DataMember(Name = "reg_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Номер регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_number")]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Держатель регистрационного удостоверения
        /// </summary>
        [DataMember(Name = "reg_holder", IsRequired = false)]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "drug_code", IsRequired = false)]
        public string DrugCode { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    [DataContract]
    public class RafpRegistryResponse
    {
        [DataMember(Name = "id")]
        public string ID { get; set; }

        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        [DataMember(Name = "FIRST_NAME")]
        public string FirstName { get; set; }

        [DataMember(Name = "MIDDLE_NAME")]
        public string MiddleName { get; set; }

        [DataMember(Name = "LAST_NAME")]
        public string LastName { get; set; }

        [DataMember(Name = "KPP")]
        public string Kpp { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Типы зарегистрированных участников
    /// </summary>
    public class RegEntityTypeEnum
    {
        /// <summary>
        /// Тип участника: 1 — резидент РФ
        /// </summary>
        public const int RESIDENT = 1;

        /// <summary>
        /// Тип участника: 2 — представительство иностранного держателя регистрационного удостоверения
        /// </summary>
        public const int FOREIGN_REGHOLDER_BRANCH = 2;

        /// <summary>
        /// Тип участника: 3 — иностранный держатель регистрационного удостоверения
        /// </summary>
        public const int FOREIGN_REGHOLDER = 3;

        /// <summary>
        /// Тип участника: 8 — иностранный контрагент
        /// </summary>
        public const int FOREIGN_COUNTERPARTY = 8;
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 7.9.2. Метод для получения списка субъектов РФ
    /// Структура данных Region
    /// </summary>
    [DataContract]
    public class Region
    {
        /// <summary>
        /// Название
        /// </summary>
        [DataMember(Name = "title", IsRequired = true)]
        public string Title { get; set; }

        /// <summary>
        /// Код субъекта
        /// </summary>
        [DataMember(Name = "code", IsRequired = true)]
        public string Code { get; set; }

        /// <summary>
        /// Идентификатор субъекта
        /// </summary>
        /// <remarks>
        /// Имеется далеко не всегда
        /// </remarks>
        [DataMember(Name = "key", IsRequired = false)]
        public string Key { get; set; }

        /// <summary>
        /// Список идентификаторов дочерних субъектов
        /// </summary>
        [DataMember(Name = "children", IsRequired = false)]
        public string[] Children { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.6.1. Метод для регистрации иностранного контрагента
    /// </summary>
    [DataContract]
    internal class RegisterForeignCounterpartyResponse
    {
        [DataMember(Name = "counterparty_id")]
        public string CounterpartyID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.1.2. Метод для регистрации пользователей (для резидентов страны)
    /// </summary>
    [DataContract]
    internal class RegisterUserResponse
    {
        [DataMember(Name = "user_id")]
        public string UserID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.2.4. Метод для регистрация места ответственного хранения
    /// </summary>
    [DataContract]
    internal class RegisterWarehouseResponse
    {
        [DataMember(Name = "safe_warehouse_id")]
        public string WarehouseID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.2.5. Адрес для регистрации места ответственного хранения.
    /// </summary>
    [DataContract]
    public class RegistrationAddress
    {
        /// <summary>
        /// Идентификатор адреса
        /// </summary>
        [DataMember(Name = "address_id")]
        public string AddressID { get; set; }

        /// <summary>
        /// Адрес
        /// </summary>
        [DataMember(Name = "address")]
        public Address Address { get; set; }

        /// <summary>
        /// Адрес из лицензии
        /// </summary>
        [DataMember(Name = "resolved_address")]
        public string ResolvedAddress { get; set; }

        /// <summary>
        /// Тип лицензии
        /// 1 — лицензия на фарм. деятельность;
        /// 2 — лицензия на производство
        /// </summary>
        [DataMember(Name = "license_type")]
        public string LicenseType { get; set; }

        /// <summary>
        /// Идентификационный номер налогоплательщика (ИНН)
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта RegistrationEntry
    /// </summary>
    [DataContract]
    public class RegistrationEntry
    {
        /// <summary>
        /// Идентификатор контрагента как субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "system_subj_id")]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// Список мест осуществления деятельности
        /// </summary>
        [DataMember(Name = "branches")]
        public ResolvedFiasAddress[] Branches { get; set; }

        /// <summary>
        /// Список мест ответственного хранения
        /// </summary>
        [DataMember(Name = "safe_warehouses")]
        public ResolvedFiasAddress[] Warehouses { get; set; }

        /// <summary>
        /// ИНН субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// ИТИН
        /// </summary>
        [DataMember(Name = "itin")]
        public string Itin { get; set; }

        /// <summary>
        /// КПП
        /// </summary>
        [DataMember(Name = "KPP")]
        public string Kpp { get; set; }

        /// <summary>
        /// ОГРН
        /// </summary>
        [DataMember(Name = "OGRN")]
        public string Ogrn { get; set; }

        /// <summary>
        /// Наименование субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "ORG_NAME")]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Имя руководителя организации
        /// </summary>
        [DataMember(Name = "FIRST_NAME")]
        public string FirstName { get; set; }

        /// <summary>
        /// Отчество руководителя организации
        /// </summary>
        [DataMember(Name = "MIDDLE_NAME")]
        public string MiddleName { get; set; }

        /// <summary>
        /// Фамилия руководителя организации
        /// </summary>
        [DataMember(Name = "LAST_NAME")]
        public string LastName { get; set; }

        /// <summary>
        /// Тип участника:
        /// 1 — резидент РФ
        /// 2 — представительство иностранного держателя регистрационного удостоверения
        /// 3 — иностранный держатель регистрационного удостоверения
        /// 8 — иностранный контрагент
        /// </summary>
        /// <remarks>
        /// См. <see cref="RegEntityTypeEnum"/>.
        /// </remarks>
        [DataMember(Name = "reg_entity_type", IsRequired = false)]
        public int? RegEntityType { get; set; }

        /// <summary>
        /// Дата заявки на регистрацию
        /// </summary>
        [DataMember(Name = "op_date")]
        public OperationDate OperationDate { get; set; }

        /// <summary>
        /// Дата фактической регистрации в системе
        /// </summary>
        [DataMember(Name = "op_exec_date")]
        public DateTime OperationExecutionDate { get; set; }

        /// <summary>
        /// Код страны
        /// </summary>
        [DataMember(Name = "country_code")]
        public string CountryCode { get; set; }

        /// <summary>
        /// Код субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_code")]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// Регистрационный номер
        /// </summary>
        [DataMember(Name = "regNum")]
        public string RegistrationNumber { get; set; }

        /// <summary>
        /// Дата регистрации
        /// </summary>
        [DataMember(Name = "regDate", IsRequired = false)]
        public DateTime? RegistrationDate { get; set; }

        /// <summary>
        /// Адрес организации
        /// </summary>
        [DataMember(Name = "org_address")]
        public ForeignAddress Address { get; set; }

        /// <summary>
        /// КПП (дубликат реквизита, косяк проектирования API)
        /// </summary>
        [DataMember(Name = "kpp")]
        public string kpp { get; set; }

        /// <summary>
        /// ОГРН (дубликат реквизита, косяк проектирования API)
        /// </summary>
        [DataMember(Name = "ogrn")]
        public string ogrn { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Информация для регистрации пользователя-резидента
    /// </summary>
    [DataContract]
    public class ResidentUser : UserBase
    {
        /// <summary>
        /// Публичный сертификат пользователя в кодировке BASE64
        /// </summary>
        /// <remarks>
        /// Необходимо использовать публичный сертификат, а не публичный ключ
        /// </remarks>
        [DataMember(Name = "public_cert", IsRequired = true)]
        public string PublicCertificate { get; set; }

        /// <summary>
        /// Логин пользователя
        /// </summary>
        [DataMember(Name = "email", IsRequired = false)]
        public string Email { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.8.1. Метод фильтрации по субъектам обращения
    /// Формат объекта ResolvedFiasAddress
    /// </summary>
    [DataContract]
    public class ResolvedFiasAddress
    {
        /// <summary>
        /// Идентификатор
        /// </summary>
        [DataMember(Name = "id")]
        public string ID { get; set; }

        /// <summary>
        /// Адрес ФИАС
        /// </summary>
        [DataMember(Name = "address_fias")]
        public AddressFias AddressFias { get; set; }

        /// <summary>
        /// Адрес
        /// </summary>
        [DataMember(Name = "address_resolved")]
        public AddressResolved AddressResolved { get; set; }

        /// <summary>
        /// Статус:
        /// 0 — не действует
        /// 1 — действует
        /// 2 — в процессе приостановления
        /// </summary>
        [DataMember(Name = "Status")]
        public int Status { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.11. Список прав пользователей учетной системы
    /// </summary>
    public class RightsEnum
    {
        /// <summary>
        /// Позволяет удалять черновики.
        /// </summary>
        internal const string DELETE_DRAFTS = "DELETE_DRAFTS";

        /// <summary>
        /// Позволяет по идентификатору документа получить ссылку на документ.
        /// </summary>
        public const string DOWNLOAD_DOCUMENT = "DOWNLOAD_DOCUMENT";

        /// <summary>
        /// Позволяет получить информацию о входящих документах
        /// </summary>
        public const string INCOME_LIST = "INCOME_LIST";

        /// <summary>
        /// Позволяет управлять учетными системами, пользователями, группами прав пользователей
        /// </summary>
        public const string MANAGE_ACCOUNTS = "MANAGE_ACCOUNTS";

        /// <summary>
        /// Редактирование реестра приоритетной оплаты
        /// </summary>
        public const string MANAGE_BILLING_PRIORITY_RULES = "MANAGE_BILLING_PRIORITY_RULES";

        /// <summary>
        /// Позволяет добавлять МД
        /// </summary>
        public const string MANAGE_BRANCH = "MANAGE_BRANCH";

        /// <summary>
        /// Позволяет взаимодействовать с заявлениями на формирование Договора по предоставлению устройства регистрации эмиссии
        /// </summary>
        public const string MANAGE_EMISSION_APPLICATIONS = "MANAGE_EMISSION_APPLICATIONS";

        /// <summary>
        /// Позволяет взаимодействовать с анкетами на РЭ
        /// </summary>
        public const string MANAGE_EMISSION_FORM = "MANAGE_EMISSION_FORM";

        /// <summary>
        /// Позволяет регистрировать иностранных контрагентов
        /// </summary>
        public const string MANAGE_FOREIGN_COUNTERPARTY = "MANAGE_FOREIGN_COUNTERPARTY";

        /// <summary>
        /// Позволяет взаимодействовать с анкетами на РЭ с размещением по месту
        /// </summary>
        public const string MANAGE_IN_PLACE_EMISSION_FORM = "MANAGE_IN_PLACE_EMISSION_FORM";

        /// <summary>
        /// Позволяет регистрировать ЛП и получать список заявок на регистрацию ЛП
        /// </summary>
        public const string MANAGE_LP = "MANAGE_LP";

        /// <summary>
        /// Позволяет управлять организацией
        /// </summary>
        internal const string MANAGE_MEMBER = "MANAGE_MEMBER";

        /// <summary>
        /// Позволяет взаимодействовать с заявлениями
        /// </summary>
        public const string MANAGE_MEMBER_APPLICATIONS = "MANAGE_MEMBER_APPLICATIONS";

        /// <summary>
        /// Позволяет взаимодействовать с заявлениями на формирование Договора на оказание услуг по предоставлению кодов маркировки
        /// </summary>
        public const string MANAGE_PAYMENT_APPLICATIONS = "MANAGE_PAYMENT_APPLICATIONS";

        /// <summary>
        /// Позволяет редактировать адрес в лицензиях на фармацевтическую деятельность
        /// </summary>
        public const string MANAGE_PHARM_LICENSE_ADDRESS = "MANAGE_PHARM_LICENSE_ADDRESS";

        /// <summary>
        /// Позволяет редактировать адрес в лицензиях на производство ЛП
        /// </summary>
        public const string MANAGE_PROD_LICENSE_ADDRESS = "MANAGE_PROD_LICENSE_ADDRESS";

        /// <summary>
        /// Позволяет взаимодействовать с заявлениями на формирование Договора по предоставлению устройства регистрации эмиссии путем предоставления удаленного доступа
        /// </summary>
        public const string MANAGE_REMOTE_EMISSION_APPLICATIONS = "MANAGE_REMOTE_EMISSION_APPLICATIONS";

        /// <summary>
        /// Позволяет взаимодействовать с анкетами на РЭ с удаленным доступом
        /// </summary>
        public const string MANAGE_REMOTE_EMISSION_FORM = "MANAGE_REMOTE_EMISSION_FORM";

        /// <summary>
        /// Позволяет добавлять СОХ/МОХ
        /// </summary>
        public const string MANAGE_SAFE_WAREHOUSE = "MANAGE_SAFE_WAREHOUSE";

        /// <summary>
        /// Создание, редактирование и отправка заявок в СТП
        /// </summary>
        public const string MANAGE_SERVICE_REQUESTS = "MANAGE_SERVICE_REQUESTS";

        /// <summary>
        /// Позволяет управлять доверенными контрагентами при обратном акцептировании
        /// </summary>
        public const string MANAGE_TRUSTED_PARTNERS = "MANAGE_TRUSTED_PARTNERS";

        /// <summary>
        /// Позволяет взаимодействовать с анкетами на РВ
        /// </summary>
        public const string MANAGE_WITHDRAWAL_FORM = "MANAGE_WITHDRAWAL_FORM";

        /// <summary>
        /// Управление атрибутами ЛП
        /// </summary>
        internal const string MANAGEMENT_ATTR_LP = "MANAGEMENT_ATTR_LP";

        /// <summary>
        /// Позволяет взаимодействовать с финансовыми данными участника
        /// </summary>
        public const string MEMBER_PAYMENT_INFO = "MEMBER_PAYMENT_INFO";

        /// <summary>
        /// Позволяет получить информацию о исходящих документах
        /// </summary>
        public const string OUTCOME_LIST = "OUTCOME_LIST";

        /// <summary>
        /// Позволяет получить доступ ко всем справочникам
        /// </summary>
        public const string REESTR_ALL = "REESTR_ALL";

        /// <summary>
        /// Получение информации из реестра контрагентов
        /// </summary>
        public const string REESTR_COUNTERPARTY = "REESTR_COUNTERPARTY";

        /// <summary>
        /// Получение информации из реестра налоговой задолженности
        /// </summary>
        internal const string REESTR_DUES = "REESTR_DUES";

        /// <summary>
        /// Получение информации из реестра ЕГРИП
        /// </summary>
        public const string REESTR_EGRIP = "REESTR_EGRIP";

        /// <summary>
        /// Получение информации из реестра ЕГРЮЛ
        /// </summary>
        public const string REESTR_EGRUL = "REESTR_EGRUL";

        /// <summary>
        /// Получение информации из реестра ЕСКЛП
        /// </summary>
        public const string REESTR_ESKLP = "REESTR_ESKLP";

        /// <summary>
        /// Просмотр информации МД/МОХ
        /// </summary>
        public const string REESTR_FEDERAL_SUBJECT = "REESTR_FEDERAL_SUBJECT";

        /// <summary>
        /// Получение информации из реестра ФИАС
        /// </summary>
        public const string REESTR_FIAS = "REESTR_FIAS";

        /// <summary>
        /// Получение информации из реестра ГС1 (GS1)
        /// </summary>
        internal const string REESTR_GS_1 = "REESTR_GS_1";

        /// <summary>
        /// Получение информации из реестра производимых ЛП
        /// </summary>
        public const string REESTR_MED_PRODUCTS = "REESTR_MED_PRODUCTS";

        /// <summary>
        /// Получение информации из реестра КИЗ и по третичной упаковке с учетом текущего владельца
        /// </summary>
        internal const string REESTR_OWNED_SSCC_SGTIN = "REESTR_OWNED_SSCC_SGTIN";

        /// <summary>
        /// Позволяет просматривать реестр субъектов обращения
        /// </summary>
        internal const string REESTR_PARTNERS = "REESTR_PARTNERS";

        /// <summary>
        /// Получение информации из реестра решений о приостановке ЛП
        /// </summary>
        public const string REESTR_PAUSED_CIRCULATION_DECISION = "REESTR_PAUSED_CIRCULATION_DECISION";

        /// <summary>
        /// Получение информации из реестра лицензий на фармацевтическую деятельность
        /// </summary>
        public const string REESTR_PHARM_LICENSES = "REESTR_PHARM_LICENSES";

        /// <summary>
        /// Получение информации из реестра лицензий на производство
        /// </summary>
        public const string REESTR_PROD_LICENSES = "REESTR_PROD_LICENSES";

        /// <summary>
        /// Получение информации из реестра аккредитованных филиалов и представительств
        /// </summary>
        public const string REESTR_REFP = "REESTR_REFP";

        /// <summary>
        /// Получение информации из реестра устройств регистрации
        /// </summary>
        public const string REESTR_REGISTRATION_DEVICES = "REESTR_REGISTRATION_DEVICES";

        /// <summary>
        /// Получение информации из реестра КИЗ
        /// </summary>
        public const string REESTR_SGTIN = "REESTR_SGTIN";

        /// <summary>
        /// Доступ к реестру КИЗ, подлежащих оплате
        /// </summary>
        public const string REESTR_SGTIN_BILLING = "REESTR_SGTIN_BILLING";

        /// <summary>
        /// Получение информации из реестра виртуального склада
        /// </summary>
        public const string REESTR_VIRTUAL_STORAGE = "REESTR_VIRTUAL_STORAGE";

        /// <summary>
        /// Позволяет заказывать SGTIN
        /// </summary>
        public const string SGTIN_ORDER = "SGTIN_ORDER";

        /// <summary>
        /// Позволяет загружать документ
        /// </summary>
        public const string UPLOAD_DOCUMENT = "UPLOAD_DOCUMENT";

        /// <summary>
        /// Позволяет просматривать учетные системы, пользователей, группы прав пользователей
        /// </summary>
        public const string VIEW_ACCOUNTS = "VIEW_ACCOUNTS";

        /// <summary>
        /// Позволяет просмотривать и создавать заявки на корректировку сведений ЛП
        /// </summary>
        public const string VIEW_AND_CREATE_APPLICATION_CORRECT_MEDICINE_INFO = "VIEW_AND_CREATE_APPLICATION_CORRECT_MEDICINE_INFO";

        /// <summary>
        /// Просмотр дерева по производственной серии
        /// </summary>
        internal const string VIEW_BATCH_GRAF = "VIEW_BATCH_GRAF";

        /// <summary>
        /// Доступ к реестру приоритетной оплаты
        /// </summary>
        public const string VIEW_BILLING_PRIORITY_RULES = "VIEW_BILLING_PRIORITY_RULES";

        /// <summary>
        /// Позволяет получать информацию о заявках на регистрацию иностранных контрагентов
        /// </summary>
        public const string VIEW_REGISTRATION_FOREIGN_COUNTERPARTY_LOG = "VIEW_REGISTRATION_FOREIGN_COUNTERPARTY_LOG";

        /// <summary>
        /// Просмотр заявок в СТП
        /// </summary>
        public const string VIEW_SERVICE_REQUESTS = "VIEW_SERVICE_REQUESTS";

        /// <summary>
        /// Получение трассировки документов о нанесении
        /// </summary>
        public const string VIEW_SKZKM_REPORT = "VIEW_SKZKM_REPORT";

        /// <summary>
        /// Позволяет просматривать информацию по доверенным контрагентам при обратном акцептировании
        /// </summary>
        public const string VIEW_TRUSTED_PARTNERS = "VIEW_TRUSTED_PARTNERS";
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.27. Формат объекта RightsInfo
    /// Таблица 23. Формат объекта RightsInfo
    /// 6.6.1. Метод для получения информации о существующих правах
    /// </summary>
    [DataContract]
    public class RightsInfo
    {
        /// <summary>
        /// Псевдоним права в системе
        /// </summary>
        [DataMember(Name = "right")]
        public string Right { get; set; }

        /// <summary>
        /// Описание права
        /// </summary>
        [DataMember(Name = "description")]
        public string Description { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 5.1. Отправка документа
    /// </summary>
    [DataContract]
    internal class SendDocumentResponse
    {
        [DataMember(Name = "document_id")]
        public string DocumentID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 5.2. Отправка документа большого объема
    /// 5.3. Загрузка документа большого объема
    /// 5.4. Завершение отправки документа
    /// </summary>
    [DataContract]
    internal class SendLargeDocumentResponse
    {
        [DataMember(Name = "link", IsRequired = false)]
        public string Link { get; set; }

        [DataMember(Name = "document_id", IsRequired = false)]
        public string DocumentID { get; set; }

        [DataMember(Name = "request_id", IsRequired = false)]
        public string RequestID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.34. Формат объекта SGTIN
    /// Таблица 30. Формат объекта SGTIN    /// </summary>
    [DataContract]
    public class Sgtin
    {
        /// <summary>
        /// Уникальный идентификатор
        /// </summary>
        [DataMember(Name = "id")]
        public string ID { get; set; }

        /// <summary>
        /// ИНН владельца
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string SgtinValue { get; set; }

        /// <summary>
        /// Статус (см. Список возможных статусов КИЗ, <see cref="SgtinStatus"/>)
        /// </summary>
        [DataMember(Name = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Дата последней смены статуса
        /// </summary>
        [DataMember(Name = "status_date")]
        public DateTime StatusDate { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "batch")]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Наименование владельца
        /// </summary>
        [DataMember(Name = "owner")]
        public string Owner { get; set; }

        /// <summary>
        /// Тип эмиссии:
        /// 1 — собственное,
        /// 2 — контрактное,
        /// 3 — иностранное производство,
        /// 4 — маркирован на таможне.
        /// См. <see cref="SgtinEmissionType"/>.
        /// </summary>
        [DataMember(Name = "emission_type")]
        public int EmissionType { get; set; }

        /// <summary>
        /// Дата ввода в гражданский оборот
        /// </summary>
        [DataMember(Name = "release_date")]
        public DateTime ReleaseDate { get; set; }

        /// <summary>
        /// Дата начала периода регистрации
        /// </summary>
        [DataMember(Name = "emission_operation_date")]
        public DateTime EmissionDate { get; set; }

        /// <summary>
        /// Код субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_code", IsRequired = false)]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// Местонахождение ЛП — название субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_name")]
        public string FederalSubjectName { get; set; }

        /// <summary>
        /// Срок годности
        /// </summary>
        [DataMember(Name = "expiration_date", IsRequired = false)]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Торговое наименованиe
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Полное наименование товара
        /// Например: лиофилизат для приготовления концентрата для приготовления раствора для инфузий "гертикад®" 150 мг, 440 мг
        /// </summary>
        [DataMember(Name = "full_prod_name", IsRequired = false)]
        public string FullProductName { get; set; }

        /// <summary>
        /// Держатель регистрационного удостоверения
        /// Например: ЗАО БИОКАД
        /// </summary>
        [DataMember(Name = "reg_holder", IsRequired = false)]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Содержимое первичной упаковки?
        /// Например: 1 контур.ячейк.упак.(пвх) на 1 фл.стек. по 440 мг + 1 фл.стек. по 20 мл растворитель + инструкция
        /// </summary>
        [DataMember(Name = "pack1_desc", IsRequired = false)]
        public string Pack1Desc { get; set; }

        /// <summary>
        /// SSCC (Идентификатор третичной упаковки)
        /// </summary>
        [DataMember(Name = "pack3_id", IsRequired = false)]
        public string Sscc { get; set; }

        /// <summary>
        /// Дата выполнения последней операции
        /// </summary>
        [DataMember(Name = "last_tracing_op_date", IsRequired = false)]
        public DateTime? LastTracingDate { get; set; }

        /// <summary>
        /// Источник финансирования.
        /// Возможные значения см. в XSD описании базовых типов комплекта схем:
        /// 1 — собственные средства,
        /// 2 — средства федерального бюджета,
        /// 3 — средства регионального бюджета
        /// </summary>
        [DataMember(Name = "source_type", IsRequired = false)]
        public int? SourceType { get; set; }

        /// <summary>
        /// Внутренний уникальный идентификатор лекарственного препарата в реестре ЕСКЛП
        /// </summary>
        [DataMember(Name = "drug_code", IsRequired = false)]
        public string DrugCode { get; set; }

        /// <summary>
        /// Лекарственная форма
        /// Например: ЛИОФИЛИЗАТ ДЛЯ ПРИГОТОВЛЕНИЯ КОНЦЕНТРАТА ДЛЯ ПРИГОТОВЛЕНИЯ РАСТВОРА ДЛЯ ИНФУЗИЙ
        /// </summary>
        [DataMember(Name = "prod_form_name", IsRequired = false)]
        public string ProductFormName { get; set; }

        /// <summary>
        /// Количество единиц измерения дозировки лекарственного препарата (строковое представление)
        /// Например: 150 мг
        /// </summary>
        [DataMember(Name = "prod_d_name", IsRequired = false)]
        public string ProductDosageName { get; set; }

        /// <summary>
        /// Идентификатор места нахождения товара в ЗТК (в формате SysID)
        /// </summary>
        [DataMember(Name = "customs_point_id", IsRequired = false)]
        public string CustomsPointID { get; set; }

        /// <summary>
        /// Идентификатор заказа системы управления заказами (СУЗ), Guid
        /// </summary>
        [DataMember(Name = "oms_order_id", IsRequired = false)]
        public string OmsOrderID { get; set; }

        /// <summary>
        /// Информация о биллинге
        /// </summary>
        [DataMember(Name = "billing_info", IsRequired = false)]
        public SgtinBillingInformation BillingInfo { get; set; }

        /// <summary>
        /// Состояние оплаты SGTIN
        /// 0 — успешно оплачен
        /// 1 — выбран для перемещения в очередь на оплату
        /// 2 — помещается в очередь на оплату
        /// 3 — помещен в очередь на оплату
        /// 4 — не оплачен в установленные сроки
        /// </summary>
        [DataMember(Name = "billing_state", IsRequired = false)]
        public int? BillingState { get; set; }

        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug")]
        public bool VznDrug { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp")]
        public bool Gnvlp { get; set; }

        /// <summary>
        /// Дата решения о приостановке.
        /// </summary>
        [DataMember(Name = "halt_doc_date", IsRequired = false)]
        public DateTime? HaltDocDate { get; set; }

        /// <summary>
        /// Дата вступления в силу решения о приостановке.
        /// </summary>
        [DataMember(Name = "halt_date", IsRequired = false)]
        public DateTime? HaltDate { get; set; }

        /// <summary>
        /// Номер решения о приостановке.
        /// </summary>
        [DataMember(Name = "halt_doc_num", IsRequired = false)]
        public string HaltDocNumber { get; set; }

        /// <summary>
        /// Идентификатор решения о приостановке.
        /// </summary>
        [DataMember(Name = "halt_id", IsRequired = true)]
        public string HaltID { get; set; }

        /// <summary>
        /// Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sys_id", IsRequired = true)]
        public string SystemSubjectID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.6. Фильтр для поиска по реестру КИЗ записей, ожидающих вывода из оборота по чеку от контрольно-кассовой техники (ККТ)
    /// 8.3.7. Фильтр для поиска по реестру КИЗ записей, ожидающих вывода из оборота через РВ
    /// </summary>
    [DataContract]
    public class SgtinAwaitingWithdrawalFilter
    {
        /// <summary>
        /// Идентификатор места деятельности отправителя
        /// </summary>
        [DataMember(Name = "branch_id", IsRequired = false)]
        public string BranchID { get; set; }

        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin", IsRequired = false)]
        public string Sgtin { get; set; }

        /// <summary>
        /// Дата операции из чека, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "op_start_date", IsRequired = false)]
        public CustomDateTime StartDate { get; set; }

        /// <summary>
        /// Дата операции из чека, конец периода фильтрации
        /// </summary>
        [DataMember(Name = "op_end_date", IsRequired = false)]
        public CustomDateTime EndDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.36. Формат объекта SgtinBillingInformation
    /// Таблица 32. Формат объекта SgtinBillingInformation
    /// </summary>
    [DataContract]
    public class SgtinBillingInformation
    {
        /// <summary>
        /// Признак предоплаты
        /// </summary>
        [DataMember(Name = "is_prepaid")]
        public bool IsPrepaid { get; set; }

        /// <summary>
        /// Признак бесплатного кода
        /// </summary>
        [DataMember(Name = "free_code")]
        public bool FreeCode { get; set; }

        /// <summary>
        /// Статус оплаты
        /// </summary>
        [DataMember(Name = "is_paid")]
        public bool IsPaid { get; set; }

        /// <summary>
        /// Признак вхождения в список высокозатратных нозологий        /// </summary>
        [DataMember(Name = "contains_vzn")]
        public bool ContainsVzn { get; set; }

        /// <summary>
        /// Список информации о платежах        /// </summary>
        [DataMember(Name = "payments")]
        public SgtinPaymentInformation[] Payments { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.7. КИЗ, ожидающий вывода из оборота по чеку от РВ.
    /// </summary>
    [DataContract]
    public class SgtinDeviceAwaitingWithdrawal
    {
        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string Sgtin { get; set; }

        /// <summary>
        /// Тип документа, по которому производится вывод через РВ.
        /// 10521 — Регистрация в ИС МДЛП сведений об отпуске лекарственного препарата по льготному рецепту (информация с СКЗКМ)
        /// 10531 — Регистрация в ИС МДЛП сведений о выдаче лекарственного препарата для оказания медицинской помощи (информация с СКЗКМ)
        /// </summary>
        [DataMember(Name = "xml_document_type")]
        public int XmlDocumentType { get; set; }

        /// <summary>
        /// Идентификатор организации-отправителя
        /// </summary>
        [DataMember(Name = "subject_id", IsRequired = false)]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// Дата операции из чека
        /// </summary>
        [DataMember(Name = "op_date")]
        public DateTime OperationDate { get; set; }

        /// <summary>
        /// Номер льготного рецепта/документа, на основании которого осуществлена выдача
        /// </summary>
        [DataMember(Name = "doc_num", IsRequired = false)]
        public string DocumentNumber { get; set; }

        /// <summary>
        /// Дата льготного рецепта/документа, на основании которого осуществлена выдача
        /// </summary>
        [DataMember(Name = "doc_date", IsRequired = false)]
        public DateTime? DocumentDate { get; set; }

        /// <summary>
        /// Серия льготного рецепта/документа, на основании которого осуществлена выдача
        /// </summary>
        [DataMember(Name = "doc_series", IsRequired = false)]
        public string DocumentSeries { get; set; }

        /// <summary>
        /// Дата  фиксации КИЗа в очереди
        /// </summary>
        [DataMember(Name = "insertion_date", IsRequired = false)]
        public DateTime? InsertionDate { get; set; }

        /// <summary>
        /// Идентификатор XML-документа
        /// </summary>
        [DataMember(Name = "xml_document_id", IsRequired = false)]
        public string XmlDocumentID { get; set; }

        /// <summary>
        /// Доля от вторичной упаковки (доля вида 1/2)
        /// </summary>
        [DataMember(Name = "sold_part", IsRequired = false)]
        public string SoldPart { get; set; }

        /// <summary>
        /// Уникальный идентификатор РЭ или РВ
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = false)]
        public string DeviceID { get; set; }

        /// <summary>
        /// Уникальный идентификатор системы, сформировавшей сообщение
        /// </summary>
        [DataMember(Name = "skzkm_origin_msg_id", IsRequired = false)]
        public string SkskmOriginMessageID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.44. Типы эмиссии
    /// Таблица 40. Типы эмиссии
    /// </summary>
    public class SgtinEmissionType
    {
        /// <summary>
        /// Собственное производство.
        /// </summary>
        public const int OWN_PRODUCTION = 1;

        /// <summary>
        /// Контрактное производство.
        /// </summary>
        public const int CONTRACT_PRODUCTION = 2;

        /// <summary>
        /// Иностранное производство.
        /// </summary>
        public const int FOREIGN_PRODUCTION = 3;

        /// <summary>
        /// Маркирован в зоне таможенного контроля.
        /// </summary>
        public const int CUSTOMS_LABELING = 4;
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.35. Формат объекта SgtinExtended
    /// Таблица 31. Формат объекта SgtinExtended
    /// </summary>
    [DataContract]
    public class SgtinExtended : Sgtin
    {
        // <summary>
        // Идентификатор заказа системы управления заказами (СУЗ), Guid
        // Он и так есть в классе Sgtin.
        // </summary>
        // [DataMember(Name = "oms_order_id", IsRequired = false)]
        // public string OmsOrderID { get; set; }

        /// <summary>
        /// ИНН/ИТИН упаковщика во вторичную/третичную упаковку.
        /// </summary>
        [DataMember(Name = "packing_inn", IsRequired = false)]
        public string PackingInn { get; set; }

        /// <summary>
        /// Наименование упаковщика во вторичную/третичную упаковку.
        /// </summary>
        [DataMember(Name = "packing_name", IsRequired = false)]
        public string PackingName { get; set; }

        /// <summary>
        /// Идентификатор упаковщика во вторичную/третичную упаковку.
        /// </summary>
        [DataMember(Name = "packing_id", IsRequired = false)]
        public string PackingID { get; set; }

        /// <summary>
        /// ИНН/ИТИН производителя стадии выпускающий контроль качества.
        /// </summary>
        [DataMember(Name = "control_inn", IsRequired = false)]
        public string ControlInn { get; set; }

        /// <summary>
        /// Наименование производителя стадии выпускающий контроль качества.
        /// </summary>
        [DataMember(Name = "control_name", IsRequired = false)]
        public string ControlName { get; set; }

        /// <summary>
        /// Идентификатор производителя стадии выпускающий контроль качества.
        /// </summary>
        [DataMember(Name = "control_id", IsRequired = false)]
        public string ControlID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.2. Ошибка поиска КИЗ
    /// </summary>
    [DataContract]
    public class SgtinFailed
    {
        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string Sgtin { get; set; }

        /// <summary>
        /// Код ошибки:
        /// 2 — не найден,
        /// 4 — доступ запрещен
        /// </summary>
        [DataMember(Name = "error_code")]
        public int ErrorCode { get; set; }

        /// <summary>
        /// Текстовое описание ошибки
        /// </summary>
        [DataMember(Name = "error_desc")]
        public string ErrorDescription { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.39. Формат объекта SgtinsFilter
    /// Таблица 35. Формат объекта SgtinsFilter
    /// 8.3.1. Метод для поиска по реестру КИЗ.
    /// </summary>
    [DataContract]
    public class SgtinFilter
    {
        /// <summary>
        /// Статус (см. Список возможных статусов КИЗ, <see cref="SgtinStatus"/>)
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public string[] Status { get; set; }

        /// <summary>
        /// Тип эмиссии:
        /// 1 — собственное,
        /// 2 — контрактное,
        /// 3 — иностранное производство,
        /// 4 — маркирован на таможне.
        /// См. <see cref="SgtinEmissionType"/>.
        /// </summary>
        [DataMember(Name = "emission_type", IsRequired = false)]
        public int[] EmissionType { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Торговое наименованиe
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin", IsRequired = false)]
        public string Sgtin { get; set; }

        /// <summary>
        /// SSCC (Идентификатор третичной упаковки)
        /// </summary>
        [DataMember(Name = "pack3_id", IsRequired = false)]
        public string Sscc { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "batch", IsRequired = false)]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sys_id", IsRequired = false)]
        public string SystemSubjectID { get; set; } // "0c290e4a-aabb-40ae-8ef2-ce462561ce7f",

        /// <summary>
        /// Дата упаковки, начала временного диапазона — дата ввода в гражданский оборот
        /// </summary>
        [DataMember(Name = "release_date_from", IsRequired = false)]
        public DateTime? ReleaseDateFrom { get; set; }

        /// <summary>
        /// Дата упаковки, конец временного диапазона — дата окончания в гражданский оборот
        /// </summary>
        [DataMember(Name = "release_date_to", IsRequired = false)]
        public DateTime? ReleaseDateTo { get; set; }

        /// <summary>
        /// Дата начала периода регистрации
        /// </summary>
        [DataMember(Name = "emission_operation_date_from", IsRequired = false)]
        public DateTime? EmissionDateFrom { get; set; }

        /// <summary>
        /// Дата окончания периода регистрации
        /// </summary>
        [DataMember(Name = "emission_operation_date_to", IsRequired = false)]
        public DateTime? EmissionDateTo { get; set; }

        /// <summary>
        /// Дата начала периода выполнения последней операции
        /// </summary>
        [DataMember(Name = "last_tracing_op_date_from", IsRequired = false)]
        public DateTime? LastTracingDateFrom { get; set; }

        /// <summary>
        /// Дата окончания периода выполнения последней операции
        /// </summary>
        [DataMember(Name = "last_tracing_op_date_to", IsRequired = false)]
        public DateTime? LastTracingDateTo { get; set; }

        /// <summary>
        /// Источник финансирования.
        /// Возможные значения см. в XSD описании базовых типов комплекта схем:
        /// 1 — собственные средства,
        /// 2 — средства федерального бюджета,
        /// 3 — средства регионального бюджета
        /// </summary>
        [DataMember(Name = "source_type", IsRequired = false)]
        public int[] SourceType { get; set; }

        /// <summary>
        /// Идентификатор заказа системы управления заказами (СУЗ), Guid
        /// </summary>
        [DataMember(Name = "oms_order_id", IsRequired = false)]
        public string OmsOrderID { get; set; }

        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug", IsRequired = false)]
        public bool? VznDrug { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp", IsRequired = false)]
        public bool? Gnvlp { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.6. КИЗ, ожидающий вывода из оборота по чеку от контрольно-кассовой техники (ККТ).
    /// </summary>
    [DataContract]
    public class SgtinKktAwaitingWithdrawal
    {
        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin")]
        public string Sgtin { get; set; }

        /// <summary>
        /// Тип реализации
        /// 0 — розничная продажа
        /// 1 — отпуск по льготному рецепту
        /// </summary>
        [DataMember(Name = "sold_type")]
        public int SoldType { get; set; }

        /// <summary>
        /// Статус обработки
        /// 0 — принято
        /// 1 — в обработке
        /// 2 — завершено
        /// 3 — завершено с ошибкой
        /// </summary>
        [DataMember(Name = "status")]
        public int Status { get; set; }

        /// <summary>
        /// Дата операции из чека
        /// </summary>
        [DataMember(Name = "op_date")]
        public DateTime OperationDate { get; set; }

        /// <summary>
        /// ИНН из чека
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// Статус последней проверки
        /// </summary>
        [DataMember(Name = "last_check_status", IsRequired = false)]
        public LastCheckStatus LastCheckStatus { get; set; }

        /// <summary>
        /// Розничная цена, в коп. (обязательно при SoldType = 0)
        /// </summary>
        [DataMember(Name = "price", IsRequired = false)]
        public decimal? Price { get; set; }

        /// <summary>
        /// Сумма НДС (если сделка облагается НДС), в коп.        /// </summary>
        [DataMember(Name = "vat_value", IsRequired = false)]
        public decimal? VatValue { get; set; }

        /// <summary>
        /// Доля от вторичной упаковки (доля вида 1/2)
        /// </summary>
        [DataMember(Name = "sold_part", IsRequired = false)]
        public string SoldPart { get; set; }

        /// <summary>
        /// Сумма скидки, в коп.        /// </summary>
        [DataMember(Name = "discount", IsRequired = false)]
        public decimal? Discount { get; set; }

        /// <summary>
        /// Номер льготного рецепта
        /// </summary>
        [DataMember(Name = "prescription_num", IsRequired = false)]
        public string PrescriptionNumber { get; set; }

        /// <summary>
        /// Дата льготного рецепта
        /// </summary>
        [DataMember(Name = "prescription_num", IsRequired = false)]
        public DateTime? PrescriptionDate { get; set; }

        /// <summary>
        /// Серия льготного рецепта
        /// </summary>
        [DataMember(Name = "prescription_series", IsRequired = false)]
        public string PrescriptionSeries { get; set; }

        /// <summary>
        /// Уникальный идентификатор РЭ или РВ
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = false)]
        public string DeviceID { get; set; }

        /// <summary>
        /// Уникальный идентификатор системы, сформировавшей сообщение
        /// </summary>
        [DataMember(Name = "skzkm_origin_msg_id", IsRequired = false)]
        public string SkskmOriginMessageID { get; set; }

        /// <summary>
        /// Идентификатор организации-отправителя
        /// </summary>
        [DataMember(Name = "subject_id", IsRequired = false)]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// Идентификатор XML-документа
        /// </summary>
        [DataMember(Name = "xml_document_id", IsRequired = false)]
        public string XmlDocumentID { get; set; }

        /// <summary>
        /// Дата фактического получения чека в системе
        /// </summary>
        [DataMember(Name = "op_exec_date")]
        public DateTime OperationExecutionDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.3.5. Метод для поиска по реестру КИЗ всех записей со статусом 'Оборот приостановлен'
    /// </summary>
    [DataContract]
    public class SgtinOnHoldFilter
    {
        /// <summary>
        /// ИНН владельца
        /// </summary>
        [DataMember(Name = "inn", IsRequired = false)]
        public string Inn { get; set; }

        /// <summary>
        /// Тип эмиссии:
        /// 1 — собственное,
        /// 2 — контрактное,
        /// 3 — иностранное производство,
        /// 4 — маркирован на таможне.
        /// См. <see cref="SgtinEmissionType"/>.
        /// </summary>
        [DataMember(Name = "emission_type", IsRequired = false)]
        public int[] EmissionType { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Торговое наименованиe
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// SGTIN (КИЗ)
        /// </summary>
        [DataMember(Name = "sgtin", IsRequired = false)]
        public string Sgtin { get; set; }

        /// <summary>
        /// SSCC (Идентификатор третичной упаковки)
        /// </summary>
        [DataMember(Name = "pack3_id", IsRequired = false)]
        public string Sscc { get; set; }

        /// <summary>
        /// Номер производственной серии
        /// </summary>
        [DataMember(Name = "batch", IsRequired = false)]
        public string BatchNumber { get; set; }

        /// <summary>
        /// Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "sys_id", IsRequired = false)]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// Дата упаковки, начала временного диапазона — дата ввода в гражданский оборот
        /// </summary>
        [DataMember(Name = "release_date_from", IsRequired = false)]
        public DateTime? ReleaseDateFrom { get; set; }

        /// <summary>
        /// Дата упаковки, конец временного диапазона — дата окончания в гражданский оборот
        /// </summary>
        [DataMember(Name = "release_date_to", IsRequired = false)]
        public DateTime? ReleaseDateTo { get; set; }

        /// <summary>
        /// Дата начала периода регистрации
        /// </summary>
        [DataMember(Name = "emission_operation_date_from", IsRequired = false)]
        public DateTime? EmissionDateFrom { get; set; }

        /// <summary>
        /// Дата окончания периода регистрации
        /// </summary>
        [DataMember(Name = "emission_operation_date_to", IsRequired = false)]
        public DateTime? EmissionDateTo { get; set; }

        /// <summary>
        /// Дата начала периода выполнения последней операции
        /// </summary>
        [DataMember(Name = "last_tracing_op_date_from", IsRequired = false)]
        public DateTime? LastTracingDateFrom { get; set; }

        /// <summary>
        /// Дата окончания периода выполнения последней операции
        /// </summary>
        [DataMember(Name = "last_tracing_op_date_to", IsRequired = false)]
        public DateTime? LastTracingDateTo { get; set; }

        /// <summary>
        /// Идентификатор заказа системы управления заказами (СУЗ), Guid
        /// </summary>
        [DataMember(Name = "oms_order_id", IsRequired = false)]
        public string OmsOrderID { get; set; }

        /// <summary>
        /// Информация о биллинге
        /// </summary>
        [DataMember(Name = "billing_info", IsRequired = false)]
        public SgtinBillingInformation BillingInfo { get; set; }

        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug", IsRequired = false)]
        public bool? VznDrug { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp", IsRequired = false)]
        public bool? Gnvlp { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.37. Формат объекта SgtinPaymentInformation
    /// Таблица 33. Формат объекта SgtinPaymentInformation
    /// </summary>
    [DataContract]
    public class SgtinPaymentInformation
    {
        /// <summary>
        /// Дата создания
        /// </summary>
        [DataMember(Name = "created_date", IsRequired = false)]
        public DateTime? CreatedDate { get; set; }

        /// <summary>
        /// Дата оплаты платежа
        /// </summary>
        [DataMember(Name = "payment_date", IsRequired = false)]
        public DateTime? PaymentDate { get; set; }

        /// <summary>
        /// Тариф оплаты
        /// </summary>
        [DataMember(Name = "tariff", IsRequired = false)]
        public decimal? Tariff { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.43. Список возможных статусов КИЗ
    /// Таблица 39. Статусы КИЗ
    /// </summary>
    public class SgtinStatus
    {
        /// <summary>
        /// Ожидает выпуска.
        /// </summary>
        public const string MARKED = "marked";

        /// <summary>
        /// Отобран образец.
        /// </summary>
        public const string LP_SAMPLED = "lp_sampled";

        /// <summary>
        /// Передан на уничтожение.
        /// </summary>
        public const string MOVED_FOR_DISPOSAL = "moved_for_disposal";

        /// <summary>
        /// Уничтожен.
        /// </summary>
        public const string DISPOSED = "disposed";

        /// <summary>
        /// Выведен из оборота.
        /// </summary>
        public const string OUT_OF_CIRCULATION = "out_of_circulation";

        /// <summary>
        /// Ожидает подтверждения получения собственником.
        /// </summary>
        public const string TRANSFERED_TO_OWNER = "transfered_to_owner";

        /// <summary>
        /// Отгружен в РФ.
        /// </summary>
        public const string SHIPPED = "shipped";

        /// <summary>
        /// Ввезен на территорию РФ.
        /// </summary>
        public const string ARRIVED = "arrived";

        /// <summary>
        /// Задекларирован.
        /// </summary>
        public const string DECLARED = "declared";

        /// <summary>
        /// В обороте.
        /// </summary>
        public const string IN_CIRCULATION = "in_circulation";

        /// <summary>
        /// Отгружен.
        /// </summary>
        public const string IN_REALIZATION = "in_realization";

        /// <summary>
        /// Оборот приостановлен.
        /// </summary>
        public const string PAUSED_CIRCULATION = "paused_circulation";

        /// <summary>
        /// Продан в розницу.
        /// </summary>
        public const string IN_SALE = "in_sale";

        /// <summary>
        /// Отпущен по льготному рецепту.
        /// </summary>
        public const string IN_DISCOUNT_PRESCRIPTION_SALE = "in_discount_prescription_sale";

        /// <summary>
        /// Выдан для медицинского применения.
        /// </summary>
        public const string IN_MEDICAL_USE = "in_medical_use";

        /// <summary>
        /// Перемаркирован.
        /// </summary>
        public const string RELABELED = "relabeled";

        /// <summary>
        /// Реэкспорт.
        /// </summary>
        public const string REEXPORTED = "reexported";

        /// <summary>
        /// Ожидает передачи собственнику.
        /// </summary>
        public const string RELEASED_CONTRACT = "released_contract";

        /// <summary>
        /// • для типа эмиссии 3 — Ожидает отгрузки в РФ
        /// • для типа эмиссии 4 — Маркирован в ЗТК.
        /// </summary>
        public const string RELEASED_FOREIGN = "released_foreign";

        /// <summary>
        /// Отгружен на незарегистрированное место деятельности.
        /// </summary>
        public const string MOVED_TO_UNREGISTERED = "moved_to_unregistered";

        /// <summary>
        /// Срок годности истек.
        /// </summary>
        public const string EXPIRED = "expired";

        /// <summary>
        /// Ожидает подтверждения смены собственника.
        /// </summary>
        public const string CHANGE_OWNER = "change_owner";

        /// <summary>
        /// Ожидает подтверждения получения новым владельцем.
        /// </summary>
        public const string CHANGE_OWNER_STATE_GOV = "change_owner_state_gov";

        /// <summary>
        /// Ожидает подтверждения возврата приостановленных лекарственных препаратов.
        /// </summary>
        public const string CONFIRM_RETURN_PAUSED = "confirm_return_paused";

        /// <summary>
        /// Выведен из оборота (накопленный в рамках эксперимента).
        /// </summary>
        public const string EXPERIMENT_OUTBOUND = "experiment_outbound";

        /// <summary>
        /// Частично выдан для медицинского применения.
        /// </summary>
        public const string IN_PARTIAL_MEDICAL_USE = "in_partial_medical_use";

        /// <summary>
        /// Частично продан в розницу.
        /// </summary>
        public const string IN_PARTIAL_SALE = "in_partial_sale";

        /// <summary>
        /// Частично отпущен по льготному рецепту.
        /// </summary>
        public const string IN_PARTIAL_DISCOUNT_PRESCRIPTION_SALE = "in_partial_discount_prescription_sale";

        /// <summary>
        /// Отгружен в ЕАЭС.
        /// </summary>
        public const string MOVED_TO_EEU = "moved_to_eeu";

        /// <summary>
        /// Принят на склад из ЗТК.
        /// </summary>
        public const string MOVED_TO_WAREHOUSE = "moved_to_warehouse";

        /// <summary>
        /// Эмитирован.
        /// </summary>
        public const string EMISSION = "emission";

        /// <summary>
        /// Продан в розницу с использованием ККТ с ошибкой.
        /// </summary>
        public const string OFD_RETAIL_ERROR = "ofd_retail_error";

        /// <summary>
        /// Отпущен по льготному рецепту с использованием ККТ с ошибкой.
        /// </summary>
        public const string OFD_DISCOUNT_PRESCRIPTION_ERROR = "ofd_discount_prescription_error";

        /// <summary>
        /// Ожидает подтверждения получения собственником до ввода в оборот.
        /// </summary>
        public const string TRANSFERRED_FOR_RELEASE = "transferred_for_release";

        /// <summary>
        /// Ожидает ввода в оборот собственником.
        /// </summary>
        public const string WAITING_FOR_RELEASE = "waiting_for_release";

        /// <summary>
        /// Эмитирован.
        /// </summary>
        public const string EMITTED = "emitted";

        /// <summary>
        /// Ожидает выпуска, не оплачен.
        /// </summary>
        public const string MARKED_NOT_PAID = "marked_not_paid";

        /// <summary>
        /// • для типа эмиссии 3 — Ожидает отгрузки в РФ, не оплачен
        /// • для типа эмиссии 4 — Маркирован в ЗТК, не оплачен
        /// </summary>
        public const string RELEASED_FOREIGN_NOT_PAID = "released_foreign_not_paid";

        /// <summary>
        /// Истек срок ожидания оплаты.
        /// </summary>
        public const string EXPIRED_NOT_PAID = "expired_not_paid";

        /// <summary>
        /// Эмитирован, готов к использованию.
        /// </summary>
        public const string EMITTED_PAID = "emitted_paid";

        /// <summary>
        /// Отпущен по льготному рецепту с использованием РВ с ошибкой.
        /// </summary>
        public const string DISCOUNT_PRESCRIPTION_ERROR = "discount_prescription_error";

        /// <summary>
        /// Выдан для медицинского применения с использованием РВ с ошибкой.
        /// </summary>
        public const string MED_CARE_ERROR = "med_care_error";

        /// <summary>
        /// Принят на склад из ЗТК.
        /// </summary>
        public const string DECLARED_WAREHOUSE = "declared_warehouse";

        /// <summary>
        /// Передан для маркировки в ЗТК.
        /// </summary>
        public const string TRANSFERRED_TO_CUSTOMS = "transferred_to_customs";

        /// <summary>
        /// Ожидает подтверждения импортером.
        /// </summary>
        public const string TRANSFERRED_TO_IMPORTER = "transferred_to_importer";

        /// <summary>
        /// В арбитраже.
        /// </summary>
        public const string IN_ARBITRATION = "in_arbitration";

        /// <summary>
        /// Ожидает подтверждения.
        /// </summary>
        public const string WAITING_CONFIRMATION = "waiting_confirmation";

        /// <summary>
        /// Ожидает подтверждения возврата.
        /// </summary>
        public const string TRANSFER_TO_PRODUCTION = "transfer_to_production";

        /// <summary>
        /// Ожидает подтверждения корректировки.
        /// </summary>
        public const string WAITING_CHANGE_PROPERTY = "waiting_change_property";

        /// <summary>
        /// Не использован.
        /// </summary>
        public const string ELIMINATED = "eliminated";
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.13.1. Получение сводной информации распределения ЛП
    /// </summary>
    [DataContract]
    public class ShortDistribution
    {
        /// <summary>
        /// Уникальный идентификатор GTIN лекарственного препарата.
        /// </summary>
        [DataMember(Name = "gtin")]
        public string Gtin { get; set; }

        /// <summary>
        /// Информация о производственных сериях, см. <see cref="BatchInfo"/>
        /// </summary>
        [DataMember(Name = "batches")]
        public BatchInfo[] Batches { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.3. Информация о полной иерархии вложенности третичной упаковки
    /// </summary>
    /// <remarks>
    /// Ошибка в документации: сказано, что Up и Down — массивы.
    /// Написал в техподдержку: заявка SR00499639.
    /// </remarks>
    [DataContract]
    public class SsccFullHierarchyResponse<T>
    {
        /// <summary>
        /// Иерархия вложенности "вверх".
        /// </summary>
        [DataMember(Name = "up")]
        public T Up { get; set; }

        /// <summary>
        /// Иерархия вложенности "вниз".
        /// </summary>
        [DataMember(Name = "down")]
        public T Down { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.1. Информация об иерархии вложенности третичной упаковки
    /// </summary>
    [DataContract]
    public class SsccHierarchyResponse<T>
    {
        /// <summary>
        /// Иерархия вложенности "вверх".
        /// </summary>
        /// <remarks>
        /// Описывающий иерархию вложенности "вверх" массив упорядочен согласно уровням
        /// вложенности упаковки и в качестве первого элемента содержит описание для
        /// запрошенного идентификационного кода третичной упаковки, а в качестве последнего
        /// элемента — описание для идентификационного кода третичной упаковки самого верхнего
        /// уровня.
        /// </remarks>
        [DataMember(Name = "up")]
        public T[] Up { get; set; }

        /// <summary>
        /// Иерархия вложенности "вниз".
        /// </summary>
        /// <remarks>
        /// Содержит информацию о вложенности третичной упаковки,
        /// начиная с запрошенного идентификационного кода третичной упаковки.
        /// </remarks>
        [DataMember(Name = "down")]
        public T[] Down { get; set; }

        /// <summary>
        /// Код ошибки: 2 — не найден, 4 — доступ запрещен
        /// </summary>
        /// <remarks>
        /// В случае успешного поиска информация об ошибке отсутствует
        /// </remarks>
        [DataMember(Name = "error_code", IsRequired = false)]
        public int? ErrorCode { get; set; }

        /// <summary>
        /// Описание ошибки
        /// </summary>
        /// <remarks>
        /// В случае успешного поиска информация об ошибке отсутствует
        /// </remarks>
        [DataMember(Name = "error_desc", IsRequired = false)]
        public string ErrorDescription { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.1. Информация об иерархии вложенности третичной упаковки
    /// </summary>
    [DataContract]
    public class SsccInfo
    {
        /// <summary>
        /// Идентификационный код третичной упаковки
        /// </summary>
        [DataMember(Name = "sscc")]
        public string Sscc { get; set; }

        /// <summary>
        /// Дата и время совершения операции упаковки
        /// </summary>
        [DataMember(Name = "release_date")]
        public DateTime ReleaseDate { get; set; }

        /// <summary>
        /// Идентификатор субъекта обращения, осуществившего операцию упаковки
        /// </summary>
        /// <remarks>
        /// Идентификационный код SysID или BranchID
        /// </remarks>
        [DataMember(Name = "system_subj_id")]
        public string SystemSubjectID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.4.2. Фильтр для получения информации о КИЗ, вложенных в третичную упаковку
    /// </summary>
    [DataContract]
    public class SsccSgtinsFilter
    {
        /// <summary>
        /// Признак, отображающий, относится ли ЛП к списку 7ВЗН
        /// </summary>
        [DataMember(Name = "vzn_drug", IsRequired = false)]
        public bool? VznDrug { get; set; }

        /// <summary>
        /// Признак наличия в ЖНВЛП
        /// </summary>
        [DataMember(Name = "gnvlp", IsRequired = false)]
        public bool? Gnvlp { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.7.3. Метод фильтрации доверенных контрагентов
    /// Формат объекта TrustedPartnerEntry
    /// </summary>
    [DataContract]
    public class TrustedPartnerEntry
    {
        /// <summary>
        /// Идентификатор доверенного контрагента как субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "system_subj_id")]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// ИНН/ITIN доверенного контрагента
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// Наименование доверенного контрагента
        /// </summary>
        [DataMember(Name = "org_name")]
        public string OrganizationName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.7.3. Метод фильтрации доверенных контрагентов
    /// Формат объекта TrustedPartnerFilter
    /// </summary>
    [DataContract]
    public class TrustedPartnerFilter
    {
        /// <summary>
        /// Идентификатор доверенного контрагента как субъекта обращения в «ИС "Маркировка". МДЛП»
        /// </summary>
        [DataMember(Name = "trusted_sys_id", IsRequired = false)]
        public string SystemSubjectID { get; set; }

        /// <summary>
        /// ИНН/ITIN доверенного контрагента
        /// </summary>
        [DataMember(Name = "trusted_inn", IsRequired = false)]
        public string Inn { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.23. Формат объекта User
    /// Таблица 19. Формат объекта User
    /// </summary>
    [DataContract]
    public class User : UserBase
    {
        /// <summary>
        /// Уникальный идентификатор пользователя
        /// </summary>
        [DataMember(Name = "user_id", IsRequired = true)]
        public string UserID { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// Базовая информация о пользователе
    /// </summary>
    [DataContract]
    public abstract class UserBase
    {
        /// <summary>
        /// Имя пользователя
        /// </summary>
        [DataMember(Name = "first_name", IsRequired = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Фамилия пользователя
        /// </summary>
        [DataMember(Name = "last_name", IsRequired = true)]
        public string LastName { get; set; }

        /// <summary>
        /// Отчество пользователя
        /// </summary>
        [DataMember(Name = "middle_name", IsRequired = false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Должность пользователя
        /// </summary>
        [DataMember(Name = "position", IsRequired = false)]
        public string Position { get; set; }

        /// <summary>
        /// Контактный телефон пользователя
        /// </summary>
        [DataMember(Name = "phone", IsRequired = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Статус пользователя, см. значения <see cref="UserStatus"/>.
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public string Status { get; set; }

        /// <summary>
        /// Причина, по которой пользователь переведен в статус, см. значения <see cref="UserStatusReason"/>.
        /// </summary>
        [DataMember(Name = "status_change_reason", IsRequired = false)]
        public string StatusChangeReason { get; set; }

        /// <summary>
        /// Дата и время последнего входа в систему.
        /// </summary>
        [DataMember(Name = "last_login_time", IsRequired = false)]
        public DateTime? LastLoginTime { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.1.9. Метод для получения информации о зарегистрированных сертификатах текущего пользователя
    /// 6.1.10. Метод для получения информации о зарегистрированных сертификатах пользователя
    /// Формат объекта UserCert    /// </summary>
    [DataContract]
    public class UserCertificate
    {
        /// <summary>
        /// Серийный номер публичного сертификата пользователя
        /// </summary>
        [DataMember(Name = "public_cert_serial_number", IsRequired = true)]
        public string PublicCertificateSerialNumber { get; set; }

        /// <summary>
        /// Отпечаток публичного сертификата пользователя
        /// </summary>
        [DataMember(Name = "public_cert_thumbprint", IsRequired = true)]
        public string PublicCertificateThumbprint { get; set; }

        /// <summary>
        /// Действует с
        /// </summary>
        [DataMember(Name = "valid_from", IsRequired = true)]
        public DateTime ValidFrom { get; set; }

        /// <summary>
        /// Действует до
        /// </summary>
        [DataMember(Name = "valid_to", IsRequired = true)]
        public DateTime ValidTo { get; set; }

        /// <summary>
        /// Наименование организации
        /// </summary>
        [DataMember(Name = "org_name", IsRequired = true)]
        public string OrganizationName { get; set; }

        /// <summary>
        /// Владелец
        /// </summary>
        [DataMember(Name = "owner", IsRequired = true)]
        public string Owner { get; set; }

        /// <summary>
        /// Выписан на (ФИО владельца)
        /// </summary>
        [DataMember(Name = "owner_fio", IsRequired = true)]
        public string OwnerFio { get; set; }

        /// <summary>
        /// ИНН
        /// </summary>
        [DataMember(Name = "inn", IsRequired = true)]
        public string Inn { get; set; }

        /// <summary>
        /// Должность
        /// </summary>
        [DataMember(Name = "position", IsRequired = false)]
        public string Position { get; set; }

        /// <summary>
        /// Выдан кем
        /// </summary>
        [DataMember(Name = "issuer_name", IsRequired = true)]
        public string IssuerName { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 4.30. Формат объекта UserEditProfileEntry
    /// Таблица 26. Формат объекта UserEditProfileEntry
    /// </summary>
    [DataContract]
    public class UserEditProfileEntry : UserBase    {
        /// <summary>
        /// Электронная почта
        /// </summary>
        [DataMember(Name = "email", IsRequired = true)]
        public string Email { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// 6.7.2. Метод для поиска зарегистрированных пользователей по фильтру
    /// Формат объекта UserFilter
    /// </summary>
    [DataContract]
    public class UserFilter
    {
        /// <summary>
        /// Имя пользователя
        /// </summary>
        [DataMember(Name = "first_name", IsRequired = false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Фамилия пользователя
        /// </summary>
        [DataMember(Name = "last_name", IsRequired = false)]
        public string LastName { get; set; }

        /// <summary>
        /// Отчество пользователя
        /// </summary>
        [DataMember(Name = "middle_name", IsRequired = false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Логин пользователя
        /// </summary>
        [DataMember(Name = "login", IsRequired = false)]
        public string Login { get; set; }

        /// <summary>
        /// Признак администратора участника
        /// </summary>
        [DataMember(Name = "is_admin", IsRequired = false)]
        public bool? IsAdmin { get; set; }

        /// <summary>
        /// Статусы пользователей, см. значения <see cref="UserStatus"/>.
        /// </summary>
        [DataMember(Name = "statuses", IsRequired = false)]
        public string[] Statuses { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Настройки профиля текущего пользователя
    /// </summary>
    [DataContract]
    internal class UserPreferences
    {
        /// <summary>
        /// Язык интерфейса пользователя (ru/en)
        /// </summary>
        [DataMember(Name = "language", IsRequired = true)]
        public string Language { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System.Runtime.Serialization;

    /// <summary>
    /// Список записей:
    /// 6.7.2. Метод для поиска зарегистрированных пользователей по фильтру
    /// </summary>
    /// <typeparam name="T">Тип поля Entries</typeparam>
    [DataContract]
    public class UsersResponse<T>
    {
        /// <summary>
        /// Список записей
        /// </summary>
        [DataMember(Name = "users", IsRequired = true)]
        public T[] Users { get; set; }

        /// <summary>
        /// Общее количество записей
        /// </summary>
        [DataMember(Name = "total", IsRequired = true)]
        public int Total { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.15. Список статусов пользователя (UserStatus)    /// Таблица 11. Список статусов пользователя
    /// </summary>
    public class UserStatus
    {
        /// <summary>
        /// Активен.
        /// </summary>
        public const string ACTIVE = "ACTIVE";

        /// <summary>
        /// Заблокирован.
        /// </summary>
        public const string BLOCKED = "BLOCKED";

        /// <summary>
        /// Удален.
        /// </summary>
        public const string DELETED = "DELETED";
    }
}

namespace MdlpApiClient.DataContracts
{
    /// <summary>
    /// 4.16. Список причин смены статуса пользователя (UserStatusReason)
    /// Таблица 12. Список причин смены статуса пользователя
    /// </summary>
    public class UserStatusReason
    {
        /// <summary>
        /// Заблокирован вручную.
        /// </summary>
        public const string MANUAL_BLOCK = "MANUAL_BLOCK";

        /// <summary>
        /// Временно заблокирован по причине превышения количества неверных попыток входа.
        /// </summary>
        public const string TEMPORARY_BLOCK = "TEMPORARY_BLOCK";

        /// <summary>
        /// Заблокирован по причине длительного бездействия.
        /// </summary>
        public const string INACTIVE_BLOCK = "INACTIVE_BLOCK";

        /// <summary>
        /// Заблокирован по причине истечения срока действия пароля.
        /// </summary>
        public const string PASSWORD_EXPIRED = "PASSWORD_EXPIRED";
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.11.1. Фильтрация по реестру виртуального склада
    /// Структура данных VirtualStorageEntry
    /// </summary>
    [DataContract]
    public class VirtualStorageEntry
    {
        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = true)]
        public string Gtin { get; set; }

        /// <summary>
        /// Идентификатор МД/МОХ
        /// </summary>
        [DataMember(Name = "storage_id", IsRequired = true)]
        public string StorageID { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "prod_sell_name", IsRequired = true)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = true)]
        public string ProductName { get; set; }

        /// <summary>
        /// Наименование держателя РУ
        /// </summary>
        [DataMember(Name = "reg_holder", IsRequired = true)]
        public string RegistrationHolder { get; set; }

        /// <summary>
        /// Приход (всего), шт
        /// </summary>
        [DataMember(Name = "total_income", IsRequired = true)]
        public long TotalIncome { get; set; }

        /// <summary>
        /// Выбытие (всего), шт
        /// </summary>
        [DataMember(Name = "total_outcome", IsRequired = true)]
        public long TotalOutcome { get; set; }

        /// <summary>
        /// Розничные продажи (выбытие), шт
        /// </summary>
        [DataMember(Name = "retail_sale", IsRequired = true)]
        public long RetailSale { get; set; }

        /// <summary>
        /// Отпуск по льготному рецепту (выбытие), шт
        /// </summary>
        [DataMember(Name = "discount_sale", IsRequired = true)]
        public long DiscountSale { get; set; }

        /// <summary>
        /// Медицинское применение (выбытие), шт
        /// </summary>
        [DataMember(Name = "medical_use", IsRequired = true)]
        public long MedicalUse { get; set; }

        /// <summary>
        /// Оптовые продажи (выбытие), шт
        /// </summary>
        [DataMember(Name = "wholesale", IsRequired = true)]
        public long Wholesale { get; set; }

        /// <summary>
        /// Прочее (выбытие), шт
        /// </summary>
        [DataMember(Name = "other", IsRequired = true)]
        public long OtherOutcome { get; set; }

        /// <summary>
        /// Производство (приход), шт
        /// </summary>
        [DataMember(Name = "production", IsRequired = true)]
        public long Production { get; set; }

        /// <summary>
        /// Закупка в РФ (приход), шт
        /// </summary>
        [DataMember(Name = "purchase_in_russia", IsRequired = true)]
        public long PurchaseInRussia { get; set; }

        /// <summary>
        /// Импорт (приход), шт
        /// </summary>
        [DataMember(Name = "import", IsRequired = true)]
        public long Import { get; set; }

        /// <summary>
        /// Баланс на входе, шт
        /// </summary>
        [DataMember(Name = "opening_balance", IsRequired = true)]
        public long OpeningBalance { get; set; }

        /// <summary>
        /// Баланс на выходе, шт
        /// </summary>
        [DataMember(Name = "ending_balance", IsRequired = true)]
        public long EndingBalance { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.11.1. Фильтрация по реестру виртуального склада
    /// Структура данных VirtualStorageFilter
    /// </summary>
    [DataContract]
    public class VirtualStorageFilter
    {
        /// <summary>
        /// Идентификатор МД/МОХ (обязательно)
        /// </summary>
        [DataMember(Name = "storage_id", IsRequired = true)]
        public string StorageID { get; set; }

        /// <summary>
        /// Начало выбранного периода
        /// </summary>
        [DataMember(Name = "start_date", IsRequired = false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Конец выбранного периода
        /// </summary>
        [DataMember(Name = "end_date", IsRequired = false)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// GTIN
        /// </summary>
        [DataMember(Name = "gtin", IsRequired = false)]
        public string Gtin { get; set; }

        /// <summary>
        /// Торговое наименованиe лекарственного препарата
        /// Например: Гертикад®
        /// </summary>
        [DataMember(Name = "prod_sell_name", IsRequired = false)]
        public string ProductSellingName { get; set; }

        /// <summary>
        /// Международное непатентованное наименование, или группировочное, или химическое наименование
        /// Например: ТРАСТУЗУМАБ
        /// </summary>
        [DataMember(Name = "prod_name", IsRequired = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Наименование держателя РУ
        /// </summary>
        [DataMember(Name = "reg_holder", IsRequired = false)]
        public string RegistrationHolder { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.2.2. Место ответственного хранения
    /// </summary>
    [DataContract]
    public class WarehouseEntry
    {
        /// <summary>
        /// Код сущности (для методов, возвращающих места и склады в одном списке, например, 7.8.1).
        /// </summary>
        public const int EntityType = 1;

        /// <summary>
        /// Уникальный идентификатор места ответственного хранения
        /// </summary>
        [DataMember(Name = "id")]
        public string ID { get; set; }

        /// <summary>
        /// Код субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_code")]
        public string FederalSubjectCode { get; set; }

        /// <summary>
        /// Название субъекта РФ
        /// </summary>
        [DataMember(Name = "federal_subject_name")]
        public string FederalSubjectName { get; set; }

        /// <summary>
        /// Название организации
        /// </summary>
        [DataMember(Name = "org_name")]
        public string OrgName { get; set; }

        /// <summary>
        /// ИНН юридического лица
        /// </summary>
        [DataMember(Name = "inn")]
        public string Inn { get; set; }

        /// <summary>
        /// Перечень работ/услуг согласно лицензии
        /// </summary>
        [DataMember(Name = "work_list")]
        public string[] WorkList { get; set; }

        /// <summary>
        /// Адрес места осуществления деятельности
        /// </summary>
        [DataMember(Name = "address")]
        public Address Address { get; set; }

        /// <summary>
        /// Название владельца лицензии
        /// </summary>
        [DataMember(Name = "warehouse_org_name")]
        public string WarehouseOrgName { get; set; }

        /// <summary>
        /// ИНН владельца лицензии
        /// </summary>
        [DataMember(Name = "warehouse_org_inn")]
        public string WarehouseOrgInn { get; set; }

        /// <summary>
        /// Статус:
        /// 0 — не действует,
        /// 1 — действует,
        /// 2 — в процессе приостановления
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public int? Status { get; set; }

        /// <summary>
        /// Дата регистрации
        /// </summary>
        [DataMember(Name = "registration_date")]
        public DateTime RegistrationDate { get; set; }

        /// <summary>
        /// Дата приостановления
        /// </summary>
        [DataMember(Name = "suspension_date", IsRequired = false)]
        public DateTime? SuspensionDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.2.2. Метод для поиска информации о местах ответственного хранения по фильтру
    /// </summary>
    [DataContract]
    public class WarehouseFilter
    {
        /// <summary>
        /// Уникальный идентификатор места ответственного хранения
        /// </summary>
        [DataMember(Name = "warehouse_id", IsRequired = false)]
        public string WarehouseID { get; set; }

        /// <summary>
        /// Уникальный идентификатор дома
        /// </summary>
        [DataMember(Name = "houseguid", IsRequired = false)]
        public string HouseGuid { get; set; }

        /// <summary>
        /// Статус: 0 — не действует, 1 — действует, 2 — в процессе приостановления
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public int? Status { get; set; }

        /// <summary>
        /// Дата начала периода фильтрации по дате регистрации
        /// </summary>
        [DataMember(Name = "start_date", IsRequired = false)]
        public CustomDateTime StartDate { get; set; }

        /// <summary>
        /// Дата окончания периода фильтрации по дате регистрации
        /// </summary>
        [DataMember(Name = "end_date", IsRequired = false)]
        public CustomDateTime EndDate { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.10.2. Фильтрация по реестру регистраторов выбытия
    /// </summary>
    [DataContract]
    public class WithdrawalDeviceFilter
    {
        /// <summary>
        /// Уникальный идентификатор устройства
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = false)]
        public string DeviceID { get; set; }

        /// <summary>
        /// Дата предоставления, начало периода фильтрации
        /// </summary>
        [DataMember(Name = "provision_start_date", IsRequired = false)]
        public CustomDate ProvisionStartDate { get; set; }

        /// <summary>
        /// Дата предоставления, окончание периода фильтрации
        /// </summary>
        [DataMember(Name = "provision_end_date", IsRequired = false)]
        public CustomDate ProvisionEndDate { get; set; }

        /// <summary>
        /// Идентификатор места деятельности согласно лицензии
        /// </summary>
        [DataMember(Name = "branch_id", IsRequired = false)]
        public string BranchID { get; set; }

        /// <summary>
        /// Тип размещения
        /// 0 — по месту использования
        /// 1 — ЦОД оператора
        /// 2 — по адресу МД
        /// </summary>
        [DataMember(Name = "placement_type", IsRequired = false)]
        public int? PlacementType { get; set; }

        /// <summary>
        /// Статус
        /// 0 — активный
        /// 1 — неактивный
        /// </summary>
        [DataMember(Name = "status", IsRequired = false)]
        public int? Status { get; set; }

        /// <summary>
        /// Производитель устройства
        /// </summary>
        [DataMember(Name = "device_vendor", IsRequired = false)]
        public string DeviceVendor { get; set; }

        /// <summary>
        /// Модель устройства
        /// </summary>
        [DataMember(Name = "device_model", IsRequired = false)]
        public string DeviceModel { get; set; }
    }
}

namespace MdlpApiClient.DataContracts
{
    using System;
    using System.Runtime.Serialization;

    /// <summary>
    /// 8.10.2. Фильтрация по реестру регистраторов выбытия
    /// </summary>
    [DataContract]
    public class WithdrawalDeviceInfoEntry
    {
        /// <summary>
        /// Уникальный идентификатор устройства
        /// </summary>
        [DataMember(Name = "device_id", IsRequired = true)]
        public string DeviceID { get; set; }

        /// <summary>
        /// Серийный (индивидуальный) номер устройства
        /// </summary>
        [DataMember(Name = "serial_number", IsRequired = true)]
        public string SerialNumber { get; set; }

        /// <summary>
        /// Наименование (модель) устройства
        /// </summary>
        [DataMember(Name = "device_name", IsRequired = true)]
        public string DeviceName { get; set; }

        /// <summary>
        /// Идентификатор места деятельности согласно лицензии
        /// </summary>
        [DataMember(Name = "branch_id", IsRequired = false)]
        public string BranchID { get; set; }

        /// <summary>
        /// Дата предоставления
        /// </summary>
        [DataMember(Name = "provision_date", IsRequired = true)]
        public DateTime ProvisionDate { get; set; }

        /// <summary>
        /// Информация о договоре
        /// </summary>
        /// <remarks>
        /// Отсуствует в случае размещения в ЦОД оператора
        /// </remarks>
        [DataMember(Name = "contract_info", IsRequired = false)]
        public DeviceContractInfoEntry ContractInfo { get; set; }

        /// <summary>
        /// Тип размещения
        /// 0 — по месту использования
        /// 1 — ЦОД оператора
        /// 2 — по адресу МД
        /// </summary>
        [DataMember(Name = "placement_type", IsRequired = true)]
        public int PlacementType { get; set; }

        /// <summary>
        /// Статус
        /// 0 — активный
        /// 1 — неактивный
        /// </summary>
        [DataMember(Name = "status", IsRequired = true)]
        public int Status { get; set; }

        /// <summary>
        /// Производитель устройства
        /// </summary>
        [DataMember(Name = "device_vendor", IsRequired = true)]
        public string DeviceVendor { get; set; }

        /// <summary>
        /// Модель устройства
        /// </summary>
        [DataMember(Name = "device_model", IsRequired = true)]
        public string DeviceModel { get; set; }
    }
}

namespace MdlpApiClient
{
    using DataContracts;
    using System;
    using System.Text;
    using System.Security.Cryptography;
    using MdlpApiClient.Toolbox;
    using RestSharp;

    /// <remarks>
    /// Strongly typed REST API methods. Chapter 5: documents.
    /// </remarks>
    partial class MdlpClient
    {
        /// <summary>
        /// 5.1. Отправка документа
        /// </summary>
        /// <remarks>
        /// Метод подходит для маленьких документов
        /// </remarks>
        /// <param name="xmlDocument">Документ в формате XML.</param>
        /// <returns>Идентификатор документа</returns>
        public string SendDocument(string xmlDocument)
        {
            RequestRate(0.5); // 1

            var result = Post<SendDocumentResponse>("documents/send", new
            {
                document = Convert.ToBase64String(Encoding.UTF8.GetBytes(xmlDocument)),
                sign = ComputeSignature(xmlDocument),
                request_id = Guid.NewGuid().ToString(),
            });

            return result.DocumentID;
        }

        /// <summary>
        /// 5.2. Отправка документа большого объема
        /// 5.3. Загрузка документа большого объема
        /// 5.4. Завершение отправки документа
        /// </summary>
        /// <param name="xmlDocument">Документ в формате XML.</param>
        /// <returns>Идентификатор документа</returns>
        public string SendLargeDocument(string xmlDocument)
        {
            RequestRate(0.5); // 2, 3, 4

            // 5.2
            var link = Post<SendLargeDocumentResponse>("documents/send_large", new
            {
                sign = ComputeSignature(xmlDocument),
                hash_sum = xmlDocument.ComputeHash<SHA256>(),
                request_id = Guid.NewGuid().ToString(),
            });

            // 5.3
            Put(link.Link, xmlDocument);

            // 5.4
            var result = Post<SendLargeDocumentResponse>("documents/send_finished", new
            {
                document_id = link.DocumentID
            });

            return link.DocumentID;
        }

        /// <summary>
        /// 5.5. Получение информации об ограничении размера небольших документов
        /// </summary>
        /// <returns>Максимальный размер документа в байтах.</returns>
        public int GetLargeDocumentSize()
        {
            RequestRate(0.5); // 6

            var result = Get<GetLargeDocumentSizeResponse>("documents/doc_size");
            return result.DocSize;
        }

        /// <summary>
        /// 5.6. Отмена отправки документа
        /// </summary>
        /// <param name="docId"></param>
        /// <param name="requestId"></param>
        public void CancelSendDocument(string docId, string requestId)
        {
            RequestRate(0.5); // 5

            Post("documents/cancel", new
            {
                document_id = docId,
                request_id = requestId,
            });
        }

        /// <summary>
        /// 5.7. Получение списка исходящих документов
        /// </summary>
        /// <param name="filter">Фильтр <see cref="DocFilter"/> списка документов.</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых документов</param>
        /// <param name="count">Количество записей в списке возвращаемых документов</param>
        public DocumentsResponse<OutcomeDocument> GetOutcomeDocuments(DocFilter filter, int startFrom, int count)
        {
            RequestRate(1); // 7

            return Post<DocumentsResponse<OutcomeDocument>>("documents/outcome", new
            {
                filter = filter,
                start_from = startFrom,
                count = count
            });
        }

        /// <summary>
        /// 5.8. Получение списка входящих документов
        /// </summary>
        /// <param name="filter">Фильтр <see cref="DocFilter"/> списка документов.</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых документов</param>
        /// <param name="count">Количество записей в списке возвращаемых документов</param>
        public DocumentsResponse<IncomeDocument> GetIncomeDocuments(DocFilter filter, int startFrom, int count)
        {
            RequestRate(1); // 8

            return Post<DocumentsResponse<IncomeDocument>>("documents/income", new
            {
                filter = filter,
                start_from = startFrom,
                count = count
            });
        }

        /// <summary>
        /// 5.9. Получение метаданных документа
        /// </summary>
        /// <param name="documentId">Идентификатор документа</param>
        /// <returns>Метаданные документа</returns>
        public DocumentMetadata GetDocumentMetadata(string documentId)
        {
            RequestRate(0.5); // 9

            return Get<DocumentMetadata>("documents/{document_id}", new[]
            {
                new Parameter("document_id", documentId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 5.10. Получение текста документа по идентификатору
        /// </summary>
        /// <param name="documentId">Идентификатор документа</param>
        public string GetDocumentText(string documentId)
        {
            RequestRate(0.5); // 10

            var docLink = Get<GetDocumentResponse>("/documents/download/{document_id}", new[]
            {
                new Parameter("document_id", documentId, ParameterType.UrlSegment),
            });

            return Get(docLink.Link);
        }

        /// <summary>
        /// 5.11. Получение списка документов по идентификатору запроса
        /// </summary>
        /// <param name="requestId">Идентификатор запроса</param>
        public DocumentsResponse<DocumentMetadata> GetDocumentsByRequestID(string requestId)
        {
            RequestRate(0.5); // 11

            return Get<DocumentsResponse<DocumentMetadata>>("documents/request/{request_id}", new[]
            {
                new Parameter("request_id", requestId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 5.12. Получение текста квитанции по номеру исходящего документа
        /// </summary>
        /// <param name="documentId">Идентификатор документа</param>
        public string GetTicketText(string documentId)
        {
            RequestRate(0.5); // 12

            var link = Get<GetDocumentResponse>("documents/{document_id}/ticket", new[]
            {
                new Parameter("document_id", documentId, ParameterType.UrlSegment),
            });

            return Get(link.Link);
        }

        /// <summary>
        /// 5.13. Получение электронной подписи исходящего документа
        /// </summary>
        /// <param name="documentId">Идентификатор документа</param>
        public string GetSignature(string documentId)
        {
            RequestRate(0.5); // 13

            return Get("documents/{document_id}/signature", new[]
            {
                new Parameter("document_id", documentId, ParameterType.UrlSegment),
                new Parameter("Accept", "text/plain", ParameterType.HttpHeader),
            });
        }

        /// <summary>
        /// 5.14. Прослеживание документов по отчёту из СУЗ
        /// </summary>
        /// <param name="reportId">Идентификатор отчета СУЗ</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых документов</param>
        /// <param name="count">Количество записей в списке возвращаемых документов</param>
        public ItemsResponse<DocumentSkzkmMetadata> GetDocumentsBySkzkmReportID(string reportId, int startFrom, int count)
        {
            RequestRate(1); // 98

            return Post<ItemsResponse<DocumentSkzkmMetadata>>("documents/skzkm-traces/filter", new
            {
                filter = new
                {
                    skzkm_report_id = reportId,
                },
                start_from = startFrom,
                count = count,
            });
        }
    }
}

namespace MdlpApiClient
{
    using DataContracts;
    using RestSharp;

    /// <remarks>
    /// Strongly typed REST API methods. Chapter 6: user accounts.
    /// </remarks>
    partial class MdlpClient
    {
        /// <summary>
        /// 6.1.1. Метод для регистрации учетной системы
        /// </summary>
        /// <param name="sysId">Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»</param>
        /// <param name="name">Название учетной системы</param>
        /// <returns>Идентификатор учетной системы</returns>
        public AccountSystem RegisterAccountSystem(string sysId, string name)
        {
            RequestRate(0.5); // 14

            var accSystem = Post<AccountSystem>("registration/accounting_system", new
            {
                sys_id = sysId,
                name = name,
            });

            // при регистрации поле Name не возвращается
            accSystem.Name = name;
            return accSystem;
        }

        /// <summary>
        /// 6.1.2. Метод для регистрации пользователей (для резидентов страны)
        /// </summary>
        /// <param name="sysId">Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»</param>
        /// <param name="user">Свойства пользователя-резидента</param>
        /// <returns>Идентификатор пользователя</returns>
        public string RegisterUser(string sysId, ResidentUser user)
        {
            RequestRate(0.5); // 15

            var response = Post<RegisterUserResponse>("registration/user_resident", new
            {
                sys_id = sysId,
                first_name = user.FirstName,
                last_name = user.LastName,
                middle_name = user.MiddleName,
                public_cert = user.PublicCertificate,
                email = user.Email,
                phone = user.Phone,
                position = user.Position,
            });

            return response.UserID;
        }

        /// <summary>
        /// 6.1.3. Метод для регистрации пользователей (для нерезидентов страны)
        /// </summary>
        /// <param name="sysId">Идентификатор субъекта обращения в «ИС "Маркировка". МДЛП»</param>
        /// <param name="user">Свойства пользователя-нерезидента</param>
        /// <returns>Идентификатор пользователя</returns>
        public string RegisterUser(string sysId, NonResidentUser user)
        {
            RequestRate(0.5); // 16

            var response = Post<RegisterUserResponse>("registration/user_nonresident", new
            {
                sys_id = sysId,
                first_name = user.FirstName,
                last_name = user.LastName,
                middle_name = user.MiddleName,
                password = user.Password,
                email = user.Email,
                phone = user.Phone,
                position = user.Position,
            });

            return response.UserID;
        }

        /// <summary>
        /// 6.1.4. Метод для получения информации о пользователе
        /// </summary>
        /// <param name="userId">Идентификатор пользователя</param>
        /// <returns>Свойства пользователя</returns>
        public GroupedUser GetUserInfo(string userId)
        {
            RequestRate(0.5); // 17

            return Get<GetUserResponse>("users/{user_id}", new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            })
            .User;
        }

        /// <summary>
        /// 6.1.5. Метод для получения информации о языке текущего пользователя
        /// </summary>
        /// <returns>Свойства пользователя</returns>
        public string GetCurrentLanguage()
        {
            return Get<UserPreferences>("users/current/preferences").Language;
        }

        /// <summary>
        /// 6.1.6. Метод для изменения данных профиля пользователя
        /// </summary>
        /// <param name="userId">Идентификатор пользователя</param>
        /// <param name="user">Свойства профиля пользователя</param>
        public void UpdateUserProfile(string userId, UserEditProfileEntry user)
        {
            RequestRate(0.5); // 18

            Put("users/{user_id}", new
            {
                user_id = userId,
                user = user,
            },
            new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.1.7. Метод для получения информации о текущем пользователе
        /// </summary>
        /// <returns>Свойства пользователя</returns>
        public GroupedUser GetCurrentUserInfo()
        {
            RequestRate(0.5); // 19

            return Get<GetUserResponse>("users/current").User;
        }

        /// <summary>
        /// 6.1.8. Метод для изменения языка в профиле текущего пользователя
        /// </summary>
        /// <param name="language">Язык интерфейса пользователя (ru/en)</param>
        public void SetCurrentLanguage(string language)
        {
            Put("users/current/preferences", new
            {
                language = language,
            });
        }

        /// <summary>
        /// 6.1.9. Метод для получения информации о зарегистрированных сертификатах текущего пользователя
        /// </summary>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых сертификатов</param>
        /// <param name="count">Количество записей в списке возвращаемых сертификатов</param>
        /// <returns>Список сертификатов</returns>
        public CertificatesResponse<UserCertificate> GetCurrentCertificates(int startFrom, int count)
        {
            RequestRate(0.5); // 20

            return Post<CertificatesResponse<UserCertificate>>("users/current/keys", new
            {
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 6.1.10. Метод для получения информации о зарегистрированных сертификатах пользователя
        /// </summary>
        /// <param name="userId">Идентификатор пользователя</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых сертификатов</param>
        /// <param name="count">Количество записей в списке возвращаемых сертификатов</param>
        /// <returns>Список сертификатов</returns>
        public CertificatesResponse<UserCertificate> GetUserCertificates(string userId, int startFrom, int count)
        {
            RequestRate(0.5); // 21

            return Post<CertificatesResponse<UserCertificate>>("users/{user_id}/keys", new
            {
                start_from = startFrom,
                count = count,
            },
            new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.1.11. Метод для получения информации об УС
        /// </summary>
        /// <param name="accountSystemId">Уникальный идентификатор УС</param>
        /// <returns>Свойства УС</returns>
        public AccountSystem GetAccountSystem(string accountSystemId)
        {
            RequestRate(0.5); // 22

            return Get<GetAccountSystemResponse>("account_systems/{account_system_id}", new[]
            {
                new Parameter("account_system_id", accountSystemId, ParameterType.UrlSegment),
            })
            .AccountSystem;
        }

        /// <summary>
        /// 6.2.1. Метод для получения кода аутентификации
        /// </summary>
        /// <remarks>
        /// Это внутренний метод, он не является частью публичного API.
        /// Он используется классами-наследниками <see cref="CredentialsBase"/>.
        /// </remarks>
        /// <param name="clientId">Идентификатор клиента</param>
        /// <param name="clientSecret">Секретный ключ клиента</param>
        /// <param name="userId">Уникальный идентификатор пользователя</param>
        /// <param name="authType">Тип аутентификации, см. <see cref="AuthTypeEnum"/>.</param>
        /// <returns>Код аутентификации для получения ключа сессии</returns>
        internal string Authenticate(string clientId, string clientSecret, string userId, string authType)
        {
            RequestRate(1); // 23

            var auth = Post<AuthResponse>("auth", new
            {
                client_id = clientId,
                client_secret = clientSecret,
                user_id = userId,
                auth_type = authType,
            });

            return auth.Code;
        }

        /// <summary>
        /// 6.2.2. Метод для получения ключа сессии
        /// </summary>
        /// <remarks>
        /// Это внутренний метод, он не является частью публичного API.
        /// Он используется классами-наследниками <see cref="CredentialsBase"/>.
        /// </remarks>
        /// <param name="authCode">Код аутентификации для получения ключа сессии</param>
        /// <param name="signature">Открепленная подпись кода для аутентификации типа SIGNED_CODE</param>
        /// <param name="password">Пароль пользователя для аутентификации типа PASSWORD</param>
        /// <returns>Ключ сессии <see cref="AuthToken"/>.</returns>
        internal AuthToken GetToken(string authCode, string signature = null, string password = null)
        {
            RequestRate(1); // 24

            var result = Post<AuthToken>("token", new
            {
                code = authCode,
                signature = signature,
                password = password,
            });

            // if Post didn't throw, then we're authenticated
            IsAuthenticated = true;
            return result;
        }

        /// <summary>
        /// 6.2.3. Метод для выхода из системы
        /// </summary>
        internal void Logout()
        {
            RequestRate(1); // 25

            Get("auth/logout");
            IsAuthenticated = false;
        }

        /// <summary>
        /// 6.3.1. Метод для удаления пользователей учетной системы
        /// </summary>
        /// <param name="userId">Уникальный идентификатор пользователя учетной системы</param>
        public void DeleteUser(string userId)
        {
            RequestRate(0.5); // 26

            Delete("users/{user_id}", null, new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.3.2. Метод для удаления учетной системы
        /// </summary>
        /// <param name="accountSystemId">Уникальный идентификатор учетной системы</param>
        public void DeleteAccountSystem(string accountSystemId)
        {
            RequestRate(0.5); // 27

            Delete("account_systems/{account_system_id}", null, new[]
            {
                new Parameter("account_system_id", accountSystemId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.4.1. Метод для добавления ЭП пользователя (для резидентов)
        /// </summary>
        /// <remarks>
        /// Необходимо использовать публичный сертификат, а не публичный ключ.
        /// </remarks>
        /// <param name="userId">Уникальный идентификатор пользователя</param>
        /// <param name="certificate">Публичный сертификат пользователя</param>
        public void AddUserCertificate(string userId, string certificate)
        {
            RequestRate(0.5); // 28

            Post("users/{user_id}/add_key", new
            {
                public_cert = certificate
            },
            new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.4.2. Метод для удаления ЭП пользователя (для резидентов)
        /// </summary>
        /// <remarks>
        /// Необходимо использовать публичный сертификат, а не публичный ключ.
        /// Допускается также использование серийного номера сертификата
        /// в десятичной форме или отпечатка сертификата.
        /// </remarks>
        /// <param name="userId">Уникальный идентификатор пользователя</param>
        /// <param name="certificate">Публичный сертификат пользователя</param>
        public void DeleteUserCertificate(string userId, string certificate)
        {
            RequestRate(0.5); // 29

            Delete("users/{user_id}/delete_key", new
            {
                public_cert = certificate
            },
            new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.5.1. Метод для изменения пароля пользователя (для нерезидентов)
        /// </summary>
        /// <param name="userId">Уникальный идентификатор пользователя</param>
        /// <param name="password">Пароль пользователя</param>
        public void ChangeUserPassword(string userId, string password)
        {
            RequestRate(0.5); // 30

            Post("users/{user_id}/change_password", new
            {
                password = password
            },
            new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.6.1. Метод для получения информации о существующих правах
        /// </summary>
        public RightsInfo[] GetRights()
        {
            RequestRate(0.5); // 31

            return Get<GetRightsResponse<RightsInfo>>("rights/about").Rights;
        }

        /// <summary>
        /// 6.6.2. Метод для получения информации о правах текущего пользователя
        /// </summary>
        public string[] GetCurrentRights()
        {
            RequestRate(0.5); // 32

            return Get<GetRightsResponse<string>>("rights/current").Rights;
        }

        /// <summary>
        /// 6.6.3. Метод для создания группы прав пользователей
        /// </summary>
        /// <param name="groupName">Имя группы</param>
        /// <param name="rights">Права пользователей, принадлежащих этой группе (см. <see cref="RightsEnum"/>)</param>
        /// <returns>Уникальный идентификатор группы</returns>
        public string CreateRightsGroup(string groupName, string[] rights)
        {
            RequestRate(0.5); // 33

            return Post<CreateRightsGroupResponse>("rights/create_group", new
            {
                group_name = groupName,
                rights = rights
            })
            .GroupID;
        }

        /// <summary>
        /// 6.6.4. Метод для получения информации о группе прав пользователей
        /// </summary>
        /// <param name="groupId">Уникальный идентификатор группы</param>
        /// <returns><see cref="Group"/></returns>
        public Group GetRightsGroup(string groupId)
        {
            RequestRate(0.5); // 35

            return Get<GetGroupResponse>("rights/{group_id}", new[]
            {
                new Parameter("group_id", groupId, ParameterType.UrlSegment),
            })
            .Group;
        }

        /// <summary>
        /// 6.6.5. Метод для получения информации о пользователях группы
        /// </summary>
        /// <param name="groupId">Уникальный идентификатор группы</param>
        /// <returns>Список объектов <see cref="User"/></returns>
        public User[] GetGroupUsers(string groupId)
        {
            RequestRate(0.5); // 34

            return Get<GetGroupUsersResponse>("rights/{group_id}/users", new[]
            {
                new Parameter("group_id", groupId, ParameterType.UrlSegment),
            })
            .Users;
        }

        /// <summary>
        /// 6.6.6. Метод для изменения группы прав пользователей
        /// </summary>
        /// <param name="groupId">Уникальный идентификатор группы прав пользователей</param>
        /// <param name="groupChange">Объект <see cref="Group"/></param>
        public void UpdateRightsGroup(string groupId, Group groupChange)
        {
            RequestRate(0.5); // 36

            Put("rights/{group_id}", new
            {
                group_change = groupChange
            },
            new[]
            {
                new Parameter("group_id", groupId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.6.7. Метод для удаления группы прав пользователей
        /// </summary>
        /// <param name="groupId">Уникальный идентификатор группы прав пользователей</param>
        public void DeleteRightsGroup(string groupId)
        {
            RequestRate(0.5); // 37

            Delete("rights/{group_id}", null, new[]
            {
                new Parameter("group_id", groupId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.6.8. Метод для добавления пользователя в группу прав пользователей
        /// </summary>
        /// <param name="userId">Уникальный идентификатор пользователя</param>
        /// <param name="groupId">Уникальный идентификатор группы прав пользователей</param>
        /// <returns>Уникальный идентификатор группы</returns>
        public void AddUserToRightsGroup(string userId, string groupId)
        {
            RequestRate(0.5); // 38

            Post("rights/{group_id}/user_add", new
            {
                user_id = userId
            },
            new[]
            {
                new Parameter("group_id", groupId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.6.9. Метод для удаления пользователя из группы прав пользователей
        /// </summary>
        /// <param name="userId">Уникальный идентификатор пользователя</param>
        /// <param name="groupId">Уникальный идентификатор группы прав пользователей</param>
        public void DeleteUserFromRightsGroup(string userId, string groupId)
        {
            RequestRate(0.5); // 39

            Delete("rights/{group_id}/{user_id}", null, new[]
            {
                new Parameter("user_id", userId, ParameterType.UrlSegment),
                new Parameter("group_id", groupId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 6.6.11. Метод для поиска списка групп прав пользователей по фильтру
        /// </summary>
        /// <param name="filter">Фильтр для поиска списка групп прав пользователей</param>
        /// <param name="startFrom">Индекс первой записи в списке групп прав пользователей </param>
        /// <param name="count">Количество записей в списке групп прав пользователей </param>
        /// <returns>Список групп прав пользователей </returns>
        public GroupsResponse<Group> GetRightsGroups(GroupFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 41

            return Post<GroupsResponse<Group>>("rights/filter", new
            {
                filter = filter ?? new GroupFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 6.7.2. Метод для поиска зарегистрированных пользователей по фильтру
        /// </summary>
        /// <param name="filter">Фильтр для поиска списка зарегистрированных пользователей</param>
        /// <param name="startFrom">Индекс первой записи в списке зарегистрированных пользователей</param>
        /// <param name="count">Количество записей в списке зарегистрированных пользователей</param>
        /// <returns>Список зарегистрированных пользователей</returns>
        public UsersResponse<GroupedUser> GetUsers(UserFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 43

            return Post<UsersResponse<GroupedUser>>("users/filter", new
            {
                filter = filter ?? new UserFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 6.8.2. Метод для поиска учетных систем по фильтру
        /// </summary>
        /// <param name="name">Имя для поиска учетных систем</param>
        /// <param name="startFrom">Индекс первой записи в списке учетных систем</param>
        /// <param name="count">Количество записей в списке учетных систем</param>
        /// <returns>Список учетных систем</returns>
        public AccountSystemsResponse<AccountSystem> GetAccountSystems(string name, int startFrom, int count)
        {
            RequestRate(0.5); // 45

            return Post<AccountSystemsResponse<AccountSystem>>("account_systems/filter", new
            {
                filter = new
                {
                    name = name
                },
                start_from = startFrom,
                count = count,
            });
        }
    }
}

namespace MdlpApiClient
{
    using System;
    using System.Collections.Generic;
    using DataContracts;
    using RestSharp;

    /// <remarks>
    /// Strongly typed REST API methods. Chapter 7: registries.
    /// </remarks>
    partial class MdlpClient
    {
        /// <summary>
        /// 7.1.1. Получение данных записи ЕГРЮЛ
        /// </summary>
        /// <returns>Данные из реестра ЕГРЮЛ</returns>
        public EgrulRegistryResponse GetEgrulRegistryEntry()
        {
            RequestRate(0.5); // 46

            return Get<EgrulRegistryResponse>("reestr/egrul");
        }

        /// <summary>
        /// 7.2.1. Получение данных записи ЕГРИП
        /// </summary>
        /// <returns>Данные из реестра ЕГРИП</returns>
        public EgripRegistryResponse GetEgripRegistryEntry()
        {
            RequestRate(0.5); // 47

            return Get<EgripRegistryResponse>("reestr/egrip");
        }

        /// <summary>
        /// 7.3.1. Получение записи реестра РАФП (реестра аккредитованных филиалов и представительств)
        /// </summary>
        /// <returns>Данные из реестра РАФП</returns>
        public RafpRegistryResponse GetRafpRegistryEntry()
        {
            RequestRate(0.5); // 48

            return Get<RafpRegistryResponse>("reestr/rafp");
        }

        /// <summary>
        /// 7.5.1. Получение объекта ФИАС по идентификатору адресного объекта
        /// </summary>
        /// <param name="addressId">Идентификатор адресного объекта</param>
        /// <returns>Данные из реестра ФИАС</returns>
        public FiasAddressObject GetFiasAddressObject(string addressId)
        {
            RequestRate(0.5); // 50

            return Get<FiasAddressObject>("reestr/fias/addrobj/{addrobj}", new[]
            {
                new Parameter("addrobj", addressId, ParameterType.UrlSegment)
            });
        }

        /// <summary>
        /// 7.5.2. Получение объекта ФИАС по идентификатору дома
        /// </summary>
        /// <param name="houseGuid">Идентификатор дома</param>
        /// <returns>Данные из реестра ФИАС</returns>
        public FiasHouseObject GetFiasHouseObject(string houseGuid)
        {
            RequestRate(0.5); // 51

            return Get<FiasHouseObject>("reestr/fias/house/{houseobj}", new[]
            {
                new Parameter("houseobj", houseGuid, ParameterType.UrlSegment)
            });
        }

        /// <summary>
        /// 7.5.3. Получение текстового адреса по идентификаторам ФИАС
        /// </summary>
        /// <param name="houseGuid">Идентификатор дома</param>
        /// <param name="aoGuid">Идентификатор адреса</param>
        /// <param name="room">Комната (необязательно)</param>
        /// <returns>Данные из реестра ФИАС</returns>
        public AddressResolved GetFiasAddress(string houseGuid, string aoGuid = null, string room = null)
        {
            RequestRate(0.5); // 52

            var address = Post<AddressResolved>("reestr/fias/resolve", new
            {
                // похоже, параметр aoGuid игнорируется, если указан дом, но наличие его все равно требуется
                aoguid = aoGuid ?? Guid.Empty.ToString(),
                houseguid = houseGuid,
                room = room,
            });

            // в ответе нет houseGuid, добавим для верности
            address.HouseGuid = houseGuid;
            return address;
        }

        /// <summary>
        /// 7.6.1. Получение информации о лицензиях на производство
        /// </summary>
        /// <returns>Список лицензий</returns>
        public LicenseEntry[] GetProductionLicenses()
        {
            RequestRate(0.5); // 53

            return Get<List<LicenseEntry>>("reestr/prod_licenses").ToArray();
        }

        /// <summary>
        /// 7.6.2. Метод фильтрации лицензий на производство
        /// </summary>
        /// <param name="filter">Фильтр для поиска по реестру лицензий на производство</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых лицензий на производство</param>
        /// <param name="count">Количество записей в списке возвращаемых лицензий на производство</param>
        /// <returns>Список лицензий</returns>
        public EntriesResponse<LicenseEntry> GetProductionLicenses(LicenseApiFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 94

            return Post<EntriesResponse<LicenseEntry>>("reestr/prod_licenses", new
            {
                filter = filter ?? new LicenseApiFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 7.6.3. Метод для актуализации данных текущего участника из реестра лицензий на производство
        /// </summary>
        public void ResyncProductionLicenses()
        {
            RequestRate(86400); // 91: сутки

            Post<EmptyResponse>("reestr/prod_licenses/resync", new { });
        }

        /// <summary>
        /// 7.7.1. Получение информации о лицензиях на фарм. деятельность
        /// </summary>
        /// <returns>Список лицензий</returns>
        public LicenseEntry[] GetPharmacyLicenses()
        {
            RequestRate(0.5); // 54

            return Get<List<LicenseEntry>>("reestr/pharm_licenses").ToArray();
        }

        /// <summary>
        /// 7.7.2. Метод фильтрации лицензий на фарм. деятельность
        /// </summary>
        /// <param name="filter">Фильтр для поиска по реестру лицензий на фарм. деятельность</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых лицензий на фарм. деятельность</param>
        /// <param name="count">Количество записей в списке возвращаемых лицензий на фарм. деятельность</param>
        /// <returns>Список лицензий</returns>
        public EntriesResponse<LicenseEntry> GetPharmacyLicenses(LicenseApiFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 93

            return Post<EntriesResponse<LicenseEntry>>("reestr/pharm_licenses", new
            {
                filter = filter ?? new LicenseApiFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 7.7.3. Метод для актуализации данных текущего участника из реестра лицензий на фарм.деятельность
        /// </summary>
        public void ResyncPharmacyLicenses()
        {
            RequestRate(86400); // 92: сутки

            Post<EmptyResponse>("reestr/pharm_licenses/resync", new { });
        }

        /// <summary>
        /// 7.8.1. Метод для получения информации о всех местах осуществления
        /// деятельности и местах ответственного хранения участника
        /// </summary>
        /// <returns>Список адресов</returns>
        /// <remarks>
        /// Ошибка в документации: сказано, что возвращается <see cref="AddressEntry"/>.
        /// </remarks>
        public EntriesResponse<AddressEntry> GetCurrentAddresses()
        {
            RequestRate(0.5); // 65

            return Get<EntriesResponse<AddressEntry>>("reestr/address/all");
        }

        /// <summary>
        /// 7.9.1. Метод для получения списка стран
        /// </summary>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых стран</param>
        /// <param name="count">Количество записей в списке возвращаемых стран</param>
        /// <returns>Список стран</returns>
        public EntriesResponse<CountryInfo> GetCountries(int startFrom, int count)
        {
            RequestRate(0.5); // 66

            return Post<EntriesResponse<CountryInfo>>("reestr/area/countries", new
            {
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 7.9.2. Метод для получения списка субъектов РФ
        /// </summary>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых субъектов РФ</param>
        /// <param name="count">Количество записей в списке возвращаемых субъектов РФ</param>
        /// <returns>Список субъектов РФ</returns>
        public EntriesResponse<Region> GetRegions(int startFrom, int count)
        {
            RequestRate(0.5); // 67

            return Post<EntriesResponse<Region>>("reestr/area/regions", new
            {
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 7.10.1. Фильтрация по реестру ЕСКЛП (Единый справочник-каталог лекарственных препаратов)
        /// </summary>
        /// <param name="filter">Фильтр для поиска по реестру ЕСКЛП</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых записей реестра ЕСКЛП</param>
        /// <param name="count">Количество записей в списке возвращаемых записей реестра ЕСКЛП</param>
        /// <returns>Список записей реестра ЕСКЛП</returns>
        public EntriesResponse<EsklpInfo> GetEsklpInfo(EsklpFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 68

            return Post<EntriesResponse<EsklpInfo>>("reestr/esklp/filter", new
            {
                filter = filter ?? new EsklpFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 7.11.1. Фильтрация по реестру мест таможенного контроля
        /// </summary>
        /// <param name="filter">Фильтр для поиска по реестру мест таможенного контроля</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых мест таможенного контроля</param>
        /// <param name="count">Количество записей в списке возвращаемых мест таможенного контроля</param>
        /// <returns>Список мест таможенного контроля</returns>
        public EntriesResponse<CustomsPointsInfoEntry> GetCustomsPoints(CustomsPointsFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 84

            return Post<EntriesResponse<CustomsPointsInfoEntry>>("reestr/customs_points/filter", new
            {
                filter = filter ?? new CustomsPointsFilter(),
                start_from = startFrom,
                count = count,
            });
        }
    }
}

namespace MdlpApiClient
{
    using System.Linq;
    using System.Net;
    using DataContracts;
    using MdlpApiClient.Toolbox;
    using RestSharp;

    /// <remarks>
    /// Strongly typed REST API methods. Chapter 8: MDLP information.
    /// </remarks>
    partial class MdlpClient
    {
        /// <summary>
        /// 8.1.2. Метод для поиска информации о местах осуществления деятельности по фильтру
        /// </summary>
        /// <param name="filter">Фильтр для поиска мест осуществления деятельности</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых мест</param>
        /// <param name="count">Количество записей в списке возвращаемых мест</param>
        /// <returns>Список мест осуществления деятельности</returns>
        public EntriesResponse<BranchEntry> GetBranches(BranchFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 56

            return Post<EntriesResponse<BranchEntry>>("reestr/branches/filter", new
            {
                filter = filter ?? new BranchFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.1.3. Получение информации о конкретном месте осуществления деятельности
        /// </summary>
        public GetBranchResponse GetBranch(string branchId)
        {
            RequestRate(0.5); // 57

            return Get<GetBranchResponse>("reestr/branches/{branch_id}", new[]
            {
                new Parameter("branch_id", branchId, ParameterType.UrlSegment)
            });
        }

        /// <summary>
        /// 8.1.4. Метод для регистрация места осуществления деятельности
        /// </summary>
        public string RegisterBranch(Address address)
        {
            RequestRate(0.5); // 58

            var branch = Post<GetBranchResponse>("reestr/branches/register", new
            {
                branch_address = address
            });

            return branch.BranchID;
        }

        /// <summary>
        /// 8.2.2. Метод для поиска информации о местах ответственного хранения по фильтру
        /// </summary>
        /// <param name="filter">Фильтр для поиска мест осуществления деятельности</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых мест</param>
        /// <param name="count">Количество записей в списке возвращаемых мест</param>
        /// <returns>Список мест ответственного хранения</returns>
        public EntriesResponse<WarehouseEntry> GetWarehouses(WarehouseFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 61

            return Post<EntriesResponse<WarehouseEntry>>("reestr/warehouses/filter", new
            {
                filter = filter ?? new WarehouseFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.2.3. Получение информации о конкретном месте ответственного хранения
        /// </summary>
        public GetWarehouseResponse GetWarehouse(string warehouseId)
        {
            RequestRate(0.5); // 62

            return Get<GetWarehouseResponse>("reestr/warehouses/{warehouse_id}", new[]
            {
                new Parameter("warehouse_id", warehouseId, ParameterType.UrlSegment)
            });
        }

        /// <summary>
        /// 8.2.4. Метод для регистрация места ответственного хранения
        /// </summary>
        public string RegisterWarehouse(string warehouseOrgInn, Address address)
        {
            RequestRate(0.5); // 63

            var warehouse = Post<RegisterWarehouseResponse>("reestr/warehouses/register", new
            {
                warehouse_org_inn = warehouseOrgInn,
                warehouse_address = address
            });

            return warehouse.WarehouseID;
        }

        /// <summary>
        /// 8.2.5. Метод получения информации об адресах искомого участника,
        /// для регистрации мест ответственного хранения или отправки документов.
        /// </summary>
        /// <param name="inn">ИНН (необязательно)</param>
        /// <param name="licenseNumber">Номер лицензии (необязательно)</param>
        public EntriesResponse<RegistrationAddress> GetAvailableAddresses(string inn = null, string licenseNumber = null)
        {
            RequestRate(0.5); // 64

            return Post<EntriesResponse<RegistrationAddress>>("reestr/warehouses/available_safe_warehouses_addresses", new
            {
                inn = inn,
                licence_number = licenseNumber,
            });
        }

        /// <summary>
        /// 8.3.1. Метод для поиска по реестру КИЗ
        /// </summary>
        /// <param name="filter">Фильтр для поиска по реестру КИЗ</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых КИЗ</param>
        /// <param name="count">Количество записей в списке возвращаемых КИЗ</param>
        /// <returns>Список КИЗ</returns>
        public EntriesResponse<SgtinExtended> GetSgtins(SgtinFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 69

            return Post<EntriesResponse<SgtinExtended>>("reestr/sgtin/filter", new
            {
                filter = filter ?? new SgtinFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.3.2. Метод поиска по реестру КИЗ по списку значений
        /// </summary>
        /// <param name="sgtins">Список КИЗ для поиска (не более 500 значений)</param>
        /// <returns>Список КИЗ</returns>
        public EntriesFailedResponse<SgtinExtended, SgtinFailed> GetSgtins(params string[] sgtins)
        {
            RequestRate(5, "sgtins-by-list"); // 70

            return Post<EntriesFailedResponse<SgtinExtended, SgtinFailed>>("reestr/sgtin/sgtins-by-list", new
            {
                filter = new
                {
                    sgtins = sgtins
                },
            });
        }

        /// <summary>
        /// 8.3.3. Метод поиска по общедоступному реестру КИЗ по списку значений
        /// </summary>
        /// <param name="sgtins">Список КИЗ для поиска (не более 500 значений)</param>
        /// <returns>Список КИЗ</returns>
        public EntriesFailedResponse<PublicSgtin, string> GetPublicSgtins(params string[] sgtins)
        {
            RequestRate(1.5); // 88, сказано 1

            return Post<EntriesFailedResponse<PublicSgtin, string>>("reestr/sgtin/public/sgtins-by-list", new
            {
                filter = new
                {
                    sgtins = sgtins
                },
            });
        }

        /// <summary>
        /// 8.3.4. Метод для получения детальной информации о КИЗ и связанным с ним ЛП
        /// </summary>
        /// <param name="sgtin">КИЗ для поиска</param>
        /// <returns>Подробная информация КИЗ и ЛП</returns>
        public GetSgtinResponse GetSgtin(string sgtin)
        {
            RequestRate(0.5); // 71

            return Get<GetSgtinResponse>("reestr/sgtin/{sgtin}", new[]
            {
                new Parameter("sgtin", sgtin, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 8.3.5. Метод для поиска по реестру КИЗ всех записей со статусом 'Оборот приостановлен'
        /// </summary>
        /// <param name="filter">Фильтр для поиска КИЗ</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых КИЗ</param>
        /// <param name="count">Количество записей в списке возвращаемых КИЗ</param>
        /// <returns>Список КИЗ</returns>
        public EntriesResponse<SgtinExtended> GetSgtinsOnHold(SgtinOnHoldFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 96

            return Post<EntriesResponse<SgtinExtended>>("reestr/sgtin/on_hold", new
            {
                filter = filter ?? new SgtinOnHoldFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.3.6. Метод для поиска по реестру КИЗ записей, ожидающих
        /// вывода из оборота по чеку от контрольно-кассовой техники (ККТ)
        /// </summary>
        /// <param name="filter">Фильтр для поиска КИЗ</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых КИЗ</param>
        /// <param name="count">Количество записей в списке возвращаемых КИЗ</param>
        /// <returns>Список КИЗ</returns>
        public EntriesResponse<SgtinKktAwaitingWithdrawal> GetSgtinsKktAwaitingWithdrawal(SgtinAwaitingWithdrawalFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 90

            return Post<EntriesResponse<SgtinKktAwaitingWithdrawal>>("reestr/sgtin/kkt/awaiting-withdrawal/filter", new
            {
                filter = filter ?? new SgtinAwaitingWithdrawalFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.3.7. Метод для поиска по реестру КИЗ записей,
        /// ожидающих вывода из оборота через РВ
        /// </summary>
        /// <param name="filter">Фильтр для поиска КИЗ</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых КИЗ</param>
        /// <param name="count">Количество записей в списке возвращаемых КИЗ</param>
        /// <returns>Список КИЗ</returns>
        public EntriesResponse<SgtinDeviceAwaitingWithdrawal> GetSgtinsDeviceAwaitingWithdrawal(SgtinAwaitingWithdrawalFilter filter, int startFrom, int count)
        {
            RequestRate(1); // 99

            return Post<EntriesResponse<SgtinDeviceAwaitingWithdrawal>>("reestr/sgtin/device/awaiting-withdrawal/filter", new
            {
                filter = filter ?? new SgtinAwaitingWithdrawalFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.4.1. Метод для получения информации об иерархии вложенности третичной упаковки
        /// </summary>
        /// <param name="sscc">Идентификационный код третичной упаковки</param>
        /// <returns>Подробная информация КИЗ и ЛП</returns>
        public SsccHierarchyResponse<SsccInfo> GetSsccHierarchy(string sscc)
        {
            RequestRate(5); // 73

            return Get<SsccHierarchyResponse<SsccInfo>>("reestr/sscc/{sscc}/hierarchy", new[]
            {
                new Parameter("sscc", sscc, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 8.4.2. Метод для получения информации о КИЗ, вложенных в третичную упаковку
        /// </summary>
        /// <param name="sscc">Идентификационный код третичной упаковки</param>
        /// <param name="filter">Фильтр для поиска КИЗ</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых КИЗ</param>
        /// <param name="count">Количество записей в списке возвращаемых КИЗ</param>
        /// <returns>Список КИЗ, непосредственно вложенных в указанную третичную упаковку</returns>
        public GetSsccSgtinsResponse GetSsccSgtins(string sscc, SsccSgtinsFilter filter, int startFrom, int count)
        {
            RequestRate(6); // 74, сказано 5

            return Post<GetSsccSgtinsResponse>("reestr/sscc/{sscc}/sgtins", new
            {
                sscc = sscc,
                filter = filter ?? new SsccSgtinsFilter(),
                start_from = startFrom,
                count = count,
            },
            new[]
            {
                new Parameter("sscc", sscc, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 8.4.3. Метод для получения информации о полной иерархии вложенности третичной упаковки
        /// </summary>
        /// <param name="sscc">Идентификационный код третичной упаковки</param>
        /// <returns>Список КИЗ, непосредственно вложенных в указанную третичную упаковку</returns>
        public SsccFullHierarchyResponse<HierarchySsccInfo> GetSsccFullHierarchy(string sscc)
        {
            RequestRate(35); // 100, сказано 30

            var result = Get<SsccFullHierarchyResponse<HierarchySsccInfoInternal>>("reestr/sscc/{sscc}/full-hierarchy", new[]
            {
                new Parameter("sscc", sscc, ParameterType.UrlSegment),
            });

            // sort child records and convert to real HierarchySsccInfo items
            return new SsccFullHierarchyResponse<HierarchySsccInfo>
            {
                Up = HierarchySsccInfoInternal.Convert(result.Up),
                Down = HierarchySsccInfoInternal.Convert(result.Down),
            };
        }

        /// <summary>
        /// 8.4.4. Метод для получения информации о полной иерархии 
        /// вложенности третичной упаковки для нескольких SSCC
        /// </summary>
        /// <param name="ssccs">Список идентификационный код третичной упаковки</param>
        /// <returns>Список КИЗ, непосредственно вложенных в указанную третичную упаковку</returns>
        public SsccFullHierarchyResponse<HierarchySsccInfo>[] GetSsccFullHierarchy(string[] ssccs)
        {
            if (ssccs.IsNullOrEmpty())
            {
                return new SsccFullHierarchyResponse<HierarchySsccInfo>[0];
            }

            RequestRate(35); // 101, сказано 30

            var ssccList = string.Join(",", ssccs);
            var result = Get<SsccFullHierarchyResponse<HierarchySsccInfoInternal>[]>("reestr/sscc/full-hierarchy", new[]
            {
                new Parameter("sscc", ssccList, ParameterType.QueryString),
            });

            // sort child records and convert to real HierarchySsccInfo items
            return result.Select(r => new SsccFullHierarchyResponse<HierarchySsccInfo>
            {
                Up = HierarchySsccInfoInternal.Convert(r.Up),
                Down = HierarchySsccInfoInternal.Convert(r.Down),
            })
            .ToArray();
        }

        /// <summary>
        /// 8.5.1. Метод для получения информации из реестра производимых организацией ЛП
        /// </summary>
        /// <param name="filter">Фильтр для поиска ЛП</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых ЛП</param>
        /// <param name="count">Количество записей в списке возвращаемых ЛП</param>
        /// <returns>Список ЛП</returns>
        public EntriesResponse<MedProduct> GetCurrentMedProducts(MedProductsFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 75

            return Post<EntriesResponse<MedProduct>>("reestr/med_products/current", new
            {
                filter = filter ?? new MedProductsFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.5.2. Метод для получения детальной информации о производимом организацией ЛП
        /// </summary>
        /// <param name="gtin">Код GTIN ЛП</param>
        /// <returns>Описание ЛП</returns>
        public MedProduct GetCurrentMedProduct(string gtin)
        {
            RequestRate(0.5); // 76

            return Get<MedProduct>("reestr/med_products/{gtin}", new[]
            {
                new Parameter("gtin", gtin, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 8.5.3. Метод для поиска публичной информации в реестре производимых ЛП
        /// </summary>
        /// <param name="filter">Фильтр для поиска ЛП</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых ЛП</param>
        /// <param name="count">Количество записей в списке возвращаемых ЛП</param>
        /// <returns>Список ЛП</returns>
        public EntriesResponse<MedProductPublic> GetPublicMedProducts(MedProductsFilter filter, int startFrom, int count)
        {
            RequestRate(5); // 95

            return Post<EntriesResponse<MedProductPublic>>("reestr/med_products/public/filter", new
            {
                filter = filter ?? new MedProductsFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.5.4. Метод для получения публичной информации о производимом ЛП
        /// </summary>
        /// <remarks>
        /// По-моему, этот метод возвращает меньше данных, чем 8.5.3.
        /// Например, регистрационный номер и статус не возвращает.
        /// Зато метод 8.5.3 почему-то не возвращает владельца лицензии.
        /// </remarks>
        /// <param name="gtin">Код GTIN ЛП</param>
        /// <returns>Описание ЛП</returns>
        public MedProductPublic GetPublicMedProduct(string gtin)
        {
            RequestRate(1); // 89

            return Get<MedProductPublic>("reestr/med_products/public/{gtin}", new[]
            {
                new Parameter("gtin", gtin, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 8.6.1. Метод для регистрации иностранного контрагента
        /// </summary>
        /// <param name="itin">ИТИН контрагента</param>
        /// <param name="name">Наименование субъекта обращения</param>
        /// <param name="address">Адрес субъекта обращения</param>
        /// <returns>Идентификатор контрагента</returns>
        public string RegisterForeignCounterparty(string itin, string name, ForeignAddress address)
        {
            RequestRate(0.5); // 77

            var counterparty = Post<RegisterForeignCounterpartyResponse>("reestr/foreign_counterparty/register", new
            {
                counterparty_itin = itin,
                counterparty_name = name,
                counterparty_address = address,
            });

            return counterparty.CounterpartyID;
        }

        /// <summary>
        /// 8.6.2. Метод для просмотра заявок на регистрацию иностранных контрагентов
        /// </summary>
        /// <param name="filter">Фильтр для поиска иностранных контрагентов</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых иностранных контрагентов</param>
        /// <param name="count">Количество записей в списке возвращаемых иностранных контрагентов</param>
        /// <returns>Список иностранных контрагентов</returns>
        public EntriesResponse<ForeignCounterpartyEntry> GetForeignCounterparties(ForeignCounterpartyFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 78

            return Post<EntriesResponse<ForeignCounterpartyEntry>>("reestr/foreign_counterparty/filter", new
            {
                filter = filter ?? new ForeignCounterpartyFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.7.1. Метод добавления доверенного контрагента или контрагентов
        /// </summary>
        /// <param name="partnerIds">Идентификаторы субъектов или ИНН партнеров</param>
        public AddTrustedPartnersResponse AddTrustedPartners(params string[] partnerIds)
        {
            RequestRate(0.5); // 79

            return Post<AddTrustedPartnersResponse>("reestr/trusted_partners/add", new
            {
                trusted_partners = partnerIds
            });
        }

        /// <summary>
        /// 8.7.2. Метод удаления доверенного контрагента или контрагентов
        /// </summary>
        /// <param name="partnerIds">Идентификаторы субъектов или ИНН партнеров</param>
        public void DeleteTrustedPartners(params string[] partnerIds)
        {
            RequestRate(0.5); // 80

            Post("reestr/trusted_partners/delete", new
            {
                trusted_partners = partnerIds
            });
        }

        /// <summary>
        /// 8.7.3. Метод фильтрации доверенных контрагентов
        /// </summary>
        /// <param name="filter">Фильтр для поиска доверенных контрагентов</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых доверенных контрагентов</param>
        /// <param name="count">Количество записей в списке возвращаемых доверенных контрагентов</param>
        /// <returns>Список доверенных контрагентов</returns>
        public EntriesResponse<TrustedPartnerEntry> GetTrustedPartners(TrustedPartnerFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 81

            return Post<EntriesResponse<TrustedPartnerEntry>>("/reestr/trusted_partners/filter", new
            {
                filter = filter ?? new TrustedPartnerFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.8.1. Метод фильтрации по субъектам обращения
        /// </summary>
        /// <typeparam name="T">Тип субъекта обращения</typeparam>
        /// <param name="filter">Фильтр для поиска субъектов обращения</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых субъектов обращения</param>
        /// <param name="count">Количество записей в списке возвращаемых субъектов обращения</param>
        /// <returns>Список субъектов обращения</returns>
        private EntriesFilteredResponse<T> GetPartners<T>(PartnerFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 82

            return Post<EntriesFilteredResponse<T>>("reestr_partners/filter", new
            {
                filter = filter ?? new PartnerFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.8.1. Метод фильтрации по иностранным субъектам обращения
        /// </summary>
        /// <param name="filter">Фильтр для поиска субъектов обращения</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых субъектов обращения</param>
        /// <param name="count">Количество записей в списке возвращаемых субъектов обращения</param>
        /// <returns>Список субъектов обращения</returns>
        public EntriesFilteredResponse<ForeignCounterparty> GetForeignPartners(PartnerFilter filter, int startFrom, int count)
        {
            RequestRate(0.5); // 82?

            // запрос иностранных контрагентов
            filter = filter ?? new PartnerFilter();
            filter.RegEntityType = RegEntityTypeEnum.FOREIGN_COUNTERPARTY;

            return GetPartners<ForeignCounterparty>(filter, startFrom, count);
        }

        /// <summary>
        /// 8.8.1. Метод фильтрации по местным субъектам обращения
        /// </summary>
        /// <param name="filter">Фильтр для поиска субъектов обращения</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых субъектов обращения</param>
        /// <param name="count">Количество записей в списке возвращаемых субъектов обращения</param>
        /// <returns>Список субъектов обращения</returns>
        public EntriesFilteredResponse<RegistrationEntry> GetLocalPartners(PartnerFilter filter, int startFrom, int count)
        {
            // запрос местных контрагентов
            filter = filter ?? new PartnerFilter();
            if (filter.RegEntityType == RegEntityTypeEnum.FOREIGN_COUNTERPARTY)
            {
                throw new MdlpException(HttpStatusCode.BadRequest, "Use GetForeignPartners method to return foreign counterparties", null, null);
            }
            else if (filter.RegEntityType == 0)
            {
                filter.RegEntityType = RegEntityTypeEnum.RESIDENT;
            }

            return GetPartners<RegistrationEntry>(filter, startFrom, count);
        }

        /// <summary>
        /// 8.9.1. Метод для получения информации об организации, в которой зарегистрирован текущий пользователь
        /// </summary>
        /// <returns>Описание организации</returns>
        public Member GetCurrentMember()
        {
            RequestRate(0.5); // 83

            var member = Get<MemberResponse>("members/current");
            return member != null ? member.Member : null;
        }

        /// <summary>
        /// 8.9.2. Метод для изменения данных организации, в которой зарегистрирован текущий пользователь
        /// </summary>
        public void UpdateCurrentMember(MemberOptions options)
        {
            Put("members/current", options);
        }

        /// <summary>
        /// 8.9.3. Метод для получения информации о лицевых счетах
        /// </summary>
        public BillingAccount[] GetCurrentBillingInfo()
        {
            var accounts = Get<BillingAccountResponse>("members/current/billing/info");
            return accounts != null ? accounts.Accounts : null;
        }

        /// <summary>
        /// 8.10.1. Фильтрация по реестру регистраторов эмиссии
        /// </summary>
        /// <param name="filter">Фильтр для поиска регистраторов эмиссии</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых регистраторов эмиссии</param>
        /// <param name="count">Количество записей в списке возвращаемых регистраторов эмиссии</param>
        /// <returns>Список регистраторов эмиссии</returns>
        public EntriesResponse<EmissionDeviceInfoEntry> GetEmissionDevices(EmissionDeviceFilter filter, int startFrom, int count)
        {
            RequestRate(1); // 85

            return Post<EntriesResponse<EmissionDeviceInfoEntry>>("reestr/registration-devices/emission/filter", new
            {
                filter = filter ?? new EmissionDeviceFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.10.2. Фильтрация по реестру регистраторов выбытия
        /// </summary>
        /// <param name="filter">Фильтр для поиска регистраторов выбытия</param>
        /// <param name="startFrom">Индекс первой записи в списке возвращаемых регистраторов выбытия</param>
        /// <param name="count">Количество записей в списке возвращаемых регистраторов выбытия</param>
        /// <returns>Список регистраторов выбытия</returns>
        public EntriesResponse<WithdrawalDeviceInfoEntry> GetWithdrawalDevices(WithdrawalDeviceFilter filter, int startFrom, int count)
        {
            RequestRate(1); // 86

            return Post<EntriesResponse<WithdrawalDeviceInfoEntry>>("reestr/registration-devices/withdrawal/filter", new
            {
                filter = filter ?? new WithdrawalDeviceFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.11.1. Фильтрация по реестру виртуального склада
        /// </summary>
        /// <param name="filter">Фильтр реестра виртуального склада</param>
        /// <param name="startFrom">Индекс первой записи</param>
        /// <param name="count">Количество записей в реестре</param>
        /// <returns>Список остатков</returns>
        public EntriesResponse<VirtualStorageEntry> GetVirtualStorage(VirtualStorageFilter filter, int startFrom, int count)
        {
            RequestRate(1); // 87

            return Post<EntriesResponse<VirtualStorageEntry>>("reestr/virtual-storage/filter", new
            {
                filter = filter ?? new VirtualStorageFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.12.1. Фильтрация по реестру решений о приостановке КИЗ
        /// </summary>
        /// <param name="filter">Фильтр реестра решений о приостановке КИЗ</param>
        /// <param name="startFrom">Индекс первой записи</param>
        /// <param name="count">Количество записей в реестре</param>
        /// <returns>Список решений о приостановке КИЗ</returns>
        public EntriesResponse<PausedCirculationDecision> GetPausedCirculationDecisions(PausedCirculationDecisionFilter filter, int startFrom, int count)
        {
            return Post<EntriesResponse<PausedCirculationDecision>>("reestr/paused-circulation-decisions/filter", new
            {
                filter = filter ?? new PausedCirculationDecisionFilter(),
                start_from = startFrom,
                count = count,
            });
        }

        /// <summary>
        /// 8.12.2. Получение перечня КИЗ по конкретному решению о приостановке
        /// </summary>
        /// <param name="haltId">Идентификатор решения о приостановке КИЗ</param>
        /// <param name="startFrom">Индекс первой записи</param>
        /// <param name="count">Количество записей</param>
        /// <returns>Список приостановленных КИЗ</returns>
        public EntriesResponse<PausedCirculationSgtin> GetPausedCirculationSgtins(string haltId, int startFrom, int count)
        {
            RequestRate(0.5); // 72

            return Post<EntriesResponse<PausedCirculationSgtin>>("reestr/paused-circulation-decisions/{halt_id}/sgtins/filter", new
            {
                start_from = startFrom,
                count = count,
            },
            new[]
            {
                new Parameter("halt_id", haltId, ParameterType.UrlSegment),
            });
        }

        /// <summary>
        /// 8.13.1. Получение сводной информации распределения ЛП
        /// </summary>
        /// <param name="gtin">Код GTIN лекарственного препарата</param>
        /// <param name="batch">Номер производственной серии (пока поддерживается только одна)</param>
        /// <returns>Сводная информация о распределении партий ЛП</returns>
        public EntriesResponse<ShortDistribution> GetBatchShortDistribution(string gtin, string batch)
        {
            RequestRate(1); // 102

            return Post<EntriesResponse<ShortDistribution>>("reestr/batches/short-distribution", new
            {
                gtin = gtin,
                batches = new[]
                {
                    batch,
                },
            });
        }
    }
}

namespace MdlpApiClient
{
    using MdlpApiClient.Xsd;
    using MdlpApiClient.Serialization;
    using System.Text;

    /// <remarks>
    /// Strongly typed REST API methods. Chapter 5: documents.
    /// </remarks>
    partial class MdlpClient
    {
        /// <summary>
        /// 5.1. Отправка объекта документа
        /// </summary>
        /// <param name="doc">Объект документа</param>
        /// <returns>Идентификатор документа</returns>
        public string SendDocument(Documents doc)
        {
            if (!LargeDocumentSize.HasValue)
            {
                LargeDocumentSize = GetLargeDocumentSize();
            }

            // serialize the document and estimate data packet size
            var xml = XmlSerializationHelper.Serialize(doc, ApplicationName);
            var xmlBytes = Encoding.UTF8.GetByteCount(xml);
            var xmlBase64 = 4 * xmlBytes / 3;
            var overhead = 1024; // requestId + JSON serialization overhead
            var totalSize = xmlBase64 + SignatureSize + overhead;

            // prefer SendDocument for small documents
            if (totalSize < LargeDocumentSize)
            {
                return SendDocument(xml);
            }

            return SendLargeDocument(xml);
        }

        /// <summary>
        /// Ограничение на размер документа, который можно отсылать методом SendDocument.
        /// </summary>
        public int? LargeDocumentSize { get; set; }

        /// <summary>
        /// Приблизительный размер подписи для оценки размера отсылаемого пакета.
        /// Размер сигнатуры вычисляется при аутентификации резидента.
        /// </summary>
        public int SignatureSize { get; set; }

        /// <summary>
        /// 5.10. Получение объекта документа по идентификатору
        /// </summary>
        /// <param name="documentId">Идентификатор документа</param>
        public Documents GetDocument(string documentId)
        {
            var xml = GetDocumentText(documentId);
            return XmlSerializationHelper.Deserialize(xml);
        }

        /// <summary>
        /// 5.12. Получение объекта квитанции по номеру исходящего документа
        /// </summary>
        /// <param name="documentId">Идентификатор документа</param>
        public Documents GetTicket(string documentId)
        {
            var xml = GetTicketText(documentId);
            return XmlSerializationHelper.Deserialize(xml);
        }
    }
}

namespace MdlpApiClient
{
    using System;
    using System.Diagnostics;
    using System.Linq;
    using System.Runtime.CompilerServices;
    using System.Security.Cryptography.X509Certificates;
    using System.Text;
    using System.Xml;
    using MdlpApiClient.DataContracts;
    using MdlpApiClient.Serialization;
    using MdlpApiClient.Toolbox;
    using RestSharp;
    using RestSharp.Serialization;

    /// <summary>
    /// MDLP REST API client.
    /// </summary>
    public partial class MdlpClient : IDisposable
    {
        /// <summary>
        /// Stage API HTTP URL.
        /// </summary>
        public const string StageApiHttp = "http://api.stage.mdlp.crpt.ru/api/v1/";

        /// <summary>
        /// Stage API HTTPS URL.
        /// </summary>
        public const string StageApiHttps = "https://api.stage.mdlp.crpt.ru/api/v1/";

        /// <summary>
        /// Sandbox API HTTP URL.
        /// </summary>
        public const string SandboxApiHttp = "http://api.sb.mdlp.crpt.ru/api/v1/";

        /// <summary>
        /// Sandbox API HTTPS URL.
        /// </summary>
        public const string SandboxApiHttps = "https://api.sb.mdlp.crpt.ru/api/v1/";

        /// <summary>
        /// Initializes a new instance of the MDLP REST API client.
        /// </summary>
        /// <param name="credentials">Credentials used for authentication.</param>
        /// <param name="client"><see cref="IRestClient"/> instance.</param>
        public MdlpClient(CredentialsBase credentials, IRestClient client)
        {
            Credentials = credentials;
            Serializer = new ServiceStackSerializer();
            BaseUrl = client.BaseUrl.ToString();
            Limiter = new RequestRateLimiter();

            // set up REST client
            Client = client;
            Client.Authenticator = new CredentialsAuthenticator(this, credentials);
            Client.Encoding = Encoding.UTF8;
            Client.ThrowOnDeserializationError = false;
            Client.UseSerializer(() => Serializer);
        }

        /// <summary>
        /// Initializes a new instance of the MDLP REST API client.
        /// </summary>
        /// <param name="credentials">Credentials used for authentication.</param>
        /// <param name="baseUrl">Base URL of the API endpoint.</param>
        public MdlpClient(CredentialsBase credentials, string baseUrl = StageApiHttp)
            : this(credentials, new RestClient(baseUrl ?? StageApiHttp))
        {
        }

        /// <inheritdoc/>
        public void Dispose()
        {
            if (IsAuthenticated)
            {
                Logout();
            }
        }

        /// <summary>
        /// Gets or sets the application name.
        /// </summary>
        public string ApplicationName { get; set; }

        /// <summary>
        /// Gets base API URL.
        /// </summary>
        public string BaseUrl { get; private set; }

        private IRestSerializer Serializer { get; set; }

        private RequestRateLimiter Limiter { get; set; }

        private void RequestRate(double seconds, [CallerMemberName]string methodName = null)
        {
            var correction = IsAuthenticated ? 0.3 : 2;
            Limiter.Delay(TimeSpan.FromSeconds(seconds + correction), methodName);
        }

        /// <summary>
        /// Gets the <see cref="IRestClient"/> instance.
        /// </summary>
        public IRestClient Client { get; private set; }

        private CredentialsBase Credentials { get; set; }

        private X509Certificate2 userCertificate;

        internal bool IsAuthenticated { get; private set; }

        /// <summary>
        /// X.509 certificate of the resident user (if applicable).
        /// </summary>
        internal X509Certificate2 UserCertificate
        {
            set { userCertificate = value; }
            get
            {
                if (userCertificate == null)
                {
                    userCertificate = GostCryptoHelpers.FindCertificate(Credentials.UserID);
                }

                return userCertificate;
            }
        }

        /// <summary>
        /// Computes the detached digital signature of the given text.
        /// </summary>
        /// <param name="textToSign">Text to sign.</param>
        /// <returns>Detached signature in CMS format and base64 encoding.</returns>
        private string ComputeSignature(string textToSign)
        {
            if (UserCertificate == null)
            {
                return null;
            }

            return GostCryptoHelpers.ComputeDetachedSignature(UserCertificate, textToSign);
        }

        private void PrepareRequest(IRestRequest request, string apiMethodName)
        {
            // use request parameters to store additional properties, not really used by the requests
            request.AddParameter(ApiTimestampParameterName, DateTime.Now.Ticks, ParameterType.UrlSegment);
            request.AddParameter(ApiTickCountParameterName, Environment.TickCount.ToString(), ParameterType.UrlSegment);
            if (!string.IsNullOrWhiteSpace(apiMethodName))
            {
                request.AddHeader(ApiMethodNameHeaderName, apiMethodName);
            }

            // trace requests and responses
            if (Tracer != null)
            {
                request.OnBeforeRequest = http => Trace(http, request);
                request.OnBeforeDeserialization = resp => Trace(resp);
            }
        }

        private void ThrowOnFailure(IRestResponse response)
        {
            if (!response.IsSuccessful)
            {
                // try to find the non-empty error message
                var errorMessage = response.ErrorMessage;
                var contentMessage = response.Content;
                var errorResponse = default(ErrorResponse);
                if (response.ContentType != null)
                {
                    // Text/plain;charset=UTF-8 => text/plain
                    var contentType = response.ContentType.ToLower().Trim();
                    var semicolonIndex = contentType.IndexOf(';');
                    if (semicolonIndex >= 0)
                    {
                        contentType = contentType.Substring(0, semicolonIndex).Trim();
                    }

                    // Try to deserialize error response DTO
                    if (Serializer.SupportedContentTypes.Contains(contentType))
                    {
                        errorResponse = Serializer.Deserialize<ErrorResponse>(response);
                        contentMessage = string.Join(". ", new[]
                        {
                            errorResponse.Error,
                            errorResponse.Message,
                            errorResponse.Description,
                        }
                        .Distinct()
                        .Where(m => !string.IsNullOrWhiteSpace(m)));
                    }
                    else if (response.ContentType.ToLower().Contains("html"))
                    {
                        // Try to parse HTML
                        contentMessage = HtmlHelper.ExtractText(response.Content);
                    }
                    else
                    {
                        // Return as is assuming text/plain content
                        contentMessage = response.Content;
                    }
                }

                // HTML->XML deserialization errors are meaningless
                if (response.ErrorException is XmlException && errorMessage == response.ErrorException.Message)
                {
                    errorMessage = contentMessage;
                }

                // empty error message is meaningless
                if (string.IsNullOrWhiteSpace(errorMessage))
                {
                    errorMessage = contentMessage;
                }

                // finally, throw it
                throw new MdlpException(response.StatusCode, errorMessage, errorResponse, response.ErrorException);
            }
        }

        /// <summary>
        /// Executes the given request and checks the result.
        /// </summary>
        /// <typeparam name="T">Response type.</typeparam>
        /// <param name="request">The request to execute.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        internal T Execute<T>(IRestRequest request, string apiMethodName)
        {
            PrepareRequest(request, apiMethodName);
            var response = Client.Execute<T>(request);
            ThrowOnFailure(response);
            return response.Data;
        }

        /// <summary>
        /// Executes the given request and checks the result.
        /// </summary>
        /// <param name="request">The request to execute.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        internal void Execute(IRestRequest request, string apiMethodName)
        {
            PrepareRequest(request, apiMethodName);
            var response = Client.Execute(request);

            // there is no body deserialization step, so we need to trace
            Trace(response);
            ThrowOnFailure(response);
        }

        /// <summary>
        /// Executes the given request and checks the result.
        /// </summary>
        /// <param name="request">The request to execute.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        internal string ExecuteString(IRestRequest request, string apiMethodName)
        {
            PrepareRequest(request, apiMethodName);
            var response = Client.Execute(request);

            // there is no body deserialization step, so we need to trace
            Trace(response);
            ThrowOnFailure(response);
            return response.Content;
        }

        /// <summary>
        /// Performs GET request.
        /// </summary>
        /// <typeparam name="T">Response type.</typeparam>
        /// <param name="url">Resource url.</param>
        /// <param name="parameters">IRestRequest parameters.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public T Get<T>(string url, Parameter[] parameters = null, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.GET, DataFormat.Json);
            if (!parameters.IsNullOrEmpty())
            {
                request.AddOrUpdateParameters(parameters);
            }

            return Execute<T>(request, apiMethodName);
        }

        /// <summary>
        /// Performs GET request and returns a string.
        /// </summary>
        /// <param name="url">Resource url.</param>
        /// <param name="parameters">IRestRequest parameters.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public string Get(string url, Parameter[] parameters = null, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.GET, DataFormat.Json);
            if (!parameters.IsNullOrEmpty())
            {
                request.AddOrUpdateParameters(parameters);
            }

            return ExecuteString(request, apiMethodName);
        }

        /// <summary>
        /// Performs POST request.
        /// </summary>
        /// <typeparam name="T">Response type.</typeparam>
        /// <param name="url">Resource url.</param>
        /// <param name="body">Request body, to be serialized as JSON.</param>
        /// <param name="parameters">IRestRequest parameters.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public T Post<T>(string url, object body, Parameter[] parameters = null, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.POST, DataFormat.Json);
            request.AddJsonBody(body);
            if (!parameters.IsNullOrEmpty())
            {
                request.AddOrUpdateParameters(parameters);
            }

            return Execute<T>(request, apiMethodName);
        }

        /// <summary>
        /// Performs POST request.
        /// </summary>
        /// <param name="url">Resource url.</param>
        /// <param name="body">Request body, to be serialized as JSON.</param>
        /// <param name="parameters">IRestRequest parameters.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public void Post(string url, object body, Parameter[] parameters = null, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.POST, DataFormat.Json);
            request.AddJsonBody(body);
            if (!parameters.IsNullOrEmpty())
            {
                request.AddOrUpdateParameters(parameters);
            }

            Execute(request, apiMethodName);
        }

        /// <summary>
        /// Performs PUT request.
        /// </summary>
        /// <param name="url">Resource url.</param>
        /// <param name="body">Request body, to be serialized as JSON.</param>
        /// <param name="parameters">IRestRequest parameters.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public void Put(string url, object body, Parameter[] parameters = null, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.PUT, DataFormat.Json);
            request.AddJsonBody(body);
            if (!parameters.IsNullOrEmpty())
            {
                request.AddOrUpdateParameters(parameters);
            }

            Execute(request, apiMethodName);
        }

        /// <summary>
        /// Performs PUT request.
        /// </summary>
        /// <param name="url">Resource url.</param>
        /// <param name="body">Request body, serialized as string.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public void Put(string url, string body, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.PUT, DataFormat.None);
            request.AddParameter(string.Empty, body, ParameterType.RequestBody);
            Execute(request, apiMethodName);
        }

        /// <summary>
        /// Performs DELETE request.
        /// </summary>
        /// <param name="url">Resource url.</param>
        /// <param name="body">Request body, serialized as string.</param>
        /// <param name="parameters">IRestRequest parameters.</param>
        /// <param name="apiMethodName">Strong-typed REST API method name, for tracing.</param>
        public void Delete(string url, object body, Parameter[] parameters = null, [CallerMemberName] string apiMethodName = null)
        {
            var request = new RestRequest(url, Method.DELETE, DataFormat.Json);
            if (body != null)
            {
                request.AddJsonBody(body);
            }

            if (!parameters.IsNullOrEmpty())
            {
                request.AddOrUpdateParameters(parameters);
            }

            Execute(request, apiMethodName);
        }
    }
}

namespace MdlpApiClient
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using RestSharp;
    using RestSharp.Serialization.Json;
    using MdlpApiClient.Toolbox;
    using System.Diagnostics;
    using System.Globalization;

    partial class MdlpClient
    {
        private const string ApiMethodNameHeaderName = "X-ApiMethodName";
        private const string ApiTimestampParameterName = "X-ApiTimestamp";
        private const string ApiTickCountParameterName = "X-ApiTickCount";

        /// <summary>
        /// Tracer function, such as <see cref="Console.WriteLine(string, object[])"/>.
        /// </summary>
        public Action<string, object[]> Tracer { get; set; }

        private void Trace(string format, params object[] arguments)
        {
            var tracer = Tracer;
            if (tracer != null)
            {
                tracer(format, arguments);
            }
        }

        private JsonSerializer Json = new JsonSerializer();

        private static string CR = Environment.NewLine;

        internal static string FormatHeaders(IEnumerable<Tuple<string, object>> headers)
        {
            if (headers == null || !headers.Any())
            {
                return "headers: none" + CR;
            }

            return "headers: {" + CR +
                string.Join(CR, headers.Select(h => "  " + h.Item1 + " = " + h.Item2)) +
            CR + "}" + CR;
        }

        internal static string FormatBody(string content, bool isJson = true)
        {
            if (string.IsNullOrWhiteSpace(content))
            {
                return string.Empty;
            }

            if (isJson)
            {
               return "body: " + JsonFormatter.FormatJson(content) + CR;
            }

            return "body:" + CR + content + CR;
        }

        private static bool IsJson(string contentType) =>
            contentType != null && contentType.IndexOf("json", StringComparison.OrdinalIgnoreCase) >= 0;

        internal static string FormatBody(RequestBody body)
        {
            if (IsEmpty(body))
            {
                return string.Empty;
            }

            var bodyValue = body.Value + string.Empty;
            if (IsJson(body.ContentType))
            {
                bodyValue = JsonFormatter.FormatJson(bodyValue);
            }

            return "body: " + bodyValue + CR;
        }

        private static bool IsEmpty(RequestBody body)
        {
            return (body == null || body.Value == null || string.Empty.Equals(body.Value));
        }

        private IEnumerable<Tuple<string, object>> GetHeaders(IHttp http)
        {
            var headers =
                from p in http.Headers
                select Tuple.Create(p.Name, p.Value as object);

            if (!string.IsNullOrWhiteSpace(http.RequestContentType))
            {
                headers = headers.Concat(new[]
                {
                    Tuple.Create("Content-type", http.RequestContentType as object)
                });
            }

            return headers;
        }

        private void Trace(IHttp http, IRestRequest request)
        {
            var tracer = Tracer;
            if (tracer != null)
            {
                // trace API method name
                var apiMethod = http.Headers.FirstOrDefault(h => StringComparer.OrdinalIgnoreCase.Equals(h.Name, ApiMethodNameHeaderName));
                if (apiMethod != null && !string.IsNullOrWhiteSpace(apiMethod.Value))
                {
                    tracer("// {0}", new[] { apiMethod.Value });
                }

                // trace HTTP request internals
                var method = request.Method.ToString();
                var uri = http.Url;
                var body = FormatBody(request.Body);
                var headers = FormatHeaders(GetHeaders(http));

                tracer("-> {0} {1}{2}{3}{4}", new object[]
                {
                    method, uri, CR,
                    headers,
                    body,
                });
            }
        }

        internal static string FormatTimings(DateTime? startTime, int tickCount)
        {
            if (startTime == null && tickCount == 0)
            {
                return string.Empty;
            }

            var items = new List<string>()
            {
                "timings: {"
            };

            if (startTime.HasValue)
            {
                items.Add("  started: " + startTime.Value.ToString("s").Replace("T", " ").Replace("00:00:00", "").Trim());
            }

            if (tickCount > 0)
            {
                items.Add("  elapsed: " + TimeSpan.FromMilliseconds(tickCount).ToString("g", CultureInfo.InvariantCulture));
            }

            items.Add("}");
            return string.Join(CR, items) + CR;
        }

        private static string FormatTimings(IRestResponse response)
        {
            // extract timings from request parameters
            var timings = string.Empty;
            var startTime = default(DateTime?);
            var timestampParameter = response.Request.Parameters.FirstOrDefault(h => StringComparer.OrdinalIgnoreCase.Equals(h.Name, ApiTimestampParameterName));
            if (timestampParameter != null && timestampParameter.Value != null)
            {
                var timestampTicks = Convert.ToInt64(timestampParameter.Value);
                startTime = new DateTime(timestampTicks);
            }

            var tickCount = default(int);
            var tickCountParameter = response.Request.Parameters.FirstOrDefault(h => StringComparer.OrdinalIgnoreCase.Equals(h.Name, ApiTickCountParameterName));
            if (tickCountParameter != null && tickCountParameter.Value is string tickCountString)
            {
                // tick count can be negative if overflown
                if (int.TryParse(tickCountString, out var count))
                {
                    tickCount = (int)((uint)Environment.TickCount - (uint)count);
                }
            }

            // trace timestamp and duration
            return FormatTimings(startTime, tickCount);
        }

        private void Trace(IRestResponse response)
        {
            var tracer = Tracer;
            if (tracer != null)
            {
                // trace the response
                var result = response.IsSuccessful ? "OK" : "ERROR";
                var timings = FormatTimings(response);
                var headerList = response.Headers.Select(p => Tuple.Create(p.Name, p.Value));
                var headers = FormatHeaders(headerList);
                var body = FormatBody(response.Content, IsJson(response.ContentType));
                var errorMessage = string.IsNullOrWhiteSpace(response.ErrorMessage) ? string.Empty :
                    "error message: " + response.ErrorMessage + CR;

                tracer("<- {0} {1} ({2}) {3}{4}{5}{6}{7}{8}", new object[]
                {
                    result,
                    (int)response.StatusCode,
                    response.StatusCode.ToString(),
                    response.ResponseUri, CR,
                    errorMessage,
                    timings,
                    headers,
                    body,
                });
            }
        }
    }
}

namespace MdlpApiClient
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using MdlpApiClient.DataContracts;

    /// <summary>
    /// MDLP REST API Exception.
    /// </summary>
    [Serializable]
    public class MdlpException : Exception
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MdlpException"/> class.
        /// </summary>
        /// <param name="code">HTTP status code.</param>
        /// <param name="message">Error message.</param>
        /// <param name="errorResponse"><see cref="ErrorResponse"/> instance, if available.</param>
        /// <param name="innerException">Inner <see cref="Exception"/> instance.</param>
        public MdlpException(HttpStatusCode code, string message, ErrorResponse errorResponse, Exception innerException)
            : base(GetMessage(code, message), innerException)
        {
            StatusCode = code;
            ErrorResponse = errorResponse;
        }

        private static string GetMessage(HttpStatusCode code, string message)
        {
            if (!string.IsNullOrWhiteSpace(message))
            {
                return message;
            }

            return code.ToString();
        }

        /// <inheritdoc/>
        protected MdlpException(SerializationInfo info, StreamingContext context)
        {
            StatusCode = (HttpStatusCode)info.GetInt32("Code");
            if (info.GetString("Path") != null)
            {
                ErrorResponse = new ErrorResponse
                {
                    TimeStamp = info.GetDateTime("TimeStamp"),
                    StatusCode = info.GetInt32("StatusCode"),
                    Error = info.GetString("Error"),
                    Message = info.GetString("Message"),
                    Path = info.GetString("Path"),
                    Description = info.GetString("Description"),
                };
            }
        }

        /// <summary>
        /// HTTP status code.
        /// </summary>
        public HttpStatusCode StatusCode { get; set; }

        /// <summary>
        /// <see cref="ErrorResponse"/> instance returned by server.
        /// </summary>
        public ErrorResponse ErrorResponse { get; set; }

        /// <inheritdoc/>
        public override void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            base.GetObjectData(info, context);

            info.AddValue("Code", (int)StatusCode);
            if (ErrorResponse != null)
            {
                info.AddValue("TimeStamp", ErrorResponse.TimeStamp);
                info.AddValue("StatusCode", ErrorResponse.StatusCode);
                info.AddValue("Error", ErrorResponse.Error);
                info.AddValue("Message", ErrorResponse.Message);
                info.AddValue("Path", ErrorResponse.Path);
                info.AddValue("Description", ErrorResponse.Description);
            }
        }
    }
}

namespace MdlpApiClient
{
    using DataContracts;

    /// <summary>
    /// Non-resident user credentials (password-based authentication).
    /// </summary>
    public class NonResidentCredentials : CredentialsBase
    {
        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        public string Password { get; set; }

        /// <inheritdoc/>
        public override AuthToken Authenticate(MdlpClient apiClient)
        {
            // get authentication code
            var authCode = apiClient.Authenticate(ClientID, ClientSecret, UserID, AuthTypeEnum.PASSWORD);

            // get authentication token
            return apiClient.GetToken(authCode, password: Password);
        }
    }
}

namespace MdlpApiClient
{
    using System.Security;
    using System.Text;
    using DataContracts;
    using MdlpApiClient.Toolbox;

    /// <summary>
    /// Resident credentials. Uses GOST cryptocertificate with a private key.
    /// </summary>
    public class ResidentCredentials : CredentialsBase
    {
        /// <inheritdoc/>
        public override AuthToken Authenticate(MdlpClient apiClient)
        {
            // load the certificate with a private key by userId
            var certificate = apiClient.UserCertificate;
            if (certificate == null)
            {
                throw new SecurityException("GOST-compliant certificate not found. " +
                    "Make sure that the certificate is properly installed and has the associated private key. " +
                    "Thumbprint or subject name: " + UserID);
            }

            // get authentication code
            var authCode = apiClient.Authenticate(ClientID, ClientSecret, UserID, AuthTypeEnum.SIGNED_CODE);

            // compute the signature and save the size
            var signature = GostCryptoHelpers.ComputeDetachedSignature(certificate, authCode);
            apiClient.SignatureSize = Encoding.UTF8.GetByteCount(signature);

            // get authentication token
            return apiClient.GetToken(authCode, signature: signature);
        }
    }
}

namespace MdlpApiClient.Serialization
{
    using System;
    using MdlpApiClient.DataContracts;
    using RestSharp;
    using RestSharp.Serialization;
    using ServiceStack.Text;

    /// <summary>
    /// ServiceStack.Text.v4.0.33-based serializer.
    /// </summary>
    internal class ServiceStackSerializer : IRestSerializer
    {
        static ServiceStackSerializer()
        {
            // use custom serialization only for our own types
            JsConfig<CustomDate>.SerializeFn = c => c;
            JsConfig<CustomDate>.DeSerializeFn = s => CustomDate.Parse(s);
            JsConfig<CustomDateTime>.SerializeFn = c => c;
            JsConfig<CustomDateTime>.DeSerializeFn = s => CustomDateTime.Parse(s);
            JsConfig<CustomDateTimeSpace>.SerializeFn = c => c;
            JsConfig<CustomDateTimeSpace>.DeSerializeFn = s => CustomDateTimeSpace.Parse(s);
        }

        public string[] SupportedContentTypes
        {
            get
            {
                return new[]
                {
                    "application/json", "text/json", "text/x-json", "text/javascript", "*+json"
                };
            }
        }

        public DataFormat DataFormat
        {
            get { return DataFormat.Json; }
        }

        private string contentType = "application/json";

        public string ContentType
        {
            get { return contentType; }
            set { contentType = value; }
        }

        internal T Deserialize<T>(string content)
        {
            using (var scope = JsConfig.BeginScope())
            {
                scope.AlwaysUseUtc = false;
                scope.AssumeUtc = false;
                scope.AppendUtcOffset = false;
                return JsonSerializer.DeserializeFromString<T>(content);
            }
        }

        public T Deserialize<T>(IRestResponse response)
        {
            return Deserialize<T>(response.Content);
        }

        public string Serialize(Parameter bodyParameter)
        {
            return Serialize(bodyParameter.Value);
        }

        public string Serialize(object obj)
        {
            using (var scope = JsConfig.BeginScope())
            {
                scope.IncludeTypeInfo = false;

                // ISO8601DateTime: "2019-04-24 20:43:44"
                // ISO8601DateOnly: "2018-12-12"
                // ISO8601: "2018-12-12T00:00:00.0000000"
                scope.DateHandler = DateHandler.ISO8601;
                return JsonSerializer.SerializeToString(obj);
            }
        }
    }
}

namespace MdlpApiClient.Serialization
{
    using System;
    using System.IO;
    using System.Linq;
    using System.Reflection;
    using System.Xml.Linq;
    using System.Xml.Serialization;
    using MdlpApiClient.Xsd;

    /// <summary>
    /// XML serialization helper.
    /// </summary>
    public static class XmlSerializationHelper
    {
        /// <summary>
        /// Gets or sets current document XSD schema version.
        /// </summary>
        public static string DocumentSchemaVersion { get; set; } = "1.35";

        /// <summary>
        /// Deserializes the given XML document.
        /// </summary>
        /// <param name="docXml">XML document to deserialize.</param>
        /// <returns>The <see cref="Documents"/> instance.</returns>
        public static Documents Deserialize(string docXml)
        {
            var serializer = new XmlSerializer(typeof(Documents));
            using (var reader = new StringReader(docXml))
            {
                return serializer.Deserialize(reader) as Documents;
            }
        }

        /// <summary>
        /// Serializes the given document to XML string.
        /// </summary>
        /// <param name="doc">Document to serialize.</param>
        /// <param name="comments">Optional comments such as application name and version.</param>
        /// <returns>Serialized XML document.</returns>
        public static string Serialize(Documents doc, string comments = null)
        {
            // make sure that document schema version is specified
            if (string.IsNullOrWhiteSpace(doc.Version))
            {
                doc.Version = DocumentSchemaVersion;
            }

            var serializer = new XmlSerializer(typeof(Documents));
            using (var writer = new StringWriter())
            {
                serializer.Serialize(writer, doc);

                // add optional comments, etc
                var xml = writer.GetStringBuilder().ToString();
                var xdoc = XDocument.Parse(xml);

                // add namespace prefix
                var by = new XAttribute(XNamespace.Xmlns + "by", PackageUrl);
                xdoc.Root.ReplaceAttributes(new object[] { by, xdoc.Root.Attributes() });

                // add optional comments
                if (!string.IsNullOrWhiteSpace(comments))
                {
                    var element = xdoc.FirstNode as XElement;
                    if (element != null && element.FirstNode != null)
                    {
                        // <!-- add spaces before and after the text -->
                        comments = " " + comments.Trim() + " ";
                        element.FirstNode.AddBeforeSelf(new XComment(comments));
                    }
                }

                // ToString skips the XML declaration node
                return xdoc.ToString();
            }
        }

        /// <summary>
        /// Saves <see cref="XDocument"/> as string preserving the declaration node.
        /// </summary>
        /// <param name="xdoc"><see cref="XDocument"/> to save.</param>
        /// <param name="options"><see cref="SaveOptions"/>, optional.</param>
        /// <returns>String representation of the given <see cref="XDocument"/>.</returns>
        internal static string ToXmlString(this XDocument xdoc, SaveOptions options = SaveOptions.None)
        {
            var newLine = (options & SaveOptions.DisableFormatting) == SaveOptions.DisableFormatting ? "" : Environment.NewLine;
            return xdoc.Declaration == null ? xdoc.ToString(options) : xdoc.Declaration + newLine + xdoc.ToString(options);
        }

        internal static string PackageUrl = GetPackageUrl();

        private static string GetPackageUrl()
        {
            // get assembly file version, such as 1.0.2.4
            var version = typeof(MdlpClient).Assembly
                .GetCustomAttributes(typeof(AssemblyFileVersionAttribute))
                .OfType<AssemblyFileVersionAttribute>()
                .FirstOrDefault()
                .Version;

            // skip the last part: 1.2.3.x => 1.2.3
            var index = version.LastIndexOf(".");
            return "https://www.nuget.org/packages/MdlpApiClient/" + version.Substring(0, index);
        }
    }
}

namespace MdlpApiClient.Toolbox
{
    using GostCryptography.Base;
    using GostCryptography.Pkcs;
    using System;
    using System.Security.Cryptography.Pkcs;
    using System.Security.Cryptography.X509Certificates;
    using System.Text;

    /// <summary>
    /// Cryptographic utilities for GOST provider.
    /// </summary>
    public class GostCryptoHelpers
    {
        /// <summary>
        /// For the unit tests, set this to the StoreLocation.CurrentUser.
        /// For the production code, keep it set to the StoreLocation.LocalMachine.
        /// Only Administrator or LocalSystem accounts can access the LocalMachine stores.
        /// </summary>
        public static StoreLocation DefaultStoreLocation = StoreLocation.LocalMachine;

        /// <summary>
        /// Checks if GOST cryptoprovider CryptoPro is installed.
        /// </summary>
        public static bool IsGostCryptoProviderInstalled()
        {
            return
                GostCryptography.Native.CryptoApiHelper.IsInstalled(ProviderType.CryptoPro) &&
                GostCryptography.Native.CryptoApiHelper.IsInstalled(ProviderType.CryptoPro_2012_512) &&
                GostCryptography.Native.CryptoApiHelper.IsInstalled(ProviderType.CryptoPro_2012_1024);
        }

        /// <summary>
        /// Looks for the GOST certificate with a private key using the subject name or a thumbprint.
        /// Returns null, if certificate is not found, the algorithm isn't GOST-compliant, or the private key is not associated with it.
        /// </summary>
        public static X509Certificate2 FindCertificate(string cnameOrThumbprint, StoreName storeName = StoreName.My, StoreLocation? storeLocation = null)
        {
            // avoid returning any certificate
            if (string.IsNullOrWhiteSpace(cnameOrThumbprint))
            {
                return null;
            }

            // a thumbprint is a hexadecimal number, compare it case-insensitive
            using (var store = new X509Store(storeName, storeLocation ?? DefaultStoreLocation))
            {
                store.Open(OpenFlags.OpenExistingOnly | OpenFlags.ReadOnly);

                foreach (var certificate in store.Certificates)
                {
                    if (certificate.HasPrivateKey && certificate.IsGost())
                    {
                        var nameMatches = certificate.SubjectName.Name.IndexOf(cnameOrThumbprint, StringComparison.OrdinalIgnoreCase) >= 0;
                        var thumbprintMatches = StringComparer.OrdinalIgnoreCase.Equals(certificate.Thumbprint, cnameOrThumbprint);
                        if (nameMatches || thumbprintMatches)
                        {
                            return certificate;
                        }
                    }
                }

                return null;
            }
        }

        /// <summary>
        /// Signs the message with a GOST digital signature and returns the detached signature (CMS format, base64 encoding).
        /// Detached signature is a CMS message, that doesn't contain the original signed data: only the signature and the certificates.
        /// </summary>
        public static string ComputeDetachedSignature(X509Certificate2 certificate, string textToSign)
        {
            // The following line opens the private key.
            // It requires that the current user has permissions to use the private key.
            // Permissions are given using MMC console, Certificates snap-in.
            var privateKey = (GostAsymmetricAlgorithm)certificate.GetPrivateKeyAlgorithm();
            var publicKey = (GostAsymmetricAlgorithm)certificate.GetPublicKeyAlgorithm();
            var message = Encoding.UTF8.GetBytes(textToSign);

            // Create GOST-compliant signature helper
            var signedCms = new GostSignedCms(new ContentInfo(message), true);

            // The object that has the signer information
            var signer = new CmsSigner(certificate);

            // Computing the CMS/PKCS#7 signature
            signedCms.ComputeSignature(signer, true);

            // Encoding the CMS/PKCS#7 message
            var encoded = signedCms.Encode();
            return Convert.ToBase64String(encoded);
        }
    }
}

namespace MdlpApiClient.Toolbox
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Security.Cryptography;
    using System.Text;

    /// <summary>
    /// Helper class for working with hashes.
    /// </summary>
    internal static class HashUtilities
    {
        /// <summary>
        /// Returns the hex representation for an array of bytes (for example, md5-hash).
        /// </summary>
        /// <param name="hash">Byte array to convert.</param>
        public static string ToHexString(this byte[] hash)
        {
            return string.Join(string.Empty, (hash ?? EmptyBuffer).Select(b => string.Format("{0:x2}", b)));
        }

        /// <summary>
        /// Converts hexadecimal string such as md5 hash back to the array of bytes.
        /// </summary>
        /// <param name="hexString">Hexadecimal string, such as "cafebabe".</param>
        public static byte[] FromHexString(this string hexString)
        {
            if (string.IsNullOrWhiteSpace(hexString))
            {
                return EmptyBuffer;
            }

            if (hexString.Length % 2 != 0)
            {
                throw new ArgumentOutOfRangeException("hexString", "Hexadecimal string length should be even.");
            }

            var result = new byte[hexString.Length / 2];
            for (var i = 0; i < result.Length; i++)
            {
                result[i] = Convert.ToByte(hexString.Substring(i * 2, 2), 16);
            }

            return result;
        }

        /// <summary>
        /// Computes the hash of an array of bytes.
        /// </summary>
        /// <typeparam name="T">Hash algorithm.</typeparam>
        /// <param name="data">The data to hash.</param>
        public static string ComputeHash<T>(this byte[] data)
            where T : HashAlgorithm
        {
            var algorithm = typeof(T).FullName;
            var hasher = (T)CryptoConfig.CreateFromName(algorithm);
            var hash = hasher.ComputeHash(data);
            return hash.ToHexString();
        }

        /// <summary>
        /// Empty byte array.
        /// </summary>
        public static readonly byte[] EmptyBuffer = new byte[0];

        /// <summary>
        /// Computes the hash of the specified string.
        /// </summary>
        /// <typeparam name="T">Hash algorithm.</typeparam>
        /// <param name="str">The string to hash.</param>
        public static string ComputeHash<T>(this string str)
            where T : HashAlgorithm
        {
            var bytes = EmptyBuffer;
            if (!string.IsNullOrEmpty(str))
            {
                bytes = Encoding.Default.GetBytes(str);
            }

            var algorithm = typeof(T).FullName;
            var hasher = (T)CryptoConfig.CreateFromName(algorithm);
            bytes = hasher.ComputeHash(bytes);
            return bytes.ToHexString();
        }

        /// <summary>
        /// Computes the hash for the stream.
        /// </summary>
        /// <typeparam name="T">Hash algorithm.</typeparam>
        /// <param name="fs"><see cref="Stream"/> of bytes to hash.</param>
        public static string ComputeHash<T>(this Stream fs)
            where T : HashAlgorithm
        {
            var algorithm = typeof(T).FullName;
            var hasher = (T)CryptoConfig.CreateFromName(algorithm);
            var hash = hasher.ComputeHash(fs);
            return hash.ToHexString();
        }

        /// <summary>
        /// Checks whether the given enumerable sequence is null or empty.
        /// </summary>
        /// <typeparam name="T">Sequence element type.</typeparam>
        /// <param name="sequence">Enumerable sequence.</param>
        public static bool IsNullOrEmpty<T>(this IEnumerable<T> sequence)
        {
            return sequence == null || !sequence.Any();
        }

        /// <summary>
        /// Returns empty enumerable sequence if it's null.
        /// </summary>
        /// <typeparam name="T">Sequence element type.</typeparam>
        /// <param name="sequence">Enumerable sequence.</param>
        public static IEnumerable<T> EmptyIfNull<T>(this IEnumerable<T> sequence)
        {
            return sequence == null ? Enumerable.Empty<T>() : sequence;
        }
    }
}

namespace MdlpApiClient.Toolbox
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Text.RegularExpressions;
    using System.Threading.Tasks;

    internal static class HtmlHelper
    {
        /// <summary>
        /// Try to extract readable text from HTML.
        /// </summary>
        /// <param name="html">HTML to process.</param>
        /// <returns>Human-readable text.</returns>
        public static string ExtractText(string html)
        {
            if (string.IsNullOrWhiteSpace(html))
            {
                return string.Empty;
            }

            var bodyStart = html.IndexOf("<body");
            if (bodyStart >= 0)
            {
                html = html.Substring(bodyStart);
            }

            // replace tags
            var text = new Regex("<(br/?)|(</h[1-6])>").Replace(html, Environment.NewLine);
            text = new Regex("<[^>]+>").Replace(text, " ");
            text = new Regex("[ \t]+").Replace(text, " ");

            // trim lines
            var lines = text.Split('\r').Select(l => l.Trim()).Where(l => !string.IsNullOrEmpty(l));
            return string.Join(Environment.NewLine, lines);
        }
    }
}

namespace MdlpApiClient.Toolbox
{
    using System;
    using System.Linq;

    /// <summary>
    /// Dependency-free JSON formatter.
    /// </summary>
    internal static class JsonFormatter
	{
		/// <summary>
		/// Formats the given JSON code.
		/// </summary>
		/// <remarks>
		/// Based on:
		/// https://stackoverflow.com/a/57100143/544641
		/// https://stackoverflow.com/a/24782322/544641
		/// </remarks>
		/// <param name="json">JSON code to format.</param>
		/// <param name="indent">Optional indent.</param>
		public static string FormatJson(string json, string indent = "  ")
		{
			var indentation = 0;
			var quoteCount = 0;
			var escapeCount = 0;

			var result =
				from ch in json ?? string.Empty
				let escaped = (ch == '\\' ? escapeCount++ : escapeCount > 0 ? escapeCount-- : escapeCount) > 0
				let quotes = ch == '"' && !escaped ? quoteCount++ : quoteCount
				let unquoted = quotes % 2 == 0
				let colon = ch == ':' && unquoted ? ": " : null
				let nospace = char.IsWhiteSpace(ch) && unquoted ? string.Empty : null
				let lineBreak = ch == ',' && unquoted ? ch + Environment.NewLine + string.Concat(Enumerable.Repeat(indent, indentation)) : null
				let openChar = (ch == '{' || ch == '[') && unquoted ? ch + Environment.NewLine + string.Concat(Enumerable.Repeat(indent, ++indentation)) : ch.ToString()
				let closeChar = (ch == '}' || ch == ']') && unquoted ? Environment.NewLine + string.Concat(Enumerable.Repeat(indent, --indentation)) + ch : ch.ToString()
				select colon ?? nospace ?? lineBreak ?? (
					openChar.Length > 1 ? openChar : closeChar
				);

			return string.Concat(result);
		}
	}
}

namespace MdlpApiClient.Toolbox
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.CompilerServices;
    using System.Threading.Tasks;

    /// <summary>
    /// Helps limiting requests.
    /// </summary>
    internal class RequestRateLimiter
    {
        // tasks for delaying between the consequent method calls
        public Dictionary<string, Task> RequestTasks { get; } =
            new Dictionary<string, Task>(StringComparer.OrdinalIgnoreCase);

        public Task DelayAsync(TimeSpan span, [CallerMemberName]string methodName = null)
        {
            if (span == TimeSpan.Zero)
            {
                return Task.CompletedTask;
            }

            // null value can't be used as a key
            methodName = methodName ?? string.Empty;

            lock (RequestTasks)
            {
                if (RequestTasks.TryGetValue(methodName, out var task))
                {
                    // next call waits for the current task and more
                    var nextCall = task.IsCompleted ? Task.Delay(span) :
                        task.ContinueWith(t => Task.Delay(span)).Unwrap();

                    RequestTasks[methodName] = nextCall;
                    return task;
                }

                // don't wait
                RequestTasks[methodName] = Task.Delay(span);
                return Task.CompletedTask;
            }
        }

        public void Delay(TimeSpan span, [CallerMemberName]string methodName = null)
        {
            DelayAsync(span, methodName).ConfigureAwait(false).GetAwaiter().GetResult();
        }
    }
}

